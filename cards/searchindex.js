Search.setIndex({"docnames": ["citing", "contributing/build-docs", "contributing/debug", "contributing/dependencies", "contributing/deprecations", "contributing/dev-setup", "contributing/docstring", "contributing/documentation-style-guide", "contributing/index", "contributing/make-a-contribution", "explanation/active-deprecations", "explanation/gotchas", "explanation/index", "explanation/special_topics/classification", "explanation/special_topics/finite_diff_derivatives", "explanation/special_topics/index", "guides/assumptions", "guides/booleans", "guides/index", "guides/solving/index", "index", "install", "modules/abc", "modules/algebras", "modules/assumptions/ask", "modules/assumptions/assume", "modules/assumptions/index", "modules/assumptions/predicates", "modules/assumptions/refine", "modules/calculus/index", "modules/categories", "modules/codegen", "modules/combinatorics/fp_groups", "modules/combinatorics/graycode", "modules/combinatorics/group_constructs", "modules/combinatorics/group_numbers", "modules/combinatorics/index", "modules/combinatorics/named_groups", "modules/combinatorics/partitions", "modules/combinatorics/pc_groups", "modules/combinatorics/perm_groups", "modules/combinatorics/permutations", "modules/combinatorics/polyhedron", "modules/combinatorics/prufer", "modules/combinatorics/subsets", "modules/combinatorics/tensor_can", "modules/combinatorics/testutil", "modules/combinatorics/util", "modules/concrete", "modules/core", "modules/crypto", "modules/diffgeom", "modules/discrete", "modules/evalf", "modules/functions/combinatorial", "modules/functions/elementary", "modules/functions/index", "modules/functions/special", "modules/geometry/curves", "modules/geometry/ellipses", "modules/geometry/entities", "modules/geometry/index", "modules/geometry/lines", "modules/geometry/plane", "modules/geometry/points", "modules/geometry/polygons", "modules/geometry/utils", "modules/holonomic/about", "modules/holonomic/convert", "modules/holonomic/index", "modules/holonomic/internal", "modules/holonomic/operations", "modules/holonomic/represent", "modules/holonomic/uses", "modules/integrals/g-functions", "modules/integrals/index", "modules/integrals/integrals", "modules/interactive", "modules/liealgebras/index", "modules/logic", "modules/matrices/common", "modules/matrices/dense", "modules/matrices/expressions", "modules/matrices/immutablematrices", "modules/matrices/index", "modules/matrices/matrices", "modules/matrices/normalforms", "modules/matrices/sparse", "modules/matrices/sparsetools", "modules/ntheory", "modules/numeric-computation", "modules/parsing", "modules/physics/continuum_mechanics/beam", "modules/physics/continuum_mechanics/beam_problems", "modules/physics/continuum_mechanics/index", "modules/physics/control/control", "modules/physics/control/control_plots", "modules/physics/control/index", "modules/physics/control/lti", "modules/physics/hep/index", "modules/physics/hydrogen", "modules/physics/matrices", "modules/physics/mechanics/advanced", "modules/physics/mechanics/api/body", "modules/physics/mechanics/api/expr_manip", "modules/physics/mechanics/api/joint", "modules/physics/mechanics/api/kane_lagrange", "modules/physics/mechanics/api/linearize", "modules/physics/mechanics/api/part_bod", "modules/physics/mechanics/api/printing", "modules/physics/mechanics/api/system", "modules/physics/mechanics/autolev_parser", "modules/physics/mechanics/examples", "modules/physics/mechanics/examples/bicycle_example", "modules/physics/mechanics/examples/lin_pend_nonmin_example", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system", "modules/physics/mechanics/examples/rollingdisc_example", "modules/physics/mechanics/examples/rollingdisc_example_kane", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints", "modules/physics/mechanics/examples/rollingdisc_example_lagrange", "modules/physics/mechanics/index", "modules/physics/mechanics/kane", "modules/physics/mechanics/lagrange", "modules/physics/mechanics/linearize", "modules/physics/mechanics/masses", "modules/physics/mechanics/reference", "modules/physics/mechanics/sympy_mechanics_for_autolev_users", "modules/physics/mechanics/symsystem", "modules/physics/optics/gaussopt", "modules/physics/optics/index", "modules/physics/optics/medium", "modules/physics/optics/polarization", "modules/physics/optics/utils", "modules/physics/optics/waves", "modules/physics/paulialgebra", "modules/physics/qho_1d", "modules/physics/quantum/anticommutator", "modules/physics/quantum/cartesian", "modules/physics/quantum/cg", "modules/physics/quantum/circuitplot", "modules/physics/quantum/commutator", "modules/physics/quantum/constants", "modules/physics/quantum/dagger", "modules/physics/quantum/gate", "modules/physics/quantum/grover", "modules/physics/quantum/hilbert", "modules/physics/quantum/index", "modules/physics/quantum/innerproduct", "modules/physics/quantum/operator", "modules/physics/quantum/operatorset", "modules/physics/quantum/piab", "modules/physics/quantum/qapply", "modules/physics/quantum/qft", "modules/physics/quantum/qubit", "modules/physics/quantum/represent", "modules/physics/quantum/shor", "modules/physics/quantum/spin", "modules/physics/quantum/state", "modules/physics/quantum/tensorproduct", "modules/physics/secondquant", "modules/physics/sho", "modules/physics/units/dimensions", "modules/physics/units/examples", "modules/physics/units/index", "modules/physics/units/philosophy", "modules/physics/units/prefixes", "modules/physics/units/quantities", "modules/physics/units/unitsystem", "modules/physics/vector/advanced", "modules/physics/vector/api/classes", "modules/physics/vector/api/fieldfunctions", "modules/physics/vector/api/functions", "modules/physics/vector/api/kinematics", "modules/physics/vector/api/printing", "modules/physics/vector/fields", "modules/physics/vector/index", "modules/physics/vector/kinematics", "modules/physics/vector/vectors", "modules/physics/wigner", "modules/plotting", "modules/polys/agca", "modules/polys/basics", "modules/polys/domainmatrix", "modules/polys/domainsintro", "modules/polys/domainsref", "modules/polys/index", "modules/polys/internals", "modules/polys/literature", "modules/polys/numberfields", "modules/polys/reference", "modules/polys/ringseries", "modules/polys/solvers", "modules/polys/wester", "modules/printing", "modules/rewriting", "modules/series/formal", "modules/series/fourier", "modules/series/index", "modules/series/limitseq", "modules/series/sequences", "modules/series/series", "modules/sets", "modules/simplify/fu", "modules/simplify/hyperexpand", "modules/simplify/index", "modules/simplify/simplify", "modules/solvers/diophantine", "modules/solvers/index", "modules/solvers/inequalities", "modules/solvers/ode", "modules/solvers/pde", "modules/solvers/solvers", "modules/solvers/solveset", "modules/stats", "modules/tensor/array", "modules/tensor/array_expressions", "modules/tensor/index", "modules/tensor/index_methods", "modules/tensor/indexed", "modules/tensor/tensor", "modules/tensor/toperators", "modules/testing/index", "modules/testing/pytest", "modules/testing/randtest", "modules/testing/runtests", "modules/utilities/autowrap", "modules/utilities/codegen", "modules/utilities/decorator", "modules/utilities/enumerative", "modules/utilities/exceptions", "modules/utilities/index", "modules/utilities/iterables", "modules/utilities/lambdify", "modules/utilities/memoization", "modules/utilities/misc", "modules/utilities/pkgdata", "modules/utilities/source", "modules/utilities/timeutils", "modules/vector/api/classes", "modules/vector/api/orienterclasses", "modules/vector/api/vectorfunctions", "modules/vector/basics", "modules/vector/coordsys", "modules/vector/examples", "modules/vector/fields", "modules/vector/index", "modules/vector/intro", "modules/vector/vector_integration", "reference/index", "reference/public/basics/index", "reference/public/codegeneration/index", "reference/public/logic/index", "reference/public/matrices/index", "reference/public/numbertheory/index", "reference/public/physics/index", "reference/public/topics/index", "reference/public/utilities/index", "tutorials/index", "tutorials/intro-tutorial/basic_operations", "tutorials/intro-tutorial/calculus", "tutorials/intro-tutorial/features", "tutorials/intro-tutorial/gotchas", "tutorials/intro-tutorial/index", "tutorials/intro-tutorial/intro", "tutorials/intro-tutorial/manipulation", "tutorials/intro-tutorial/matrices", "tutorials/intro-tutorial/next", "tutorials/intro-tutorial/preliminaries", "tutorials/intro-tutorial/printing", "tutorials/intro-tutorial/simplification", "tutorials/intro-tutorial/solvers"], "filenames": ["citing.md", "contributing/build-docs.rst", "contributing/debug.rst", "contributing/dependencies.md", "contributing/deprecations.md", "contributing/dev-setup.rst", "contributing/docstring.rst", "contributing/documentation-style-guide.rst", "contributing/index.rst", "contributing/make-a-contribution.rst", "explanation/active-deprecations.md", "explanation/gotchas.rst", "explanation/index.rst", "explanation/special_topics/classification.rst", "explanation/special_topics/finite_diff_derivatives.rst", "explanation/special_topics/index.rst", "guides/assumptions.rst", "guides/booleans.rst", "guides/index.rst", "guides/solving/index.md", "index.rst", "install.md", "modules/abc.rst", "modules/algebras.rst", "modules/assumptions/ask.rst", "modules/assumptions/assume.rst", "modules/assumptions/index.rst", "modules/assumptions/predicates.rst", "modules/assumptions/refine.rst", "modules/calculus/index.rst", "modules/categories.rst", "modules/codegen.rst", "modules/combinatorics/fp_groups.rst", "modules/combinatorics/graycode.rst", "modules/combinatorics/group_constructs.rst", "modules/combinatorics/group_numbers.rst", "modules/combinatorics/index.rst", "modules/combinatorics/named_groups.rst", "modules/combinatorics/partitions.rst", "modules/combinatorics/pc_groups.rst", "modules/combinatorics/perm_groups.rst", "modules/combinatorics/permutations.rst", "modules/combinatorics/polyhedron.rst", "modules/combinatorics/prufer.rst", "modules/combinatorics/subsets.rst", "modules/combinatorics/tensor_can.rst", "modules/combinatorics/testutil.rst", "modules/combinatorics/util.rst", "modules/concrete.rst", "modules/core.rst", "modules/crypto.rst", "modules/diffgeom.rst", "modules/discrete.rst", "modules/evalf.rst", "modules/functions/combinatorial.rst", "modules/functions/elementary.rst", "modules/functions/index.rst", "modules/functions/special.rst", "modules/geometry/curves.rst", "modules/geometry/ellipses.rst", "modules/geometry/entities.rst", "modules/geometry/index.rst", "modules/geometry/lines.rst", "modules/geometry/plane.rst", "modules/geometry/points.rst", "modules/geometry/polygons.rst", "modules/geometry/utils.rst", "modules/holonomic/about.rst", "modules/holonomic/convert.rst", "modules/holonomic/index.rst", "modules/holonomic/internal.rst", "modules/holonomic/operations.rst", "modules/holonomic/represent.rst", "modules/holonomic/uses.rst", "modules/integrals/g-functions.rst", "modules/integrals/index.rst", "modules/integrals/integrals.rst", "modules/interactive.rst", "modules/liealgebras/index.rst", "modules/logic.rst", "modules/matrices/common.rst", "modules/matrices/dense.rst", "modules/matrices/expressions.rst", "modules/matrices/immutablematrices.rst", "modules/matrices/index.rst", "modules/matrices/matrices.rst", "modules/matrices/normalforms.rst", "modules/matrices/sparse.rst", "modules/matrices/sparsetools.rst", "modules/ntheory.rst", "modules/numeric-computation.rst", "modules/parsing.rst", "modules/physics/continuum_mechanics/beam.rst", "modules/physics/continuum_mechanics/beam_problems.rst", "modules/physics/continuum_mechanics/index.rst", "modules/physics/control/control.rst", "modules/physics/control/control_plots.rst", "modules/physics/control/index.rst", "modules/physics/control/lti.rst", "modules/physics/hep/index.rst", "modules/physics/hydrogen.rst", "modules/physics/matrices.rst", "modules/physics/mechanics/advanced.rst", "modules/physics/mechanics/api/body.rst", "modules/physics/mechanics/api/expr_manip.rst", "modules/physics/mechanics/api/joint.rst", "modules/physics/mechanics/api/kane_lagrange.rst", "modules/physics/mechanics/api/linearize.rst", "modules/physics/mechanics/api/part_bod.rst", "modules/physics/mechanics/api/printing.rst", "modules/physics/mechanics/api/system.rst", "modules/physics/mechanics/autolev_parser.rst", "modules/physics/mechanics/examples.rst", "modules/physics/mechanics/examples/bicycle_example.rst", "modules/physics/mechanics/examples/lin_pend_nonmin_example.rst", "modules/physics/mechanics/examples/multi_degree_freedom_holonomic_system.rst", "modules/physics/mechanics/examples/rollingdisc_example.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane.rst", "modules/physics/mechanics/examples/rollingdisc_example_kane_constraints.rst", "modules/physics/mechanics/examples/rollingdisc_example_lagrange.rst", "modules/physics/mechanics/index.rst", "modules/physics/mechanics/kane.rst", "modules/physics/mechanics/lagrange.rst", "modules/physics/mechanics/linearize.rst", "modules/physics/mechanics/masses.rst", "modules/physics/mechanics/reference.rst", "modules/physics/mechanics/sympy_mechanics_for_autolev_users.rst", "modules/physics/mechanics/symsystem.rst", "modules/physics/optics/gaussopt.rst", "modules/physics/optics/index.rst", "modules/physics/optics/medium.rst", "modules/physics/optics/polarization.rst", "modules/physics/optics/utils.rst", "modules/physics/optics/waves.rst", "modules/physics/paulialgebra.rst", "modules/physics/qho_1d.rst", "modules/physics/quantum/anticommutator.rst", "modules/physics/quantum/cartesian.rst", "modules/physics/quantum/cg.rst", "modules/physics/quantum/circuitplot.rst", "modules/physics/quantum/commutator.rst", "modules/physics/quantum/constants.rst", "modules/physics/quantum/dagger.rst", "modules/physics/quantum/gate.rst", "modules/physics/quantum/grover.rst", "modules/physics/quantum/hilbert.rst", "modules/physics/quantum/index.rst", "modules/physics/quantum/innerproduct.rst", "modules/physics/quantum/operator.rst", "modules/physics/quantum/operatorset.rst", "modules/physics/quantum/piab.rst", "modules/physics/quantum/qapply.rst", "modules/physics/quantum/qft.rst", "modules/physics/quantum/qubit.rst", "modules/physics/quantum/represent.rst", "modules/physics/quantum/shor.rst", "modules/physics/quantum/spin.rst", "modules/physics/quantum/state.rst", "modules/physics/quantum/tensorproduct.rst", "modules/physics/secondquant.rst", "modules/physics/sho.rst", "modules/physics/units/dimensions.rst", "modules/physics/units/examples.rst", "modules/physics/units/index.rst", "modules/physics/units/philosophy.rst", "modules/physics/units/prefixes.rst", "modules/physics/units/quantities.rst", "modules/physics/units/unitsystem.rst", "modules/physics/vector/advanced.rst", "modules/physics/vector/api/classes.rst", "modules/physics/vector/api/fieldfunctions.rst", "modules/physics/vector/api/functions.rst", "modules/physics/vector/api/kinematics.rst", "modules/physics/vector/api/printing.rst", "modules/physics/vector/fields.rst", "modules/physics/vector/index.rst", "modules/physics/vector/kinematics.rst", "modules/physics/vector/vectors.rst", "modules/physics/wigner.rst", "modules/plotting.rst", "modules/polys/agca.rst", "modules/polys/basics.rst", "modules/polys/domainmatrix.rst", "modules/polys/domainsintro.rst", "modules/polys/domainsref.rst", "modules/polys/index.rst", "modules/polys/internals.rst", "modules/polys/literature.rst", "modules/polys/numberfields.rst", "modules/polys/reference.rst", "modules/polys/ringseries.rst", "modules/polys/solvers.rst", "modules/polys/wester.rst", "modules/printing.rst", "modules/rewriting.rst", "modules/series/formal.rst", "modules/series/fourier.rst", "modules/series/index.rst", "modules/series/limitseq.rst", "modules/series/sequences.rst", "modules/series/series.rst", "modules/sets.rst", "modules/simplify/fu.rst", "modules/simplify/hyperexpand.rst", "modules/simplify/index.rst", "modules/simplify/simplify.rst", "modules/solvers/diophantine.rst", "modules/solvers/index.rst", "modules/solvers/inequalities.rst", "modules/solvers/ode.rst", "modules/solvers/pde.rst", "modules/solvers/solvers.rst", "modules/solvers/solveset.rst", "modules/stats.rst", "modules/tensor/array.rst", "modules/tensor/array_expressions.rst", "modules/tensor/index.rst", "modules/tensor/index_methods.rst", "modules/tensor/indexed.rst", "modules/tensor/tensor.rst", "modules/tensor/toperators.rst", "modules/testing/index.rst", "modules/testing/pytest.rst", "modules/testing/randtest.rst", "modules/testing/runtests.rst", "modules/utilities/autowrap.rst", "modules/utilities/codegen.rst", "modules/utilities/decorator.rst", "modules/utilities/enumerative.rst", "modules/utilities/exceptions.rst", "modules/utilities/index.rst", "modules/utilities/iterables.rst", "modules/utilities/lambdify.rst", "modules/utilities/memoization.rst", "modules/utilities/misc.rst", "modules/utilities/pkgdata.rst", "modules/utilities/source.rst", "modules/utilities/timeutils.rst", "modules/vector/api/classes.rst", "modules/vector/api/orienterclasses.rst", "modules/vector/api/vectorfunctions.rst", "modules/vector/basics.rst", "modules/vector/coordsys.rst", "modules/vector/examples.rst", "modules/vector/fields.rst", "modules/vector/index.rst", "modules/vector/intro.rst", "modules/vector/vector_integration.rst", "reference/index.rst", "reference/public/basics/index.rst", "reference/public/codegeneration/index.rst", "reference/public/logic/index.rst", "reference/public/matrices/index.rst", "reference/public/numbertheory/index.rst", "reference/public/physics/index.rst", "reference/public/topics/index.rst", "reference/public/utilities/index.rst", "tutorials/index.rst", "tutorials/intro-tutorial/basic_operations.rst", "tutorials/intro-tutorial/calculus.rst", "tutorials/intro-tutorial/features.rst", "tutorials/intro-tutorial/gotchas.rst", "tutorials/intro-tutorial/index.rst", "tutorials/intro-tutorial/intro.rst", "tutorials/intro-tutorial/manipulation.rst", "tutorials/intro-tutorial/matrices.rst", "tutorials/intro-tutorial/next.rst", "tutorials/intro-tutorial/preliminaries.rst", "tutorials/intro-tutorial/printing.rst", "tutorials/intro-tutorial/simplification.rst", "tutorials/intro-tutorial/solvers.rst"], "titles": ["Citing SymPy", "Build the Documentation", "Debugging", "Dependencies", "Deprecation Policy", "Development Environment Setup", "SymPy Docstrings Style Guide", "Documentation Style Guide", "Contributing", "Making a Contribution", "List of active deprecations", "Gotchas and Pitfalls", "Explanations", "Classification of SymPy objects", "Finite Difference Approximations to Derivatives", "SymPy Special Topics", "Assumptions", "Symbolic and fuzzy booleans", "How-to Guides", "Solve Equations", "SymPy 1.11.dev Documentation", "Installation", "abc", "Algebras", "Ask", "Assume", "Assumptions", "Predicates", "Refine", "Calculus", "Category Theory", "Introduction", "Finitely Presented Groups", "Gray Code", "Group constructors", "Nilpotent, Abelian and Cyclic Numbers", "Combinatorics", "Named Groups", "Partitions", "Polycyclic Groups", "Permutation Groups", "Permutations", "Polyhedron", "Prufer Sequences", "Subsets", "Tensor Canonicalization", "Test Utilities", "Utilities", "Concrete", "Core", "Cryptography", "Differential Geometry", "Discrete", "Numerical Evaluation", "Combinatorial", "Elementary", "Functions", "Special", "Curves", "Ellipses", "Entities", "Geometry", "Lines", "Plane", "Points", "Polygons", "Utils", "About Holonomic Functions", "Converting other representations to holonomic", "Holonomic", "Internal API", "Operations on holonomic functions", "Representation of holonomic functions in SymPy", "Uses and Current limitations", "Computing Integrals using Meijer G-Functions", "Integrals", "Integrals", "Interactive", "Lie Algebra", "Logic", "Common Matrices", "Dense Matrices", "Matrix Expressions", "Immutable Matrices", "Matrices", "Matrices (linear algebra)", "Matrix Normal Forms", "Sparse Matrices", "Sparse Tools", "Ntheory Class Reference", "Numeric Computation", "Parsing", "Beam (Docstrings)", "Solving Beam Bending Problems using Singularity Functions", "Continuum Mechanics", "Control", "Control System Plots", "Control Module", "Control API", "High energy physics", "Hydrogen Wavefunctions", "Matrices", "Potential Issues/Advanced Topics/Future Features in Physics/Mechanics", "Body (Docstrings)", "Expression Manipulation (Docstrings)", "Joint (Docstrings)", "Kane\u2019s Method &amp; Lagrange\u2019s Method (Docstrings)", "Linearization (Docstrings)", "Masses, Inertias &amp; Particles, RigidBodys (Docstrings)", "Printing (Docstrings)", "SymbolicSystem (Docstrings)", "Autolev Parser", "Examples for Physics/Mechanics", "A bicycle", "Nonminimal Coordinates Pendulum", "Multi Degree of Freedom Holonomic System", "A rolling disc", "A rolling disc, with Kane\u2019s method", "A rolling disc, with Kane\u2019s method and constraint forces", "A rolling disc using Lagrange\u2019s Method", "Classical Mechanics", "Kane\u2019s Method in Physics/Mechanics", "Lagrange\u2019s Method in Physics/Mechanics", "Linearization in Physics/Mechanics", "Masses, Inertias, Particles and Rigid Bodies in Physics/Mechanics", "References for Physics/Mechanics", "SymPy Mechanics for Autolev Users", "Symbolic Systems in Physics/Mechanics", "Gaussian Optics", "Optics Module", "Medium", "Polarization", "Utilities", "Waves", "Pauli Algebra", "Quantum Harmonic Oscillator in 1-D", "Anticommutator", "Cartesian Operators and States", "Clebsch-Gordan Coefficients", "Circuit Plot", "Commutator", "Constants", "Dagger", "Gates", "Grover\u2019s Algorithm", "Hilbert Space", "Quantum Mechanics", "Inner Product", "Operator", "Operator/State Helper Functions", "Particle in a Box", "Qapply", "QFT", "Qubit", "Represent", "Shor\u2019s Algorithm", "Spin", "State", "Tensor Product", "Second Quantization", "Quantum Harmonic Oscillator in 3-D", "Dimensions and dimension systems", "Examples", "Unit systems", "Philosophy behind unit systems", "Unit prefixes", "Physical quantities", "Units and unit systems", "Potential Issues/Advanced Topics/Future Features in Physics/Vector Module", "Essential Classes", "Docstrings for basic field functions", "Essential Functions (Docstrings)", "Kinematics (Docstrings)", "Printing (Docstrings)", "Scalar and Vector Field Functionality", "The Physics Vector Module", "Vector: Kinematics", "Vector &amp; ReferenceFrame", "Wigner Symbols", "Plotting", "AGCA - Algebraic Geometry and Commutative Algebra Module", "Basic functionality of the module", "Introducing the domainmatrix of the poly module", "Introducing the Domains of the poly module", "Reference docs for the Poly Domains", "Polynomial Manipulation", "Internals of the Polynomial Manipulation Module", "Literature", "Number Fields", "Polynomials Manipulation Module Reference", "Series Manipulation using Polynomials", "Poly solvers", "Examples from Wester\u2019s Article", "Printing", "Term Rewriting", "Formal Power Series", "Fourier Series", "Series", "Limits of Sequences", "Sequences", "Series Expansions", "Sets", "Hongguang Fu\u2019s Trigonometric Simplification", "Hypergeometric Expansion", "Simplify", "Simplify", "Diophantine", "Solvers", "Inequality Solvers", "ODE", "PDE", "Solvers", "Solveset", "Stats", "N-dim array", "N-dim array expressions", "Tensor", "Methods", "Indexed Objects", "Tensor", "Tensor Operators", "Testing", "pytest", "Randomised Testing", "Run Tests", "Autowrap Module", "Codegen", "Decorator", "Enumerative", "Exceptions and Warnings", "Utilities", "Iterables", "Lambdify", "Memoization", "Miscellaneous", "PKGDATA", "Source Code Inspection", "Timing Utilities", "Essential Classes in sympy.vector (docstrings)", "Orienter classes (docstrings)", "Essential Functions in sympy.vector (docstrings)", "Basic Implementation details", "More about Coordinate Systems", "General examples of usage", "Scalar and Vector Field Functionality", "Vector", "Introduction", "Applications of Vector Integrals", "API Reference", "Basics", "Code Generation", "Logic", "Matrices", "Number Theory", "Physics", "Topics", "Utilities", "Tutorials", "Basic Operations", "Calculus", "SymPy Features", "Gotchas", "Introductory Tutorial", "Introduction", "Advanced Expression Manipulation", "Matrices", "What\u2019s Next", "Preliminaries", "Printing", "Simplification", "Solvers"], "terms": {"To": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 14, 17, 21, 22, 25, 26, 29, 30, 31, 32, 39, 40, 41, 45, 48, 49, 50, 51, 53, 54, 55, 57, 62, 72, 74, 76, 78, 79, 80, 82, 85, 89, 91, 92, 93, 96, 98, 99, 101, 103, 105, 106, 122, 123, 126, 136, 140, 153, 162, 164, 168, 174, 177, 179, 181, 183, 184, 186, 188, 189, 190, 192, 193, 200, 201, 203, 206, 209, 210, 211, 212, 213, 214, 217, 218, 222, 224, 225, 228, 229, 231, 232, 238, 239, 241, 242, 244, 246, 247, 258, 259, 261, 262, 264, 265, 268, 269, 270], "public": [0, 6, 31, 49, 50, 71, 183, 184, 186, 187, 191, 206, 209, 213, 227, 238], "us": [0, 1, 2, 4, 5, 6, 8, 11, 13, 15, 16, 17, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 32, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 121, 122, 126, 127, 128, 131, 132, 134, 136, 138, 139, 140, 143, 145, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 215, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 240, 241, 243, 244, 246, 247, 249, 250, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "meurer": 0, "A": [0, 3, 4, 6, 7, 10, 11, 13, 15, 16, 17, 20, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 91, 92, 93, 96, 98, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 120, 121, 124, 125, 126, 127, 128, 131, 133, 136, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 167, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 231, 232, 238, 239, 241, 242, 243, 244, 246, 247, 254, 260, 262, 264, 265, 269], "smith": [0, 10, 86, 182], "cp": [0, 41, 90, 181], "paprocki": 0, "m": [0, 1, 10, 11, 14, 16, 23, 27, 31, 32, 37, 38, 40, 41, 45, 48, 49, 50, 51, 52, 54, 57, 59, 61, 65, 66, 74, 76, 78, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 98, 100, 101, 103, 106, 107, 108, 110, 111, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 135, 142, 156, 157, 160, 162, 164, 174, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 203, 205, 206, 209, 211, 212, 213, 214, 215, 218, 219, 225, 226, 228, 231, 233, 238, 240, 242, 246, 247, 259, 265, 268, 269, 270], "\u010dert\u00edk": 0, "o": [0, 1, 6, 11, 14, 16, 22, 30, 31, 40, 41, 47, 49, 50, 55, 57, 59, 60, 62, 63, 65, 71, 74, 89, 93, 103, 106, 108, 110, 111, 121, 122, 123, 124, 126, 127, 149, 159, 170, 172, 174, 176, 186, 187, 189, 190, 193, 195, 200, 203, 209, 213, 218, 224, 231, 234, 235, 240, 243, 259], "kirpichev": 0, "sb": 0, "rocklin": 0, "kumar": [0, 212], "ivanov": 0, "": [0, 3, 4, 5, 6, 7, 9, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 65, 66, 67, 68, 71, 72, 74, 76, 77, 78, 79, 80, 82, 83, 85, 88, 89, 90, 91, 92, 93, 96, 98, 100, 102, 103, 105, 108, 111, 113, 116, 120, 124, 126, 130, 131, 132, 138, 139, 141, 143, 145, 146, 149, 153, 154, 156, 157, 159, 162, 164, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 213, 219, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 239, 243, 244, 245, 246, 249, 257, 258, 259, 261, 262, 263, 264, 265, 269, 270], "moor": [0, 82, 85], "jk": 0, "singh": 0, "rathnayak": 0, "t": [0, 1, 4, 6, 7, 10, 11, 17, 23, 26, 27, 29, 31, 32, 33, 40, 41, 42, 43, 45, 49, 50, 51, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 76, 78, 79, 80, 81, 82, 85, 89, 90, 91, 98, 99, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 121, 122, 123, 124, 126, 127, 131, 133, 139, 143, 155, 157, 159, 161, 162, 164, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 196, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 219, 222, 224, 227, 231, 232, 238, 240, 242, 246, 258, 259, 263, 264, 265, 268, 269, 270], "vig": 0, "granger": [0, 145], "BE": 0, "muller": 0, "rp": [0, 65, 131], "bonazzi": 0, "f": [0, 1, 6, 10, 11, 14, 29, 30, 31, 32, 39, 40, 41, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 67, 72, 73, 74, 76, 78, 80, 82, 85, 89, 90, 91, 93, 96, 106, 110, 115, 120, 121, 122, 126, 128, 132, 133, 144, 145, 148, 157, 159, 162, 169, 173, 174, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 196, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 228, 231, 232, 234, 243, 244, 247, 258, 259, 264, 268, 269, 270], "gupta": [0, 212], "h": [0, 11, 14, 29, 30, 31, 32, 33, 40, 45, 48, 49, 50, 54, 57, 71, 74, 76, 80, 81, 85, 86, 91, 98, 108, 124, 128, 131, 143, 145, 148, 153, 157, 164, 178, 179, 180, 181, 182, 186, 187, 188, 189, 192, 193, 201, 205, 209, 211, 212, 213, 214, 219, 226, 247, 259, 268], "vat": 0, "johansson": 0, "pedregosa": 0, "curri": [0, 145], "mj": 0, "terrel": 0, "ar": [0, 1, 3, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 134, 136, 138, 140, 143, 145, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 230, 231, 232, 234, 238, 239, 240, 241, 242, 243, 244, 246, 248, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "rou\u010dka": 0, "\u0161": 0, "saboo": 0, "fernando": 0, "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 145, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270], "kulal": 0, "cimrman": 0, "r": [0, 1, 6, 7, 10, 11, 14, 16, 23, 30, 31, 32, 33, 40, 41, 49, 50, 51, 53, 54, 55, 62, 63, 65, 67, 71, 72, 74, 76, 85, 89, 91, 93, 98, 100, 103, 106, 107, 108, 110, 111, 113, 114, 117, 118, 119, 123, 124, 125, 126, 127, 128, 131, 155, 156, 159, 160, 162, 169, 170, 172, 174, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 200, 201, 203, 205, 206, 209, 211, 212, 213, 219, 224, 226, 228, 238, 240, 242, 243, 244, 247, 269], "scopatz": 0, "2017": [0, 178], "symbol": [0, 3, 6, 7, 10, 12, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 39, 41, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 79, 80, 82, 85, 89, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 124, 126, 128, 131, 132, 133, 134, 136, 138, 139, 141, 143, 145, 147, 148, 151, 154, 156, 157, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 220, 225, 231, 232, 238, 239, 240, 242, 243, 244, 247, 249, 254, 258, 259, 262, 264, 265, 268, 269, 270], "comput": [0, 3, 4, 6, 7, 10, 11, 14, 16, 17, 19, 20, 21, 23, 29, 31, 32, 33, 36, 38, 40, 41, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 64, 68, 71, 72, 73, 75, 76, 78, 80, 82, 85, 86, 88, 89, 91, 93, 96, 98, 102, 105, 106, 107, 110, 111, 113, 117, 120, 126, 143, 144, 145, 153, 158, 159, 161, 163, 164, 168, 170, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 195, 196, 198, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 215, 225, 228, 231, 232, 238, 239, 240, 241, 242, 243, 244, 246, 249, 254, 258, 259, 261, 262, 265, 269], "python": [0, 1, 2, 3, 4, 5, 6, 7, 10, 13, 16, 17, 19, 20, 21, 24, 25, 26, 29, 41, 49, 50, 53, 55, 61, 77, 79, 80, 82, 85, 89, 90, 91, 92, 102, 111, 126, 169, 179, 180, 181, 183, 184, 190, 192, 193, 201, 205, 209, 212, 214, 224, 225, 226, 227, 228, 231, 232, 234, 238, 250, 261, 262, 263, 264, 265, 267, 268, 269], "peerj": 0, "scienc": [0, 41, 74, 85, 125, 126, 180, 187, 203, 259], "3": [0, 4, 5, 7, 11, 12, 14, 16, 17, 19, 21, 23, 24, 26, 27, 28, 29, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 104, 108, 110, 113, 114, 115, 117, 118, 119, 120, 122, 123, 126, 127, 128, 130, 132, 136, 138, 139, 140, 144, 148, 153, 154, 156, 158, 159, 162, 165, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 224, 225, 227, 228, 229, 231, 232, 234, 236, 238, 239, 240, 241, 242, 244, 246, 247, 254, 258, 259, 261, 263, 264, 265, 268, 269, 270], "e103": 0, "http": [0, 1, 3, 4, 5, 6, 7, 10, 16, 21, 23, 25, 26, 27, 29, 30, 31, 33, 37, 38, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 65, 66, 67, 71, 74, 76, 77, 78, 79, 80, 82, 85, 89, 92, 96, 98, 100, 101, 128, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 147, 148, 157, 159, 169, 171, 173, 175, 178, 187, 189, 192, 193, 196, 198, 200, 201, 202, 205, 206, 209, 212, 213, 225, 226, 227, 229, 231, 232, 234, 238, 239, 243, 245, 247, 265, 268], "doi": [0, 6, 29, 41, 85, 187, 202, 205, 213], "org": [0, 3, 6, 7, 11, 16, 23, 25, 26, 27, 29, 30, 31, 37, 38, 40, 41, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 76, 77, 78, 79, 80, 82, 85, 89, 96, 98, 100, 101, 128, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 147, 148, 157, 159, 169, 171, 173, 175, 187, 189, 193, 196, 200, 201, 202, 206, 209, 212, 213, 225, 226, 227, 229, 231, 238, 239, 243, 245, 247, 265, 268], "10": [0, 6, 11, 12, 21, 23, 29, 31, 38, 40, 41, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 62, 63, 65, 66, 74, 76, 77, 79, 80, 82, 85, 86, 89, 90, 91, 92, 94, 96, 98, 99, 104, 108, 111, 113, 126, 128, 132, 143, 153, 154, 165, 169, 170, 171, 172, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 196, 199, 200, 201, 202, 205, 206, 209, 212, 213, 214, 223, 224, 229, 231, 232, 234, 238, 240, 258, 265, 269], "7717": 0, "c": [0, 1, 3, 11, 14, 16, 22, 23, 29, 30, 33, 34, 38, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 59, 61, 62, 63, 65, 66, 72, 74, 76, 78, 79, 80, 82, 85, 89, 90, 91, 92, 93, 98, 100, 102, 104, 105, 106, 111, 115, 117, 118, 119, 122, 123, 124, 126, 128, 132, 138, 139, 140, 143, 145, 148, 153, 156, 158, 159, 164, 169, 172, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 218, 219, 225, 226, 228, 231, 234, 235, 238, 239, 240, 241, 242, 243, 244, 247, 250, 256, 259, 261, 268, 269, 270], "103": [0, 40], "bibtex": 0, "entri": [0, 10, 27, 32, 39, 41, 47, 50, 61, 74, 78, 80, 81, 82, 84, 88, 106, 111, 113, 124, 131, 182, 186, 188, 189, 203, 213, 232], "latex": [0, 1, 3, 6, 21, 57, 77, 168, 169, 173, 177, 179, 184, 193, 256, 263, 264], "user": [0, 1, 3, 4, 5, 6, 7, 10, 13, 15, 16, 30, 31, 32, 40, 41, 48, 49, 50, 51, 57, 61, 74, 78, 82, 85, 91, 92, 93, 96, 98, 102, 111, 120, 122, 124, 127, 147, 148, 157, 163, 164, 168, 169, 172, 176, 180, 183, 186, 188, 190, 191, 192, 193, 194, 202, 205, 207, 211, 212, 213, 222, 225, 226, 228, 229, 232, 238, 241, 242, 247, 258, 261, 262, 264, 265, 266], "articl": [0, 49, 50, 82, 85, 185, 187, 188, 193, 238, 263], "titl": [0, 6, 7, 179], "author": [0, 6, 89, 145, 188, 254], "aaron": 0, "christoph": [0, 238], "p": [0, 1, 10, 11, 14, 16, 17, 23, 25, 26, 27, 31, 32, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 63, 64, 65, 66, 71, 72, 74, 76, 80, 82, 85, 89, 91, 92, 93, 98, 99, 103, 105, 106, 107, 108, 110, 111, 114, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 138, 157, 159, 164, 170, 172, 174, 176, 178, 179, 181, 182, 183, 185, 186, 187, 189, 190, 193, 195, 196, 200, 201, 203, 205, 206, 209, 211, 212, 213, 214, 218, 219, 231, 238, 240, 241, 242, 243, 244, 246, 265, 269], "mateusz": 0, "v": [0, 1, 5, 18, 23, 31, 39, 45, 48, 49, 50, 51, 52, 53, 63, 74, 78, 80, 85, 89, 93, 103, 104, 108, 113, 123, 124, 126, 127, 131, 132, 144, 159, 164, 169, 171, 172, 174, 176, 177, 179, 185, 186, 187, 188, 189, 193, 203, 205, 206, 209, 211, 213, 224, 231, 238, 240, 241, 242, 243, 244, 246], "ert": 0, "k": [0, 7, 11, 16, 23, 29, 30, 31, 32, 33, 35, 39, 40, 43, 44, 47, 48, 49, 50, 52, 53, 54, 55, 57, 62, 67, 74, 76, 79, 80, 82, 85, 89, 106, 115, 121, 123, 124, 126, 133, 147, 148, 151, 155, 157, 159, 168, 174, 178, 180, 182, 183, 185, 186, 187, 188, 189, 190, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 209, 211, 213, 214, 215, 217, 218, 219, 220, 224, 228, 231, 238, 239, 240, 241, 242, 243, 244, 246, 247, 268, 269], "ond": 0, "ej": 0, "sergei": 0, "b": [0, 5, 10, 11, 16, 17, 23, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 65, 72, 74, 76, 78, 79, 80, 81, 82, 85, 89, 91, 92, 93, 96, 98, 103, 104, 106, 107, 108, 111, 114, 115, 123, 124, 126, 128, 131, 136, 138, 140, 142, 147, 148, 151, 156, 157, 158, 159, 169, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 224, 227, 228, 231, 234, 238, 239, 240, 241, 242, 243, 259, 261, 265, 269, 270], "matthew": 0, "amit": [0, 212], "sergiu": 0, "jason": [0, 193], "sartaj": 0, "thilina": 0, "sean": 0, "brian": [0, 145], "e": [0, 1, 3, 4, 5, 6, 7, 10, 11, 16, 17, 22, 23, 27, 29, 30, 31, 32, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 78, 79, 80, 85, 89, 91, 92, 93, 98, 99, 103, 106, 108, 110, 111, 122, 123, 126, 127, 128, 131, 138, 139, 143, 148, 149, 151, 154, 156, 158, 159, 164, 165, 169, 173, 174, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 238, 241, 244, 246, 247, 258, 259, 263, 264, 269], "richard": [0, 89], "francesco": 0, "harsh": [0, 212], "shivam": 0, "fredrik": 0, "fabian": 0, "j": [0, 7, 10, 11, 23, 27, 29, 31, 32, 35, 39, 40, 41, 45, 47, 48, 50, 51, 53, 54, 57, 71, 74, 76, 78, 80, 82, 85, 89, 96, 99, 124, 125, 126, 131, 138, 139, 156, 159, 164, 168, 174, 178, 180, 182, 184, 186, 187, 188, 189, 190, 192, 193, 195, 201, 203, 205, 206, 209, 211, 212, 213, 214, 215, 217, 218, 219, 220, 225, 231, 238, 239, 240, 241, 242, 243, 244, 246, 247], "andi": [0, 125], "rou": 0, "ka": 0, "n": [0, 5, 6, 7, 11, 14, 16, 22, 27, 29, 31, 32, 33, 35, 37, 38, 39, 40, 41, 43, 45, 47, 48, 50, 51, 53, 54, 55, 56, 57, 59, 62, 63, 64, 65, 66, 71, 72, 74, 76, 78, 79, 80, 82, 85, 86, 89, 91, 92, 93, 98, 100, 101, 103, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 132, 133, 135, 139, 144, 145, 148, 153, 155, 156, 157, 159, 160, 162, 164, 166, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 211, 212, 213, 216, 218, 219, 222, 225, 231, 233, 234, 238, 239, 240, 241, 242, 246, 259, 265, 268, 269, 270], "ashutosh": 0, "isuru": 0, "sumith": 0, "robert": [0, 213], "anthoni": 0, "year": [0, 4, 6, 10], "month": 0, "jan": [0, 50], "keyword": [0, 4, 6, 30, 31, 32, 40, 41, 49, 50, 53, 54, 62, 64, 65, 66, 80, 85, 89, 92, 96, 98, 106, 121, 122, 153, 159, 173, 179, 181, 183, 184, 186, 188, 189, 192, 193, 194, 200, 205, 206, 211, 218, 224, 225, 227, 229, 232, 234, 242, 265], "algebra": [0, 7, 11, 16, 19, 20, 26, 32, 40, 49, 50, 53, 55, 67, 70, 71, 72, 74, 76, 79, 80, 84, 86, 89, 90, 91, 110, 120, 126, 127, 175, 178, 181, 182, 184, 185, 186, 187, 189, 190, 193, 195, 203, 206, 207, 209, 212, 248, 249, 252, 254, 255, 260, 261, 263, 265], "system": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 17, 18, 19, 20, 24, 26, 40, 49, 50, 51, 55, 74, 77, 78, 79, 80, 85, 90, 91, 92, 95, 97, 98, 102, 106, 107, 108, 110, 111, 112, 113, 114, 117, 119, 120, 121, 122, 123, 124, 126, 137, 138, 153, 156, 157, 159, 162, 166, 169, 172, 173, 174, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 201, 202, 207, 208, 212, 213, 224, 225, 238, 239, 240, 243, 245, 247, 254, 261, 263, 265, 269, 270], "abstract": [0, 10, 29, 30, 38, 49, 51, 55, 57, 62, 67, 82, 105, 111, 143, 145, 154, 157, 158, 159, 180, 185, 188, 212, 213, 215, 219, 226, 246, 250], "an": [0, 1, 3, 4, 6, 7, 9, 11, 13, 14, 16, 17, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 102, 103, 105, 106, 108, 110, 113, 114, 120, 121, 123, 124, 126, 127, 130, 131, 132, 136, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 152, 153, 154, 156, 157, 159, 160, 161, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 238, 239, 241, 242, 244, 245, 246, 247, 255, 258, 259, 260, 261, 262, 263, 265, 268, 269, 270], "open": [0, 1, 3, 4, 6, 7, 9, 10, 21, 29, 49, 51, 55, 76, 79, 98, 111, 126, 193, 201, 208, 212, 213, 235, 263, 265], "sourc": [0, 1, 5, 6, 7, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 91, 92, 96, 98, 99, 100, 101, 103, 104, 105, 106, 107, 108, 110, 111, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 169, 170, 171, 172, 173, 174, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 244, 256, 263], "written": [0, 3, 6, 7, 16, 20, 27, 31, 37, 40, 41, 45, 49, 54, 57, 61, 67, 72, 74, 78, 79, 88, 89, 114, 120, 126, 159, 174, 175, 176, 177, 180, 181, 189, 193, 196, 200, 203, 206, 209, 226, 244, 246, 262, 263, 264, 269], "pure": [0, 3, 23, 50, 55, 76, 79, 82, 98, 123, 164, 183, 184, 186, 189, 193, 213, 231], "It": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 20, 21, 23, 24, 25, 26, 29, 30, 31, 37, 40, 41, 43, 44, 45, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 62, 65, 66, 72, 74, 76, 78, 79, 85, 89, 90, 91, 92, 93, 96, 98, 100, 102, 103, 104, 105, 106, 111, 113, 118, 120, 121, 122, 124, 126, 128, 132, 133, 143, 148, 149, 154, 155, 156, 157, 158, 159, 161, 164, 167, 169, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 196, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 227, 228, 229, 232, 238, 240, 241, 242, 244, 246, 247, 258, 259, 261, 262, 263, 264, 265, 267, 268, 269], "built": [0, 1, 3, 6, 7, 11, 13, 24, 26, 32, 49, 55, 76, 111, 126, 181, 184, 193, 194, 198, 209, 212, 213, 219, 228, 231, 232, 263, 264, 268], "focu": [0, 10, 16, 59, 211, 263], "extens": [0, 3, 6, 7, 16, 20, 40, 49, 55, 61, 65, 76, 85, 108, 126, 181, 183, 184, 185, 186, 187, 188, 189, 193, 203, 205, 209, 211, 212, 225, 226, 235, 262, 269], "eas": [0, 111, 177, 179, 193, 196], "through": [0, 4, 6, 11, 16, 21, 29, 31, 40, 41, 43, 48, 49, 50, 53, 54, 57, 59, 60, 61, 62, 63, 65, 74, 78, 79, 85, 89, 92, 93, 96, 103, 106, 111, 113, 120, 124, 130, 131, 169, 179, 180, 186, 188, 193, 199, 203, 205, 209, 211, 212, 213, 214, 225, 231, 238, 239, 244, 247, 260, 261, 262, 267], "both": [0, 3, 4, 6, 7, 10, 11, 13, 16, 17, 22, 23, 29, 30, 31, 41, 44, 45, 47, 48, 49, 50, 54, 55, 57, 64, 73, 74, 76, 79, 80, 85, 89, 91, 92, 93, 98, 103, 105, 106, 113, 114, 115, 123, 131, 132, 143, 149, 156, 159, 164, 169, 172, 176, 177, 179, 180, 181, 183, 184, 186, 188, 189, 191, 192, 193, 195, 200, 201, 202, 203, 205, 206, 209, 211, 212, 214, 218, 224, 226, 231, 232, 238, 239, 259, 262, 263, 264, 269, 270], "interact": [0, 22, 49, 63, 76, 83, 85, 126, 156, 173, 177, 183, 184, 205, 213, 229, 236, 248, 255, 256, 261, 263, 264, 268, 269], "programmat": [0, 13, 212, 242], "applic": [0, 7, 10, 32, 33, 39, 40, 41, 42, 49, 50, 55, 76, 80, 85, 89, 92, 106, 110, 111, 120, 123, 125, 126, 143, 144, 169, 172, 176, 181, 186, 187, 188, 189, 193, 195, 200, 206, 209, 212, 226, 231, 238, 244, 245, 263], "These": [0, 3, 6, 7, 10, 11, 12, 14, 16, 17, 20, 22, 30, 31, 40, 48, 49, 50, 51, 57, 74, 76, 79, 85, 91, 93, 98, 106, 107, 113, 114, 118, 123, 126, 149, 154, 155, 169, 170, 174, 176, 177, 180, 181, 182, 183, 184, 186, 193, 203, 206, 209, 210, 212, 213, 215, 220, 224, 225, 226, 231, 244, 259, 262, 265, 268, 269], "characterist": [0, 51, 67, 85, 176, 182, 184, 186, 187, 209, 211, 265], "have": [0, 1, 4, 5, 6, 7, 11, 13, 14, 16, 17, 21, 23, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 64, 65, 67, 72, 73, 74, 76, 78, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 93, 96, 98, 99, 101, 102, 106, 108, 111, 112, 113, 118, 120, 123, 126, 143, 145, 148, 152, 154, 156, 157, 158, 159, 161, 162, 163, 164, 167, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 198, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 217, 219, 220, 222, 223, 224, 226, 227, 228, 231, 232, 234, 238, 239, 241, 242, 243, 244, 247, 258, 259, 261, 262, 263, 264, 265, 268, 269, 270], "led": 0, "becom": [0, 4, 6, 7, 10, 11, 14, 16, 20, 40, 45, 48, 49, 50, 53, 56, 72, 77, 85, 91, 173, 176, 180, 181, 183, 190, 193, 196, 202, 209, 212, 213, 219, 234, 240, 242, 269], "popular": [0, 3, 50, 90, 126, 263], "librari": [0, 3, 4, 6, 10, 16, 20, 21, 31, 49, 50, 54, 74, 76, 77, 85, 90, 102, 111, 126, 179, 183, 184, 213, 224, 225, 226, 231, 232, 258, 261, 262, 263], "scientif": [0, 21, 49, 126], "ecosystem": 0, "thi": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131, 132, 133, 134, 136, 138, 139, 140, 142, 143, 145, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270], "paper": [0, 6, 89, 113, 177, 188, 189, 202, 203, 206, 209, 213], "present": [0, 3, 7, 10, 11, 14, 29, 30, 33, 36, 40, 41, 43, 47, 49, 52, 76, 85, 89, 92, 96, 98, 106, 113, 159, 161, 169, 171, 173, 174, 179, 180, 186, 187, 188, 192, 193, 206, 212, 226, 232, 235, 240, 241, 242, 246, 270], "architectur": [0, 126, 183, 224], "descript": [0, 4, 6, 7, 10, 19, 20, 30, 32, 39, 57, 76, 89, 131, 149, 156, 167, 176, 177, 178, 193, 217, 224, 226, 228, 229, 248, 266], "its": [0, 3, 4, 6, 7, 10, 11, 14, 16, 17, 23, 25, 26, 27, 30, 31, 32, 33, 37, 39, 40, 41, 48, 49, 50, 51, 54, 55, 57, 59, 61, 65, 67, 74, 76, 77, 79, 80, 82, 85, 89, 91, 92, 93, 98, 102, 103, 106, 108, 111, 113, 114, 120, 123, 124, 126, 127, 132, 138, 144, 145, 147, 148, 153, 154, 157, 159, 164, 166, 169, 170, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 205, 208, 209, 211, 212, 213, 217, 218, 219, 224, 227, 228, 231, 232, 235, 238, 240, 241, 242, 244, 247, 263, 264, 265, 268, 269], "featur": [0, 3, 4, 7, 10, 11, 12, 20, 21, 49, 51, 53, 80, 91, 111, 120, 126, 175, 193, 209, 213, 222, 226, 229, 245, 257, 262, 263, 267, 269], "discuss": [0, 4, 6, 7, 10, 11, 12, 14, 16, 17, 20, 32, 40, 50, 57, 89, 102, 106, 111, 120, 123, 124, 168, 175, 176, 177, 183, 219, 228, 248, 258, 260, 261, 263, 264, 266, 268, 269], "select": [0, 1, 12, 20, 31, 33, 40, 41, 48, 49, 50, 58, 63, 77, 79, 80, 89, 91, 104, 124, 164, 173, 183, 184, 186, 187, 189, 193, 202, 205, 211], "submodul": [0, 3, 4, 6, 31, 102, 180, 184, 186, 188], "The": [0, 1, 3, 5, 6, 7, 8, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 33, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 254, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270], "supplementari": 0, "materi": [0, 92, 130, 267], "provid": [0, 1, 3, 4, 6, 7, 10, 12, 14, 15, 16, 17, 20, 23, 29, 30, 31, 32, 38, 39, 40, 41, 47, 48, 49, 51, 53, 57, 58, 60, 65, 68, 71, 72, 76, 77, 79, 80, 82, 85, 86, 88, 89, 90, 91, 93, 96, 102, 103, 106, 108, 110, 113, 114, 115, 120, 121, 122, 123, 124, 126, 127, 132, 133, 153, 161, 162, 163, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 196, 198, 201, 202, 203, 205, 209, 210, 211, 212, 213, 214, 218, 219, 224, 225, 226, 228, 229, 231, 232, 234, 238, 240, 241, 242, 244, 245, 247, 259, 263, 264, 265, 269], "addit": [0, 3, 4, 7, 10, 11, 14, 21, 31, 39, 40, 41, 48, 49, 55, 57, 61, 67, 69, 73, 74, 76, 77, 79, 82, 85, 91, 95, 96, 98, 102, 103, 106, 123, 124, 127, 145, 157, 158, 161, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 193, 199, 202, 203, 205, 206, 209, 210, 211, 212, 213, 224, 225, 226, 228, 229, 231, 232, 234, 241, 261, 263, 264, 265, 268, 269], "exampl": [0, 2, 3, 4, 5, 7, 10, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 94, 96, 98, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 160, 161, 163, 165, 166, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 198, 199, 201, 202, 204, 205, 206, 208, 209, 210, 211, 212, 216, 217, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 246, 247, 249, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 267, 268, 270], "further": [0, 3, 5, 16, 26, 30, 50, 57, 61, 74, 76, 81, 82, 85, 91, 92, 95, 96, 103, 105, 106, 120, 124, 131, 176, 178, 179, 180, 186, 188, 189, 202, 203, 205, 209, 213, 219, 262, 263], "outlin": [0, 3, 4, 16, 47, 76, 180, 209], "detail": [0, 3, 4, 5, 6, 7, 8, 10, 12, 13, 16, 20, 30, 40, 49, 51, 54, 57, 74, 75, 76, 77, 80, 85, 89, 96, 105, 106, 111, 124, 126, 131, 149, 153, 169, 171, 178, 179, 180, 186, 188, 195, 200, 205, 206, 207, 209, 210, 213, 218, 219, 224, 227, 229, 230, 232, 242, 243, 244, 245, 248, 259, 261, 265, 266, 268], "volum": [0, 6, 31, 48, 57, 74, 178, 187, 203, 206, 209, 228, 238, 245], "page": [0, 1, 3, 4, 6, 7, 10, 11, 16, 17, 19, 31, 32, 48, 54, 74, 89, 90, 106, 126, 164, 179, 182, 183, 184, 187, 193, 203, 206, 229, 246, 269], "journal": [0, 6, 48, 54, 89, 99, 187, 205, 228], "issn": 0, "2376": 0, "5992": 0, "url": [0, 50, 229], "bsd": [0, 1, 3, 263], "licens": [0, 1, 3, 263], "so": [0, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 19, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 38, 40, 41, 43, 45, 47, 49, 50, 53, 55, 56, 57, 59, 61, 62, 63, 65, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 85, 86, 89, 91, 92, 93, 98, 102, 106, 111, 113, 114, 120, 121, 123, 126, 127, 132, 143, 145, 153, 155, 156, 157, 159, 161, 163, 164, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 217, 218, 222, 224, 225, 228, 229, 231, 232, 234, 243, 247, 249, 258, 259, 261, 263, 264, 265, 268, 269, 270], "you": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 13, 17, 19, 20, 21, 22, 25, 26, 27, 29, 31, 32, 40, 41, 48, 49, 50, 51, 53, 55, 56, 57, 61, 63, 65, 67, 68, 73, 74, 76, 77, 79, 80, 82, 83, 85, 86, 89, 90, 91, 98, 100, 101, 102, 106, 107, 108, 111, 112, 121, 123, 124, 126, 148, 153, 154, 157, 159, 168, 169, 171, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 194, 196, 200, 201, 205, 206, 209, 210, 211, 212, 213, 217, 218, 219, 222, 224, 225, 226, 227, 229, 231, 232, 235, 241, 242, 243, 244, 257, 258, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270], "free": [0, 10, 21, 29, 30, 31, 36, 39, 40, 45, 49, 61, 76, 80, 82, 85, 89, 92, 93, 96, 99, 120, 128, 148, 166, 169, 175, 179, 180, 184, 185, 186, 188, 189, 193, 195, 201, 203, 205, 206, 209, 211, 212, 219, 231, 263], "howev": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 24, 26, 31, 40, 41, 45, 48, 49, 50, 51, 54, 55, 57, 59, 74, 76, 79, 80, 85, 89, 90, 91, 92, 111, 123, 127, 159, 177, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 200, 201, 202, 203, 205, 209, 210, 211, 212, 224, 225, 232, 241, 242, 246, 258, 261, 263, 265, 269, 270], "like": [0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 16, 17, 20, 21, 31, 32, 34, 40, 41, 48, 49, 50, 53, 54, 55, 57, 59, 69, 72, 76, 77, 79, 80, 82, 83, 84, 85, 89, 90, 91, 98, 102, 108, 111, 113, 123, 124, 126, 127, 141, 143, 153, 154, 157, 158, 159, 164, 168, 169, 172, 174, 176, 179, 180, 181, 183, 184, 185, 186, 188, 189, 191, 192, 193, 196, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 219, 220, 222, 224, 225, 226, 227, 231, 232, 234, 235, 241, 242, 244, 246, 258, 259, 261, 262, 263, 264, 265, 269], "academ": [0, 30, 33, 187], "commerci": [0, 263], "creat": [0, 3, 4, 5, 6, 7, 9, 16, 17, 25, 30, 31, 32, 38, 40, 41, 49, 50, 51, 53, 55, 57, 59, 61, 62, 64, 65, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 89, 90, 91, 92, 98, 103, 105, 106, 108, 111, 114, 115, 117, 119, 122, 123, 124, 126, 127, 136, 138, 140, 144, 147, 148, 149, 153, 154, 156, 157, 159, 162, 165, 168, 169, 171, 172, 176, 177, 179, 180, 182, 183, 184, 186, 188, 189, 190, 193, 200, 205, 209, 212, 213, 214, 218, 219, 224, 225, 226, 228, 229, 231, 232, 238, 242, 244, 259, 261, 264, 265, 268, 269, 270], "fork": [0, 5, 7, 10, 113], "deriv": [0, 6, 10, 12, 15, 29, 30, 31, 33, 39, 40, 51, 55, 56, 57, 59, 66, 71, 72, 74, 76, 77, 79, 82, 85, 98, 102, 104, 105, 106, 110, 113, 114, 115, 117, 120, 121, 122, 123, 124, 148, 157, 161, 164, 165, 168, 169, 171, 172, 173, 174, 176, 179, 180, 181, 184, 186, 188, 189, 190, 193, 195, 203, 205, 209, 210, 211, 215, 216, 220, 226, 238, 240, 241, 260, 263, 270], "long": [0, 6, 7, 8, 31, 41, 48, 49, 50, 52, 62, 74, 76, 77, 79, 85, 89, 92, 93, 113, 173, 189, 190, 193, 202, 203, 211, 213, 225, 234, 240, 261, 264], "copi": [0, 1, 5, 10, 11, 16, 32, 41, 42, 49, 65, 85, 89, 90, 182, 184, 186, 188, 192, 193, 200, 211, 224, 231, 234, 268], "statement": [0, 6, 16, 17, 21, 30, 31, 49, 57, 74, 79, 82, 111, 138, 193, 213, 222, 226, 231], "redistribut": [0, 189], "see": [0, 1, 3, 4, 7, 8, 10, 11, 13, 14, 16, 17, 18, 20, 24, 25, 26, 27, 29, 30, 31, 35, 37, 40, 41, 42, 45, 48, 50, 51, 54, 55, 56, 57, 61, 65, 66, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 85, 86, 89, 90, 91, 96, 102, 105, 106, 116, 118, 121, 123, 124, 128, 131, 134, 135, 144, 148, 149, 153, 154, 155, 156, 158, 159, 162, 164, 169, 173, 176, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 195, 196, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 218, 219, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 238, 239, 247, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270], "file": [0, 1, 3, 4, 5, 6, 7, 11, 31, 85, 111, 126, 148, 193, 200, 203, 205, 222, 224, 225, 226, 232, 235], "That": [0, 4, 7, 11, 16, 17, 49, 50, 55, 79, 85, 120, 156, 161, 167, 176, 177, 180, 181, 183, 184, 186, 188, 199, 200, 209, 211, 213, 225, 226, 232, 258, 261, 264, 269], "said": [0, 4, 23, 27, 31, 35, 89, 164, 174, 176, 177, 181, 209, 212, 213, 238, 244], "although": [0, 3, 4, 6, 7, 11, 13, 14, 16, 41, 49, 50, 55, 61, 73, 74, 77, 79, 80, 82, 85, 89, 92, 102, 113, 126, 180, 183, 184, 186, 188, 189, 201, 202, 205, 206, 211, 225, 231, 232, 261, 264, 269], "requir": [0, 3, 6, 7, 8, 10, 11, 21, 31, 40, 49, 50, 52, 53, 56, 57, 59, 60, 62, 63, 66, 68, 79, 85, 88, 89, 90, 91, 92, 96, 102, 103, 106, 108, 110, 111, 113, 114, 124, 133, 156, 168, 169, 171, 179, 180, 183, 184, 186, 188, 190, 193, 196, 202, 203, 206, 209, 211, 212, 213, 217, 224, 225, 226, 227, 229, 231, 232, 240, 241, 242, 265, 267], "conveni": [0, 1, 10, 11, 22, 29, 31, 41, 49, 50, 54, 57, 76, 79, 91, 111, 126, 168, 171, 176, 177, 179, 180, 181, 182, 183, 184, 188, 191, 200, 201, 205, 211, 217, 218, 225, 227, 228, 232, 244, 259, 261], "pleas": [0, 4, 6, 7, 9, 10, 21, 27, 29, 49, 57, 61, 74, 89, 102, 106, 111, 120, 123, 124, 131, 132, 153, 168, 177, 178, 179, 180, 186, 187, 201, 205, 206, 211, 212, 232, 238, 242, 266, 270], "when": [0, 1, 3, 6, 7, 8, 10, 11, 13, 14, 16, 17, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 40, 41, 42, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 73, 75, 76, 77, 79, 80, 81, 85, 89, 90, 91, 96, 98, 99, 102, 105, 111, 113, 118, 120, 121, 122, 123, 124, 127, 132, 133, 138, 143, 144, 148, 151, 153, 161, 162, 163, 168, 173, 176, 177, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 217, 218, 222, 224, 225, 226, 227, 229, 231, 232, 234, 235, 237, 241, 259, 261, 263, 264, 269, 270], "your": [0, 1, 3, 4, 5, 6, 7, 9, 10, 11, 19, 21, 25, 49, 50, 76, 77, 85, 90, 91, 98, 102, 121, 123, 177, 179, 193, 200, 205, 209, 212, 213, 231, 232, 259, 263, 265, 266, 268, 269], "work": [0, 1, 3, 4, 6, 10, 11, 13, 14, 16, 17, 21, 24, 26, 29, 30, 31, 40, 41, 42, 49, 50, 53, 57, 74, 76, 78, 79, 80, 82, 85, 86, 89, 91, 102, 111, 113, 124, 126, 139, 143, 148, 152, 153, 154, 155, 158, 161, 171, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 193, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 219, 224, 225, 226, 228, 231, 232, 233, 234, 241, 242, 255, 261, 262, 263, 264, 265, 268, 269], "also": [0, 1, 3, 4, 7, 8, 10, 11, 14, 16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 38, 40, 41, 48, 50, 51, 53, 54, 55, 56, 57, 61, 65, 67, 69, 71, 72, 74, 76, 78, 79, 80, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 98, 102, 103, 104, 105, 106, 110, 111, 113, 114, 115, 118, 121, 122, 123, 124, 126, 127, 128, 132, 142, 143, 145, 149, 153, 158, 159, 162, 164, 168, 169, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "consid": [0, 4, 7, 10, 11, 13, 16, 17, 27, 30, 31, 38, 41, 44, 48, 49, 50, 52, 53, 54, 55, 57, 59, 61, 65, 73, 74, 76, 77, 78, 79, 80, 82, 85, 89, 98, 102, 103, 108, 112, 121, 127, 149, 156, 159, 164, 170, 173, 174, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 196, 200, 205, 206, 209, 210, 211, 212, 213, 224, 226, 231, 240, 242, 244, 246, 247, 261, 265, 269], "contribut": [0, 3, 4, 5, 6, 7, 20, 21, 65, 89, 106, 115, 118, 183, 185, 186, 188, 209, 247, 266], "all": [0, 1, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 74, 76, 78, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 93, 96, 98, 99, 103, 104, 105, 106, 108, 110, 111, 113, 115, 120, 121, 123, 126, 127, 133, 138, 139, 143, 153, 155, 156, 157, 159, 161, 162, 163, 164, 166, 167, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 222, 224, 225, 226, 227, 229, 231, 232, 234, 238, 239, 241, 243, 244, 245, 246, 248, 258, 259, 261, 263, 264, 265, 268, 269, 270], "chang": [0, 1, 6, 7, 8, 10, 11, 16, 21, 30, 31, 32, 40, 41, 45, 48, 49, 50, 53, 55, 57, 63, 64, 74, 76, 79, 85, 89, 91, 92, 98, 108, 111, 113, 117, 133, 144, 154, 164, 165, 168, 174, 176, 177, 178, 179, 180, 181, 182, 186, 189, 190, 193, 200, 201, 202, 203, 205, 209, 211, 212, 213, 214, 224, 231, 232, 242, 244, 258, 261, 264, 268], "back": [0, 30, 31, 45, 48, 49, 50, 55, 57, 64, 65, 71, 73, 74, 76, 77, 80, 89, 90, 98, 153, 173, 176, 183, 185, 188, 189, 191, 193, 203, 209, 211, 214, 215], "we": [0, 3, 4, 5, 6, 7, 10, 11, 14, 16, 17, 19, 24, 25, 26, 29, 30, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 62, 67, 72, 73, 74, 76, 77, 78, 79, 80, 85, 86, 88, 89, 98, 101, 102, 103, 104, 106, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 131, 134, 142, 145, 148, 149, 151, 152, 153, 154, 155, 156, 158, 159, 161, 162, 164, 168, 169, 171, 172, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 217, 219, 224, 225, 226, 228, 229, 231, 232, 238, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "can": [0, 1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 95, 96, 98, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 115, 118, 120, 121, 122, 123, 124, 126, 127, 131, 132, 133, 138, 140, 143, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 231, 232, 234, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270], "incorpor": [0, 3, 14, 181, 205], "u": [0, 11, 14, 16, 17, 23, 29, 30, 31, 40, 45, 48, 49, 50, 52, 63, 66, 71, 74, 76, 82, 85, 89, 103, 105, 106, 107, 110, 111, 113, 114, 117, 120, 121, 123, 124, 126, 127, 131, 132, 143, 148, 154, 164, 172, 174, 176, 179, 180, 181, 182, 186, 188, 189, 192, 193, 200, 203, 205, 206, 209, 210, 211, 212, 213, 218, 232, 244, 261, 263, 264, 265], "benefit": [0, 3, 31, 102, 123, 173], "end": [0, 3, 6, 10, 11, 14, 16, 17, 19, 29, 30, 31, 39, 40, 45, 47, 48, 49, 50, 54, 55, 57, 59, 61, 65, 74, 77, 79, 80, 82, 85, 89, 91, 92, 93, 110, 113, 114, 117, 121, 122, 123, 124, 164, 169, 173, 174, 177, 178, 182, 186, 193, 196, 199, 201, 202, 204, 206, 209, 210, 211, 212, 213, 214, 224, 226, 227, 229, 231, 234, 244, 259, 263, 265, 269], "develop": [0, 4, 6, 7, 8, 9, 14, 16, 20, 21, 29, 32, 47, 91, 126, 163, 179, 180, 183, 186, 211, 212, 263, 266], "team": [0, 4], "member": [0, 6, 10, 16, 30, 38, 40, 50, 72, 180, 201, 218], "list": [0, 3, 4, 6, 7, 12, 16, 21, 23, 26, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 77, 78, 79, 80, 82, 85, 88, 89, 90, 91, 92, 98, 103, 105, 106, 110, 113, 114, 117, 121, 122, 126, 127, 132, 143, 145, 148, 149, 153, 154, 156, 157, 159, 161, 169, 172, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 258, 262, 263, 265, 268, 269, 270], "github": [0, 1, 3, 4, 5, 7, 10, 21, 29, 49, 65, 76, 85, 163, 201, 212, 265], "found": [0, 1, 3, 4, 6, 7, 16, 17, 29, 32, 40, 41, 43, 45, 47, 49, 50, 51, 59, 60, 65, 74, 76, 85, 89, 98, 104, 105, 106, 107, 123, 126, 163, 176, 180, 181, 182, 183, 188, 189, 190, 193, 195, 196, 199, 200, 203, 206, 209, 210, 211, 212, 213, 217, 231, 232, 234, 235, 268], "zotero": 0, "start": [1, 2, 3, 4, 5, 6, 7, 10, 11, 20, 21, 30, 31, 33, 38, 39, 40, 41, 45, 48, 49, 50, 51, 57, 79, 80, 82, 85, 88, 89, 90, 92, 93, 111, 113, 121, 122, 154, 155, 158, 162, 176, 177, 179, 183, 186, 188, 189, 193, 196, 199, 201, 202, 203, 206, 209, 211, 212, 213, 214, 217, 224, 225, 231, 233, 234, 243, 257, 258, 261, 263], "either": [1, 3, 6, 7, 10, 11, 16, 17, 23, 27, 29, 30, 33, 41, 48, 49, 50, 53, 54, 55, 57, 64, 66, 72, 74, 76, 77, 79, 80, 85, 89, 98, 103, 106, 107, 110, 111, 122, 124, 126, 143, 149, 156, 159, 161, 173, 177, 179, 181, 182, 183, 184, 186, 188, 189, 193, 195, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 214, 217, 218, 225, 231, 232, 238, 246, 261, 264, 265], "machin": [1, 3, 5, 6, 194, 205, 209, 258], "imag": [1, 3, 40, 116, 126, 128, 132, 180, 184, 186, 193, 201, 212], "contain": [1, 3, 4, 6, 7, 10, 11, 17, 22, 24, 25, 29, 30, 31, 32, 40, 41, 45, 47, 48, 51, 52, 53, 55, 57, 58, 60, 62, 63, 64, 65, 66, 75, 76, 78, 79, 80, 82, 85, 88, 89, 90, 91, 92, 94, 96, 97, 99, 103, 106, 107, 108, 110, 113, 114, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 146, 149, 151, 154, 156, 159, 168, 177, 178, 179, 180, 181, 182, 183, 184, 186, 189, 193, 194, 195, 200, 201, 203, 205, 206, 207, 209, 210, 211, 212, 213, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 240, 248, 249, 259, 261, 265, 269], "them": [1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 16, 17, 22, 25, 27, 30, 31, 38, 40, 41, 48, 49, 50, 51, 53, 54, 57, 60, 65, 67, 69, 71, 72, 74, 78, 79, 82, 85, 88, 89, 90, 102, 106, 108, 111, 113, 114, 115, 120, 121, 123, 124, 126, 132, 136, 152, 153, 159, 161, 164, 167, 169, 174, 176, 177, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 200, 201, 202, 203, 205, 206, 209, 211, 212, 214, 215, 224, 226, 228, 231, 240, 258, 259, 261, 263, 264, 269], "If": [1, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 38, 40, 41, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 77, 78, 79, 80, 82, 85, 86, 88, 89, 90, 91, 92, 96, 98, 99, 101, 102, 103, 104, 106, 107, 108, 110, 111, 112, 121, 122, 123, 124, 126, 127, 132, 136, 140, 143, 149, 153, 154, 155, 156, 157, 159, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 240, 242, 244, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "instead": [1, 3, 4, 6, 7, 10, 11, 16, 17, 22, 24, 26, 30, 31, 40, 42, 45, 49, 51, 52, 53, 54, 57, 76, 77, 79, 80, 82, 83, 85, 89, 96, 99, 101, 110, 111, 113, 114, 123, 126, 157, 161, 163, 169, 173, 174, 176, 177, 180, 183, 184, 186, 188, 189, 191, 193, 195, 203, 205, 209, 211, 212, 213, 217, 218, 219, 222, 227, 228, 229, 232, 236, 244, 247, 258, 259, 261, 263, 264, 265, 269, 270], "follow": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 21, 24, 26, 29, 30, 31, 32, 38, 39, 40, 41, 42, 45, 48, 49, 50, 53, 54, 55, 56, 57, 61, 63, 65, 72, 73, 74, 76, 79, 80, 82, 85, 89, 90, 92, 93, 105, 106, 111, 113, 120, 121, 122, 123, 124, 126, 128, 132, 151, 154, 156, 159, 162, 164, 169, 174, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 191, 192, 193, 194, 195, 200, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 224, 227, 228, 231, 232, 235, 241, 242, 244, 258, 259, 261, 262, 264, 265, 269, 270], "specif": [1, 5, 6, 7, 10, 16, 18, 20, 40, 41, 49, 50, 51, 57, 61, 76, 78, 80, 85, 103, 105, 106, 110, 111, 120, 126, 128, 164, 177, 179, 180, 184, 186, 188, 189, 192, 193, 194, 199, 205, 206, 209, 210, 211, 213, 219, 224, 225, 226, 231, 250, 265, 269], "instruct": [1, 3, 5, 6, 7, 9, 10, 11, 14, 18, 20, 31, 193, 211, 225, 226], "below": [1, 3, 4, 6, 7, 10, 11, 16, 21, 29, 30, 31, 39, 40, 41, 49, 50, 54, 56, 57, 58, 59, 65, 66, 72, 74, 76, 80, 85, 88, 89, 91, 92, 93, 98, 103, 106, 110, 111, 113, 114, 115, 116, 121, 122, 123, 126, 153, 159, 164, 169, 177, 178, 179, 180, 182, 189, 193, 194, 196, 202, 205, 206, 209, 210, 212, 213, 224, 226, 231, 232, 234, 242, 244, 247, 248, 265, 269], "mai": [1, 3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 19, 21, 22, 27, 29, 30, 31, 32, 40, 41, 42, 48, 49, 50, 51, 53, 54, 55, 57, 59, 61, 62, 64, 65, 66, 74, 76, 77, 79, 80, 81, 85, 86, 88, 89, 91, 104, 106, 107, 111, 114, 120, 123, 145, 154, 159, 160, 161, 166, 169, 172, 174, 176, 179, 180, 181, 182, 186, 188, 193, 194, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 244, 246, 258, 259, 261, 264, 265, 269, 270], "choos": [1, 6, 40, 45, 49, 51, 54, 85, 89, 93, 96, 114, 124, 159, 163, 169, 176, 177, 185, 189, 190, 193, 200, 202, 203, 209, 210, 213, 224, 229, 269], "cd": [1, 5, 6, 212, 231], "dockerfil": 1, "htmldoc": 1, "sympy_htmldoc": 1, "option": [1, 4, 5, 6, 7, 8, 11, 24, 26, 29, 31, 40, 47, 48, 49, 50, 51, 52, 53, 55, 58, 59, 62, 63, 65, 66, 68, 76, 77, 80, 82, 85, 86, 89, 90, 91, 92, 96, 98, 102, 103, 104, 105, 106, 107, 110, 126, 132, 143, 148, 149, 151, 154, 156, 161, 168, 169, 173, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 218, 219, 224, 225, 226, 229, 231, 232, 238, 262, 268, 269], "now": [1, 2, 3, 5, 7, 10, 11, 14, 16, 17, 21, 30, 31, 41, 49, 50, 57, 60, 65, 66, 71, 73, 74, 78, 85, 89, 98, 103, 110, 111, 115, 118, 120, 126, 127, 162, 164, 169, 173, 176, 177, 180, 181, 183, 186, 189, 190, 194, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 219, 224, 225, 232, 242, 243, 261, 263, 264, 269, 270], "skip": [1, 3, 4, 6, 11, 30, 33, 49, 80, 85, 89, 169, 188, 192, 193, 195, 209, 211, 222, 224, 259, 267, 268], "down": [1, 4, 6, 16, 82, 100, 113, 114, 176, 177, 179, 184, 195, 201, 203, 205, 209, 228, 265, 269], "section": [1, 4, 7, 8, 16, 18, 23, 30, 32, 40, 41, 48, 49, 50, 52, 57, 59, 65, 74, 79, 80, 85, 92, 93, 105, 111, 124, 162, 164, 168, 174, 177, 180, 183, 186, 188, 193, 196, 200, 203, 209, 219, 228, 229, 231, 241, 242, 243, 244, 248, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270], "For": [1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 16, 17, 18, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61, 63, 64, 67, 70, 72, 73, 74, 75, 78, 79, 80, 85, 89, 90, 91, 92, 93, 98, 100, 104, 106, 107, 111, 114, 120, 121, 122, 123, 124, 126, 128, 142, 143, 148, 152, 154, 156, 157, 158, 159, 161, 164, 165, 169, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 217, 218, 219, 220, 224, 225, 226, 228, 229, 231, 232, 235, 236, 238, 239, 242, 244, 246, 247, 258, 259, 261, 264, 265, 269, 270], "apt": [1, 5], "get": [1, 2, 4, 6, 7, 8, 10, 12, 13, 14, 16, 17, 21, 22, 25, 26, 29, 30, 31, 33, 38, 39, 41, 42, 44, 45, 48, 49, 50, 51, 53, 54, 55, 57, 62, 72, 74, 76, 78, 82, 85, 89, 91, 92, 96, 98, 101, 111, 114, 121, 122, 123, 126, 131, 132, 139, 143, 148, 153, 154, 155, 156, 161, 164, 177, 181, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 219, 220, 225, 231, 232, 233, 235, 238, 241, 258, 261, 263, 264, 265, 268, 269, 270], "python3": [1, 3, 31, 91, 193], "sphinx": [1, 4, 7, 8, 55, 209, 224, 229], "texliv": [1, 3, 193], "recommend": [1, 5, 6, 10, 11, 12, 16, 19, 20, 21, 30, 31, 49, 50, 53, 80, 102, 121, 126, 153, 169, 176, 181, 182, 183, 184, 190, 206, 209, 212, 218, 222, 229, 241, 242, 267, 270], "dvipng": 1, "librsvg2": 1, "bin": [1, 2, 3, 5, 6, 77, 193, 224, 231], "imagemagick": 1, "docbook2x": 1, "graphviz": [1, 7, 264, 268], "pip": [1, 3, 21, 91], "txt": [1, 193], "mpmath": [1, 3, 5, 31, 54, 57, 85, 90, 126, 183, 184, 193, 201, 211, 227, 232], "error": [1, 3, 4, 6, 7, 10, 16, 17, 22, 29, 31, 38, 41, 48, 49, 50, 55, 56, 59, 64, 74, 76, 85, 88, 89, 91, 111, 177, 178, 181, 183, 184, 186, 190, 193, 195, 201, 209, 210, 211, 212, 213, 224, 225, 226, 229, 231, 234, 238, 249, 258], "packag": [1, 3, 19, 21, 77, 90, 91, 95, 120, 126, 173, 193, 224, 235, 243, 244, 263], "matplotlib": [1, 3, 6, 7, 10, 21, 72, 77, 96, 126, 139, 173, 179, 268], "mayb": [1, 17], "other": [1, 3, 4, 5, 6, 7, 10, 11, 13, 14, 17, 18, 23, 27, 30, 31, 32, 40, 41, 42, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 74, 76, 79, 80, 82, 85, 89, 90, 91, 92, 93, 98, 102, 103, 105, 111, 112, 114, 115, 120, 123, 124, 126, 128, 131, 132, 133, 143, 154, 156, 157, 158, 159, 162, 164, 165, 166, 168, 169, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 219, 220, 222, 225, 226, 227, 228, 231, 232, 238, 240, 241, 244, 246, 248, 258, 259, 261, 263, 264, 265, 269], "rpm": 1, "base": [1, 3, 4, 5, 6, 7, 9, 11, 16, 21, 25, 26, 29, 31, 32, 38, 39, 40, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 60, 62, 65, 72, 76, 77, 78, 79, 81, 82, 85, 89, 90, 95, 103, 105, 111, 113, 126, 127, 128, 137, 139, 143, 144, 148, 154, 155, 157, 159, 161, 164, 165, 167, 169, 171, 173, 174, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 193, 195, 197, 200, 201, 202, 203, 205, 206, 207, 209, 211, 213, 217, 218, 219, 224, 225, 226, 227, 228, 229, 231, 232, 233, 238, 240, 241, 244, 255, 264, 269], "distribut": [1, 3, 21, 40, 47, 49, 57, 65, 76, 92, 93, 158, 181, 184, 185, 189, 193, 219], "prerequisit": 1, "dnf": [1, 79], "scheme": [1, 4, 16, 41, 48, 53, 178, 179, 186, 189, 218], "medium": [1, 128, 129, 132, 133, 143, 186, 254], "tool": [1, 7, 40, 77, 84, 85, 90, 98, 126, 177, 180, 185, 186, 193, 204, 225, 231, 237, 245, 250, 252], "first": [1, 3, 5, 6, 7, 8, 11, 14, 16, 17, 21, 30, 31, 32, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 62, 63, 65, 66, 73, 74, 76, 78, 79, 80, 85, 88, 89, 92, 93, 98, 99, 104, 105, 106, 110, 111, 113, 114, 115, 120, 123, 124, 127, 131, 132, 136, 140, 143, 148, 149, 152, 153, 154, 155, 156, 158, 159, 162, 164, 169, 172, 176, 177, 179, 180, 182, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 202, 203, 205, 206, 209, 210, 211, 212, 213, 217, 219, 222, 224, 225, 226, 227, 231, 232, 234, 242, 247, 258, 259, 261, 263, 264, 265, 267, 269, 270], "homebrew": 1, "brew": 1, "sh": 1, "Then": [1, 5, 14, 16, 40, 45, 48, 49, 74, 78, 85, 89, 104, 106, 108, 117, 119, 120, 124, 128, 156, 164, 176, 180, 181, 183, 186, 188, 190, 193, 200, 203, 205, 206, 209, 211, 232], "docbook": 1, "librsvg": 1, "conda": [1, 3, 5, 21, 91], "Or": [1, 7, 11, 17, 40, 49, 50, 51, 57, 74, 79, 89, 108, 180, 190, 192, 193, 205, 212, 213, 224, 232, 244, 264, 267], "forg": [1, 3, 91], "make": [1, 3, 4, 6, 7, 8, 10, 11, 14, 16, 17, 22, 25, 26, 27, 29, 31, 32, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 57, 61, 65, 76, 77, 79, 85, 88, 89, 90, 91, 92, 93, 106, 110, 111, 113, 117, 118, 121, 123, 124, 126, 139, 156, 161, 173, 176, 179, 182, 183, 184, 186, 188, 189, 190, 192, 193, 196, 201, 202, 203, 205, 209, 210, 211, 212, 217, 219, 222, 224, 225, 226, 227, 229, 231, 232, 241, 246, 247, 261, 262, 263, 264, 265, 269], "success": [1, 7, 30, 40, 49, 57, 74, 76, 89, 113, 169, 180, 186, 188, 201, 202, 209, 211, 212, 213, 231, 238, 239], "tricki": [1, 49, 74], "becaus": [1, 3, 4, 6, 7, 10, 11, 16, 17, 21, 22, 27, 31, 41, 48, 49, 50, 55, 61, 65, 66, 74, 76, 79, 83, 85, 89, 91, 111, 114, 139, 147, 159, 161, 164, 176, 179, 180, 182, 183, 184, 186, 188, 189, 190, 192, 193, 196, 200, 203, 205, 206, 209, 210, 211, 212, 222, 224, 225, 227, 231, 232, 234, 241, 259, 261, 263, 264, 265, 268, 269, 270], "some": [1, 3, 4, 6, 11, 14, 16, 17, 21, 22, 27, 30, 31, 32, 37, 40, 41, 47, 48, 49, 50, 53, 54, 55, 56, 57, 59, 60, 61, 65, 74, 76, 78, 79, 80, 82, 85, 89, 90, 91, 96, 99, 102, 103, 108, 110, 111, 112, 113, 114, 115, 120, 121, 123, 124, 127, 139, 144, 148, 156, 159, 164, 165, 168, 170, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 195, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 242, 244, 248, 258, 259, 261, 263, 264, 265, 267, 268, 269], "avail": [1, 3, 5, 7, 10, 11, 16, 20, 21, 30, 31, 40, 41, 48, 49, 54, 57, 76, 85, 90, 91, 111, 123, 126, 183, 184, 186, 189, 193, 194, 199, 201, 203, 205, 206, 211, 212, 213, 214, 218, 219, 224, 231, 232, 237, 238, 255, 261, 268], "subsystem": [1, 193], "linux": [1, 21], "possibl": [1, 6, 10, 16, 17, 20, 21, 29, 31, 32, 33, 38, 40, 41, 43, 44, 45, 49, 50, 54, 55, 57, 59, 61, 63, 64, 66, 71, 73, 74, 76, 78, 79, 80, 82, 85, 89, 99, 100, 102, 113, 122, 124, 153, 155, 159, 161, 164, 172, 174, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 214, 219, 224, 226, 227, 228, 229, 231, 232, 241, 242, 244, 260, 261, 264, 269], "workaround": [1, 232], "solut": [1, 10, 11, 14, 17, 19, 31, 45, 49, 50, 55, 57, 59, 67, 71, 72, 73, 76, 85, 89, 95, 102, 106, 111, 114, 120, 123, 128, 164, 168, 180, 186, 187, 188, 189, 190, 191, 192, 201, 206, 207, 208, 209, 210, 211, 254, 270], "shell": [1, 11, 77, 126, 192], "after": [1, 4, 5, 6, 7, 10, 11, 21, 23, 25, 26, 30, 32, 37, 40, 41, 45, 47, 48, 49, 50, 51, 55, 64, 66, 71, 76, 80, 85, 89, 91, 92, 98, 121, 123, 126, 128, 132, 144, 156, 164, 168, 174, 177, 182, 186, 188, 189, 190, 191, 193, 194, 199, 206, 209, 210, 211, 212, 214, 224, 227, 232, 234, 238, 240, 244, 258, 259, 261, 265, 269], "tutori": [1, 7, 11, 14, 15, 20, 21, 65, 111, 126, 181, 192, 193, 207, 209, 232, 261, 264, 266, 267, 268, 269, 270], "com": [1, 3, 4, 5, 6, 7, 10, 21, 23, 27, 29, 40, 42, 43, 49, 50, 52, 53, 54, 55, 57, 59, 65, 66, 74, 76, 80, 85, 89, 96, 178, 187, 196, 198, 201, 202, 205, 206, 209, 212, 213, 231, 234, 265], "microsoftdoc": 1, "wsl": 1, "blob": [1, 76], "win10": 1, "md": [1, 4, 7, 222, 229], "In": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 21, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 48, 49, 50, 51, 53, 54, 55, 56, 57, 62, 64, 65, 66, 67, 74, 76, 77, 78, 79, 80, 82, 85, 86, 89, 91, 93, 98, 102, 105, 106, 111, 114, 115, 120, 121, 122, 123, 124, 126, 127, 145, 147, 148, 149, 154, 158, 159, 162, 164, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 219, 222, 224, 226, 228, 229, 231, 232, 235, 238, 241, 242, 244, 246, 258, 261, 262, 263, 264, 265, 268, 269, 270], "command": [1, 3, 5, 6, 11, 21, 31, 53, 77, 111, 121, 126, 173, 179, 193, 224, 225, 268], "prompt": [1, 6], "run": [1, 4, 6, 7, 8, 11, 14, 16, 32, 40, 41, 43, 49, 50, 74, 85, 90, 91, 106, 113, 126, 159, 173, 179, 180, 193, 203, 205, 209, 210, 211, 221, 225, 227, 228, 231, 232, 256, 261, 268], "transfer": [1, 95, 96, 98, 128, 212], "termin": [1, 40, 49, 55, 77, 89, 173, 193, 200, 224, 268], "abov": [1, 3, 4, 6, 7, 10, 11, 14, 17, 29, 30, 31, 32, 33, 39, 40, 41, 45, 48, 49, 53, 54, 57, 59, 62, 65, 66, 74, 76, 79, 80, 85, 89, 90, 91, 93, 98, 102, 106, 108, 110, 111, 113, 114, 115, 120, 122, 123, 124, 127, 154, 156, 159, 169, 174, 176, 177, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 200, 203, 205, 206, 209, 211, 212, 213, 217, 218, 225, 226, 232, 241, 242, 243, 244, 247, 261, 263, 264, 265, 269], "html": [1, 3, 4, 6, 7, 27, 31, 33, 41, 42, 43, 49, 50, 52, 54, 55, 57, 59, 65, 66, 76, 77, 85, 89, 96, 187, 193, 196, 198, 201, 202, 206, 209, 213, 225, 227, 229, 231, 232, 265], "note": [1, 3, 6, 7, 10, 11, 14, 16, 17, 19, 23, 24, 26, 27, 28, 29, 30, 31, 32, 39, 40, 41, 42, 45, 47, 48, 50, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 74, 76, 77, 79, 80, 82, 85, 89, 91, 98, 99, 103, 104, 105, 106, 107, 110, 111, 113, 114, 117, 124, 126, 132, 135, 143, 153, 154, 156, 158, 159, 160, 162, 168, 169, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 218, 219, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 242, 244, 246, 255, 258, 259, 260, 262, 263, 264, 265, 269], "via": [1, 3, 14, 21, 24, 25, 26, 40, 41, 49, 54, 57, 74, 76, 79, 85, 89, 90, 91, 92, 169, 178, 180, 184, 186, 188, 189, 192, 212, 222, 225, 226, 238, 246, 264], "want": [1, 3, 4, 5, 6, 10, 11, 13, 14, 16, 17, 21, 27, 29, 31, 32, 33, 41, 49, 50, 56, 61, 63, 65, 68, 74, 76, 80, 82, 85, 86, 89, 90, 96, 98, 101, 107, 111, 126, 142, 152, 153, 156, 159, 162, 164, 171, 172, 176, 177, 179, 181, 182, 183, 186, 188, 189, 190, 192, 193, 194, 200, 201, 203, 205, 206, 209, 210, 211, 212, 213, 219, 222, 224, 226, 228, 231, 232, 242, 244, 247, 258, 259, 261, 263, 264, 265, 266, 268, 269], "directori": [1, 3, 6, 7, 21, 26, 31, 209, 224, 225, 234], "folder": 1, "prepend": [1, 30, 40, 85, 98, 166, 219], "mnt": 1, "path": [1, 5, 6, 10, 40, 65, 71, 98, 118, 174, 176, 202, 205, 209, 212, 224, 225, 228, 229, 231, 234, 235, 236, 244], "navig": 1, "method": [1, 3, 4, 6, 7, 11, 15, 16, 25, 26, 27, 29, 30, 31, 32, 33, 40, 41, 42, 48, 49, 50, 51, 52, 53, 55, 56, 57, 60, 61, 62, 63, 65, 68, 71, 73, 74, 76, 78, 80, 81, 82, 85, 89, 90, 91, 92, 93, 94, 95, 98, 99, 102, 105, 110, 111, 115, 116, 120, 125, 126, 133, 136, 138, 140, 148, 149, 154, 156, 159, 161, 166, 167, 168, 169, 171, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 194, 195, 196, 198, 199, 200, 201, 205, 206, 207, 209, 211, 213, 214, 216, 218, 219, 220, 224, 226, 228, 231, 232, 238, 241, 244, 247, 248, 258, 259, 260, 261, 264, 269], "better": [1, 3, 4, 6, 10, 11, 16, 17, 30, 31, 41, 49, 53, 57, 76, 79, 98, 111, 139, 163, 167, 179, 182, 183, 184, 196, 200, 201, 202, 203, 209, 210, 211, 212, 213, 225, 231, 232, 263, 269], "compat": [1, 3, 4, 13, 31, 49, 57, 77, 80, 85, 90, 102, 161, 166, 173, 179, 182, 184, 188, 189, 193, 213, 216, 217, 220, 224, 226, 232], "than": [1, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 22, 27, 31, 32, 34, 40, 41, 42, 48, 49, 50, 53, 54, 55, 56, 57, 58, 63, 64, 65, 67, 71, 74, 76, 78, 79, 80, 82, 85, 86, 88, 89, 90, 91, 96, 98, 102, 106, 110, 111, 114, 117, 133, 139, 153, 156, 157, 159, 168, 177, 178, 181, 182, 183, 184, 186, 189, 190, 191, 193, 196, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 225, 226, 228, 231, 232, 234, 235, 258, 259, 261, 262, 263, 264, 265, 267, 269], "cygwin": 1, "msys2": 1, "more": [1, 3, 4, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 22, 26, 27, 29, 30, 31, 32, 35, 39, 40, 41, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 71, 74, 76, 79, 80, 82, 83, 85, 86, 88, 89, 90, 91, 96, 98, 102, 106, 107, 111, 113, 114, 116, 118, 120, 121, 122, 123, 124, 126, 128, 131, 143, 147, 148, 153, 156, 157, 158, 159, 164, 168, 169, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 205, 206, 209, 210, 211, 212, 213, 224, 226, 227, 228, 231, 232, 234, 238, 241, 245, 258, 259, 261, 262, 264, 265, 267, 268, 269, 270], "virtual": [1, 4, 8, 21, 49, 65, 177, 262], "partial": [1, 29, 40, 47, 48, 49, 51, 53, 54, 55, 89, 91, 126, 153, 169, 172, 174, 184, 185, 187, 190, 193, 195, 202, 205, 207, 209, 210, 214, 220, 238, 244, 259, 269], "need": [1, 3, 4, 6, 7, 11, 13, 14, 16, 17, 19, 21, 22, 23, 25, 26, 29, 30, 31, 34, 40, 41, 45, 47, 48, 49, 50, 51, 55, 56, 57, 60, 64, 65, 72, 73, 74, 76, 77, 80, 85, 89, 90, 91, 93, 98, 102, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 127, 128, 139, 143, 151, 157, 162, 163, 168, 169, 173, 176, 177, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 217, 218, 219, 220, 222, 225, 226, 227, 228, 229, 231, 234, 238, 241, 243, 244, 247, 258, 259, 261, 264, 265, 267, 269], "environ": [1, 3, 8, 9, 10, 49, 77, 173, 193, 213, 224, 234, 261, 263, 268], "workflow": [1, 3, 5, 8, 9, 20, 126, 183, 226, 232, 266], "onli": [1, 4, 6, 7, 10, 11, 13, 14, 16, 17, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 62, 63, 65, 66, 67, 72, 74, 76, 77, 78, 79, 80, 85, 86, 89, 90, 91, 96, 98, 104, 111, 113, 114, 116, 117, 119, 121, 123, 124, 127, 132, 134, 153, 154, 158, 159, 161, 163, 164, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 238, 240, 242, 244, 246, 247, 258, 259, 261, 262, 264, 265, 269, 270], "viabl": [1, 50], "64": [1, 34, 40, 89, 125, 178, 192, 202, 211, 213, 224, 231, 234, 268], "bit": [1, 14, 30, 31, 33, 49, 50, 52, 79, 80, 85, 89, 153, 164, 180, 189, 203, 206, 212, 224, 231, 241, 242, 268], "chocolatei": 1, "choco": 1, "rsvg": 1, "convert": [1, 3, 4, 10, 11, 16, 17, 23, 27, 31, 33, 41, 45, 49, 50, 53, 54, 55, 63, 64, 66, 69, 70, 73, 77, 79, 80, 85, 88, 89, 91, 98, 153, 156, 162, 163, 164, 166, 172, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 193, 194, 195, 201, 202, 203, 205, 206, 210, 212, 213, 214, 215, 218, 224, 225, 231, 232, 234, 236, 240, 260, 261, 264, 269], "chose": [1, 50], "rm": [1, 31], "absolut": [1, 10, 27, 28, 31, 48, 49, 55, 64, 74, 76, 80, 85, 100, 157, 184, 188, 189, 203, 205, 208, 213, 224, 246, 247, 248], "Be": [1, 4, 6, 29, 49, 79, 85, 186, 209, 212, 220, 232], "sure": [1, 4, 6, 7, 31, 40, 49, 61, 110, 111, 139, 164, 189, 190, 200, 209, 211, 212, 225, 231, 261, 264, 269], "substitut": [1, 10, 11, 14, 17, 31, 49, 50, 55, 57, 74, 76, 85, 90, 91, 98, 106, 107, 111, 113, 114, 123, 148, 157, 159, 162, 169, 171, 172, 190, 191, 194, 195, 200, 203, 205, 206, 209, 210, 211, 212, 232, 240, 260, 261], "actual": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 30, 31, 32, 38, 40, 47, 49, 50, 57, 61, 74, 76, 78, 82, 85, 89, 98, 102, 111, 113, 121, 122, 123, 173, 180, 183, 188, 193, 201, 203, 205, 206, 209, 212, 220, 224, 225, 228, 229, 231, 232, 263], "filesystem": 1, "from": [1, 3, 4, 5, 6, 7, 12, 13, 14, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "ani": [1, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 21, 24, 26, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 60, 61, 64, 65, 66, 74, 76, 77, 79, 80, 83, 85, 86, 89, 91, 92, 93, 98, 100, 103, 106, 107, 108, 110, 111, 120, 122, 123, 124, 127, 128, 132, 145, 148, 153, 154, 157, 159, 161, 164, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 194, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 215, 218, 219, 224, 225, 227, 228, 229, 231, 232, 238, 241, 242, 243, 244, 246, 247, 258, 259, 261, 264, 265, 268, 269, 270], "makefil": 1, "subdirectori": 1, "ha": [1, 3, 4, 6, 7, 10, 11, 14, 16, 17, 19, 27, 29, 30, 31, 32, 33, 38, 39, 40, 41, 43, 45, 48, 49, 50, 51, 53, 54, 55, 57, 59, 61, 62, 64, 65, 66, 72, 74, 76, 78, 79, 80, 82, 85, 86, 88, 89, 90, 92, 93, 98, 99, 103, 105, 106, 111, 113, 114, 120, 124, 126, 132, 133, 143, 144, 153, 156, 161, 164, 168, 169, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 198, 200, 201, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 227, 228, 229, 231, 234, 238, 239, 241, 242, 244, 246, 247, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "collect": [1, 3, 7, 15, 30, 31, 40, 49, 66, 76, 89, 92, 98, 110, 118, 126, 159, 166, 178, 184, 189, 202, 203, 209, 213, 224, 231, 249], "offici": [1, 11, 21, 49, 102, 126, 168, 177, 212, 232, 267], "which": [1, 2, 3, 4, 6, 7, 10, 11, 14, 15, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 42, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 83, 85, 88, 89, 91, 92, 93, 95, 96, 98, 99, 100, 102, 103, 104, 105, 106, 108, 110, 111, 113, 115, 118, 120, 121, 122, 123, 124, 126, 127, 128, 130, 132, 133, 145, 148, 154, 155, 156, 157, 159, 163, 164, 165, 168, 169, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 217, 219, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 239, 242, 246, 247, 249, 258, 259, 261, 262, 263, 264, 265, 266, 268, 269, 270], "gener": [1, 4, 8, 10, 11, 14, 16, 17, 21, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 63, 65, 67, 72, 74, 76, 77, 78, 79, 82, 85, 89, 90, 91, 98, 102, 103, 105, 106, 107, 110, 111, 113, 114, 115, 117, 119, 120, 122, 123, 124, 126, 127, 131, 142, 143, 144, 145, 148, 153, 154, 157, 158, 159, 164, 166, 168, 169, 170, 172, 173, 174, 176, 178, 179, 180, 181, 182, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 199, 202, 203, 205, 206, 207, 209, 210, 211, 213, 218, 219, 225, 226, 228, 229, 230, 231, 232, 238, 241, 242, 244, 245, 246, 259, 261, 262, 263, 264, 265, 269, 270], "svg": [1, 77, 173], "store": [1, 5, 10, 11, 16, 30, 31, 39, 40, 49, 71, 73, 82, 85, 89, 91, 106, 108, 110, 111, 124, 153, 159, 172, 176, 177, 179, 180, 183, 188, 189, 190, 200, 203, 214, 217, 218, 226, 227, 228, 231, 242, 244, 264], "_build": [1, 6], "same": [1, 4, 6, 7, 10, 11, 14, 16, 17, 23, 24, 25, 26, 27, 29, 30, 31, 38, 39, 40, 41, 45, 48, 49, 50, 51, 54, 57, 59, 62, 63, 64, 65, 66, 71, 72, 74, 76, 78, 79, 80, 82, 85, 89, 91, 92, 93, 98, 99, 102, 103, 109, 111, 114, 117, 118, 123, 124, 143, 145, 153, 156, 157, 159, 161, 162, 164, 166, 167, 168, 169, 171, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 218, 219, 220, 222, 224, 226, 227, 228, 229, 231, 232, 234, 238, 239, 241, 242, 246, 259, 261, 264, 265, 268, 269], "inform": [1, 3, 4, 6, 7, 11, 13, 16, 17, 20, 26, 27, 30, 31, 32, 35, 40, 41, 47, 49, 50, 54, 57, 61, 74, 76, 78, 82, 85, 90, 93, 103, 104, 106, 110, 111, 113, 120, 121, 123, 124, 126, 127, 154, 159, 164, 168, 169, 173, 177, 179, 183, 188, 189, 193, 194, 200, 203, 205, 206, 207, 211, 212, 213, 217, 218, 219, 224, 225, 226, 227, 228, 238, 242, 244, 269], "onc": [1, 4, 11, 16, 17, 31, 33, 40, 45, 49, 50, 54, 57, 65, 74, 76, 90, 93, 104, 105, 120, 123, 164, 169, 171, 177, 179, 181, 183, 189, 193, 194, 202, 203, 205, 209, 212, 219, 231, 241, 258, 259, 269, 270], "under": [1, 3, 4, 6, 11, 16, 17, 25, 26, 28, 29, 31, 32, 39, 40, 45, 47, 57, 67, 74, 76, 78, 85, 89, 91, 92, 93, 128, 154, 178, 180, 181, 188, 189, 193, 200, 201, 203, 206, 209, 211, 212, 213, 219, 222, 263, 269], "prefer": [1, 3, 6, 10, 16, 31, 41, 48, 49, 57, 89, 91, 111, 159, 164, 179, 182, 184, 186, 188, 193, 201, 205, 209, 211, 218, 224, 226, 229, 232, 263, 265], "web": [1, 7, 50, 61, 126, 175, 187, 206], "browser": 1, "drop": [1, 55, 76, 90, 117, 184, 186], "menu": 1, "index": [1, 3, 10, 11, 23, 31, 36, 38, 40, 41, 45, 48, 49, 50, 51, 55, 57, 60, 65, 74, 76, 79, 80, 82, 85, 88, 89, 98, 110, 111, 126, 127, 128, 130, 132, 133, 143, 152, 154, 156, 159, 164, 169, 179, 180, 184, 188, 189, 190, 193, 198, 199, 203, 211, 213, 214, 216, 217, 219, 220, 225], "given": [1, 3, 4, 7, 10, 11, 14, 16, 23, 25, 26, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 73, 74, 76, 78, 79, 80, 82, 85, 88, 89, 91, 92, 96, 99, 103, 104, 108, 110, 111, 114, 124, 132, 149, 154, 156, 164, 165, 167, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 218, 219, 222, 224, 226, 228, 231, 232, 234, 235, 236, 238, 240, 242, 244, 246, 258, 264, 267, 269, 270], "told": 1, "how": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 19, 20, 30, 31, 40, 41, 48, 49, 56, 57, 61, 72, 75, 76, 79, 80, 82, 85, 89, 91, 102, 106, 111, 112, 117, 121, 122, 124, 126, 130, 131, 147, 151, 154, 155, 156, 161, 162, 169, 176, 179, 180, 183, 184, 186, 188, 192, 193, 196, 200, 201, 203, 205, 206, 207, 209, 210, 213, 219, 224, 225, 226, 227, 229, 231, 232, 242, 259, 261, 263, 264, 265, 266, 268, 269], "load": [1, 31, 49, 77, 92, 93, 103, 106, 110, 115, 127, 139, 173], "ll": [1, 30, 47, 85, 114, 176, 177, 222], "manual": [1, 3, 4, 7, 10, 31, 32, 40, 53, 59, 76, 77, 91, 98, 110, 111, 123, 127, 179, 186, 193, 209, 211, 212, 227, 259, 269], "repeat": [1, 11, 40, 43, 48, 49, 55, 57, 76, 78, 80, 85, 89, 91, 143, 145, 159, 179, 180, 181, 186, 188, 189, 193, 199, 209, 213, 217, 218, 225, 227, 231, 269], "step": [1, 4, 5, 18, 20, 29, 31, 40, 44, 45, 48, 49, 50, 57, 73, 74, 76, 85, 89, 90, 97, 106, 117, 120, 121, 126, 127, 161, 172, 177, 179, 183, 184, 186, 189, 193, 194, 195, 198, 201, 202, 203, 205, 206, 207, 209, 211, 213, 218, 225, 231, 232, 259], "reload": 1, "There": [1, 3, 4, 5, 6, 7, 10, 11, 13, 16, 17, 31, 32, 40, 41, 42, 43, 46, 48, 49, 50, 53, 54, 57, 73, 74, 76, 77, 78, 79, 82, 85, 89, 92, 93, 98, 102, 110, 120, 121, 123, 132, 149, 154, 168, 169, 173, 176, 177, 179, 183, 184, 185, 186, 188, 189, 190, 193, 194, 195, 201, 202, 203, 205, 206, 209, 211, 212, 213, 218, 227, 228, 231, 232, 234, 242, 258, 259, 261, 263, 264, 268, 269], "altern": [1, 4, 6, 10, 11, 17, 21, 31, 37, 40, 41, 48, 49, 53, 55, 57, 80, 82, 86, 90, 111, 121, 123, 169, 176, 178, 179, 181, 182, 183, 188, 189, 193, 198, 200, 202, 211, 212, 214, 231, 261, 263, 265], "approach": [1, 14, 30, 48, 49, 76, 98, 114, 120, 183, 186, 187, 190, 201, 210, 211, 213, 225, 228, 231, 259, 265], "set": [1, 2, 3, 4, 6, 7, 11, 14, 15, 16, 17, 22, 25, 26, 29, 30, 31, 32, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 62, 64, 66, 67, 68, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 91, 92, 93, 98, 102, 106, 110, 111, 113, 114, 119, 121, 122, 123, 126, 127, 143, 149, 154, 159, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 176, 179, 180, 181, 182, 183, 186, 188, 189, 192, 193, 194, 195, 200, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 222, 224, 225, 226, 227, 231, 232, 238, 240, 242, 248, 251, 258, 260, 269], "up": [1, 3, 4, 10, 14, 16, 17, 21, 26, 29, 31, 40, 41, 43, 49, 50, 51, 53, 54, 55, 57, 58, 65, 66, 70, 74, 76, 77, 79, 80, 85, 89, 90, 92, 100, 102, 108, 110, 113, 117, 119, 123, 124, 126, 127, 139, 154, 156, 172, 178, 179, 180, 183, 184, 188, 190, 193, 194, 195, 200, 202, 203, 205, 206, 209, 210, 211, 212, 225, 226, 227, 228, 229, 232, 260, 261, 264, 265, 267], "monitor": 1, "automat": [1, 3, 4, 6, 7, 10, 11, 16, 30, 31, 32, 41, 49, 51, 52, 53, 54, 55, 56, 57, 62, 64, 68, 74, 77, 79, 89, 91, 92, 106, 111, 113, 118, 145, 147, 148, 157, 159, 172, 176, 179, 180, 183, 184, 185, 188, 189, 190, 193, 196, 199, 200, 202, 203, 205, 206, 209, 211, 212, 218, 219, 224, 225, 226, 229, 242, 247, 259, 261, 263, 264, 268, 269, 270], "detect": [1, 3, 22, 29, 82, 85, 89, 179, 183, 193, 209, 210, 212, 214, 231, 249, 268], "procedur": [1, 32, 34, 40, 46, 47, 48, 76, 85, 106, 124, 186, 188, 205, 206, 211, 212, 238, 265], "again": [1, 4, 11, 14, 17, 41, 49, 64, 89, 111, 113, 124, 154, 155, 169, 176, 180, 181, 188, 196, 203, 209, 222, 241, 261, 269], "whether": [1, 4, 10, 16, 17, 29, 30, 31, 35, 40, 48, 49, 50, 56, 57, 61, 64, 76, 77, 79, 80, 85, 89, 102, 107, 110, 111, 147, 166, 171, 177, 179, 182, 183, 184, 188, 189, 193, 196, 200, 201, 205, 206, 209, 211, 212, 213, 214, 224, 226, 231, 232, 238, 240, 261, 265], "8000": [1, 92], "80": [1, 4, 6, 11, 29, 40, 49, 52, 76, 85, 89, 92, 93, 96, 189, 192, 209, 213, 229, 231], "localhost": 1, "differ": [1, 4, 6, 7, 10, 11, 12, 13, 15, 17, 18, 22, 30, 31, 32, 38, 39, 40, 41, 45, 48, 49, 50, 51, 53, 54, 55, 57, 60, 62, 64, 65, 69, 71, 73, 74, 76, 77, 78, 79, 82, 85, 89, 90, 91, 92, 96, 102, 103, 108, 111, 113, 116, 120, 123, 124, 127, 131, 132, 144, 145, 153, 154, 157, 159, 161, 164, 168, 169, 170, 172, 173, 174, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 214, 217, 219, 222, 224, 225, 226, 227, 228, 229, 231, 232, 238, 240, 244, 245, 246, 249, 260, 261, 263, 264, 265, 268, 269], "port": [1, 91, 113, 131], "finish": [1, 31, 32, 153, 227, 266], "stop": [1, 4, 31, 32, 41, 49, 85, 89, 179, 199, 201, 209, 213], "ctrl": 1, "detach": 1, "mode": [1, 2, 49, 77, 91, 131, 154, 173, 189, 193, 224, 235, 255], "d": [1, 6, 7, 10, 11, 14, 23, 30, 33, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 54, 57, 59, 63, 67, 72, 74, 76, 78, 79, 80, 81, 82, 85, 86, 88, 89, 91, 92, 106, 126, 128, 131, 132, 138, 148, 156, 158, 159, 164, 168, 169, 171, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 195, 199, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 217, 219, 231, 234, 238, 239, 240, 241, 242, 246, 254, 265, 270], "name": [1, 3, 4, 5, 6, 7, 10, 11, 16, 22, 25, 26, 30, 31, 32, 36, 39, 42, 45, 48, 49, 50, 51, 55, 56, 57, 59, 62, 74, 76, 77, 78, 82, 85, 89, 91, 92, 103, 105, 108, 110, 111, 113, 126, 130, 139, 154, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 174, 177, 179, 180, 181, 183, 184, 186, 188, 190, 193, 199, 203, 205, 206, 209, 210, 212, 213, 218, 219, 222, 224, 225, 226, 227, 232, 234, 235, 236, 238, 241, 244, 258, 261, 264, 265, 269], "livehtml": 1, "simpli": [1, 3, 4, 7, 16, 17, 27, 32, 48, 49, 51, 55, 59, 80, 82, 85, 89, 91, 92, 99, 103, 111, 113, 123, 149, 154, 164, 174, 177, 183, 190, 201, 202, 203, 209, 212, 229, 232, 244], "should": [1, 3, 5, 6, 7, 8, 10, 11, 13, 16, 17, 22, 24, 26, 29, 30, 31, 32, 40, 41, 42, 43, 45, 48, 49, 50, 52, 53, 55, 57, 59, 60, 61, 62, 63, 64, 66, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 85, 89, 91, 92, 96, 98, 102, 111, 113, 114, 121, 123, 124, 126, 127, 128, 139, 143, 147, 149, 151, 153, 154, 157, 159, 161, 162, 164, 165, 169, 173, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 192, 193, 195, 196, 199, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 217, 218, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 241, 249, 258, 259, 261, 262, 265], "new": [1, 3, 4, 5, 7, 16, 20, 25, 26, 30, 31, 32, 40, 41, 48, 49, 50, 51, 57, 62, 65, 74, 76, 77, 80, 85, 89, 92, 98, 103, 111, 117, 119, 124, 125, 126, 128, 149, 155, 156, 159, 161, 164, 165, 167, 169, 172, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 193, 200, 203, 205, 206, 209, 211, 212, 213, 214, 224, 225, 229, 232, 238, 239, 241, 245, 257, 258, 261, 264, 265, 267], "tab": [1, 11, 45, 126], "show": [1, 3, 4, 6, 7, 11, 13, 14, 15, 16, 17, 31, 41, 48, 49, 53, 55, 56, 72, 74, 76, 85, 89, 92, 93, 96, 102, 111, 116, 124, 126, 154, 158, 162, 164, 169, 176, 177, 179, 180, 183, 184, 186, 188, 189, 193, 194, 196, 200, 201, 202, 203, 205, 206, 209, 211, 213, 214, 222, 225, 226, 229, 231, 232, 261, 263, 265, 268], "necessari": [1, 3, 4, 6, 8, 10, 11, 16, 20, 29, 30, 40, 41, 49, 59, 74, 76, 79, 85, 89, 106, 113, 120, 179, 181, 183, 188, 189, 196, 202, 205, 209, 210, 211, 212, 213, 214, 219, 224, 226, 231, 232, 238, 262, 267], "major": [1, 3, 4, 7, 10, 59, 102, 218, 263, 269], "contributor": [1, 3, 7, 10], "action": [1, 3, 7, 40, 78, 151, 154, 164, 189, 205, 212], "pull": [1, 3, 4, 5, 6, 7, 9, 10, 21, 31, 49, 54, 57, 158, 194, 205, 209, 212, 265, 269], "request": [1, 3, 4, 6, 7, 9, 10, 16, 21, 29, 49, 53, 65, 74, 89, 111, 159, 186, 189, 217, 225], "each": [1, 3, 4, 10, 11, 16, 20, 26, 27, 29, 30, 31, 32, 33, 40, 41, 45, 49, 50, 51, 52, 53, 54, 55, 57, 59, 64, 65, 66, 71, 72, 74, 76, 78, 79, 80, 82, 85, 89, 92, 96, 98, 104, 105, 106, 111, 113, 114, 117, 119, 121, 124, 143, 156, 159, 168, 169, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 191, 193, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 224, 226, 228, 231, 232, 234, 238, 239, 240, 242, 244, 246, 259, 262, 264, 269, 270], "releas": [1, 7, 10, 49, 76, 80, 91, 123, 179, 218, 229, 232, 264], "includ": [1, 3, 4, 6, 7, 9, 10, 11, 16, 21, 26, 27, 29, 30, 31, 41, 45, 48, 49, 50, 51, 53, 54, 55, 57, 61, 67, 74, 76, 79, 80, 82, 84, 85, 89, 90, 91, 100, 102, 110, 111, 113, 114, 115, 120, 121, 123, 126, 139, 143, 148, 153, 156, 157, 167, 174, 177, 181, 184, 185, 186, 188, 189, 192, 193, 194, 199, 200, 201, 203, 205, 208, 209, 210, 211, 213, 216, 219, 222, 224, 226, 227, 228, 229, 231, 238, 239, 241, 246, 248, 259, 263, 264, 265, 269, 270], "fail": [1, 3, 4, 6, 7, 10, 16, 17, 31, 40, 41, 45, 48, 49, 53, 55, 73, 74, 76, 77, 85, 86, 89, 91, 113, 149, 154, 173, 179, 182, 183, 184, 186, 188, 189, 193, 200, 203, 209, 211, 213, 222, 224, 231, 232, 265], "99": [1, 31, 49, 50, 85, 89, 186, 187], "time": [1, 3, 4, 7, 10, 11, 14, 16, 17, 22, 26, 27, 31, 40, 41, 45, 49, 50, 54, 57, 72, 74, 79, 80, 85, 86, 88, 89, 90, 91, 95, 96, 98, 102, 106, 107, 110, 111, 113, 114, 117, 118, 120, 121, 122, 123, 124, 126, 127, 133, 143, 148, 156, 157, 161, 162, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 186, 187, 188, 189, 190, 192, 193, 200, 201, 202, 203, 205, 209, 211, 213, 222, 224, 225, 230, 231, 232, 244, 246, 256, 259, 263, 264, 265], "due": [1, 6, 10, 14, 29, 31, 39, 40, 49, 51, 66, 85, 89, 111, 113, 123, 132, 159, 174, 177, 183, 189, 193, 196, 206, 208, 210, 213, 229, 240, 246, 269], "bad": [1, 10, 48, 89, 161, 193], "math": [1, 3, 6, 23, 27, 30, 32, 40, 49, 57, 59, 76, 85, 89, 90, 111, 120, 174, 179, 184, 187, 192, 193, 209, 210, 213, 225, 226, 232, 242, 243, 244, 245, 246, 250, 258, 259, 263], "format": [1, 4, 8, 10, 14, 30, 41, 50, 71, 72, 76, 79, 85, 88, 89, 92, 110, 127, 132, 143, 153, 179, 182, 183, 188, 189, 191, 193, 203, 209, 212, 224, 234, 238, 241, 262, 265, 268], "doubl": [1, 6, 7, 29, 31, 45, 49, 50, 56, 85, 91, 105, 119, 120, 176, 183, 193, 202, 203, 226, 269], "check": [1, 3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 25, 26, 29, 30, 31, 35, 38, 40, 41, 42, 47, 48, 49, 50, 54, 57, 61, 72, 74, 78, 79, 80, 82, 85, 86, 89, 98, 103, 104, 111, 123, 126, 139, 147, 159, 161, 162, 167, 174, 175, 179, 180, 182, 183, 184, 186, 188, 189, 195, 201, 203, 205, 209, 210, 211, 212, 213, 217, 218, 222, 224, 226, 229, 231, 240, 244, 261, 269], "ad": [1, 6, 7, 10, 16, 23, 30, 31, 33, 39, 40, 49, 50, 60, 64, 71, 74, 78, 89, 91, 102, 103, 111, 112, 126, 133, 161, 164, 170, 178, 179, 188, 190, 192, 193, 195, 203, 206, 209, 212, 213, 215, 218, 219, 224, 240, 261], "correctli": [1, 3, 4, 6, 7, 10, 17, 29, 53, 74, 77, 85, 111, 113, 123, 193, 200, 206, 209], "backtick": [1, 6, 7], "code": [1, 6, 8, 9, 11, 14, 16, 17, 20, 21, 22, 32, 36, 40, 43, 44, 49, 50, 51, 53, 56, 57, 61, 74, 76, 77, 85, 89, 90, 91, 103, 111, 113, 118, 120, 124, 126, 127, 153, 159, 168, 173, 176, 178, 179, 180, 181, 183, 186, 192, 203, 205, 209, 211, 212, 213, 218, 221, 222, 224, 225, 226, 229, 230, 231, 232, 241, 256, 261, 263, 266, 268], "singl": [1, 4, 7, 10, 14, 16, 22, 30, 31, 33, 40, 49, 50, 54, 55, 57, 62, 63, 65, 66, 67, 74, 76, 79, 80, 85, 88, 91, 98, 99, 104, 105, 114, 139, 143, 145, 153, 156, 159, 166, 169, 172, 179, 180, 182, 183, 184, 186, 188, 189, 193, 194, 195, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 218, 224, 226, 228, 231, 232, 234, 259, 261, 264, 265, 270], "render": [1, 3, 6, 7, 31, 49, 77, 173, 179, 193, 268], "resourc": [1, 6, 7, 85, 187, 209, 225, 235], "style": [1, 8, 30, 49, 77, 153, 173, 179, 193, 212, 268], "guid": [1, 3, 8, 9, 12, 20, 21, 30, 49, 111, 123, 193, 219, 252, 254, 262, 266, 267], "tip": [1, 6, 49, 123, 209, 210, 269], "few": [1, 3, 4, 10, 16, 27, 39, 41, 49, 50, 76, 77, 89, 90, 113, 120, 162, 168, 173, 176, 177, 180, 188, 193, 201, 202, 203, 209, 212, 213, 226, 231, 269], "extra": [1, 10, 31, 49, 50, 89, 90, 118, 164, 174, 185, 186, 193, 203, 209, 224, 225, 226, 244], "xelatex": 1, "latexmk": 1, "chrome": 1, "chromium": 1, "On": [1, 10, 16, 26, 42, 49, 51, 57, 76, 79, 89, 111, 164, 174, 183, 186, 187, 188, 189, 209, 211, 228, 232, 244, 246], "xetex": 1, "font": [1, 77, 173, 193], "lmodern": 1, "cask": 1, "tap": 1, "dejavu": 1, "strawberryperl": 1, "miktex": [1, 3], "dejavufont": 1, "appdata": 1, "microsoft": 1, "right": [1, 4, 6, 7, 10, 11, 14, 19, 29, 31, 32, 40, 41, 45, 49, 50, 52, 54, 55, 57, 65, 66, 74, 76, 79, 80, 85, 88, 89, 91, 92, 93, 98, 106, 110, 111, 123, 124, 126, 127, 131, 138, 143, 145, 147, 148, 153, 156, 159, 169, 174, 177, 178, 179, 180, 182, 188, 190, 191, 193, 195, 196, 200, 201, 203, 209, 210, 212, 213, 224, 226, 228, 231, 244, 259, 263, 265, 269], "click": 1, "result": [1, 3, 6, 10, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 29, 30, 31, 39, 40, 41, 45, 48, 49, 50, 51, 53, 55, 57, 61, 66, 67, 71, 73, 74, 76, 78, 79, 80, 82, 85, 88, 89, 90, 91, 92, 98, 99, 102, 103, 104, 107, 111, 114, 120, 123, 126, 144, 151, 153, 154, 156, 158, 159, 161, 162, 164, 168, 169, 177, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 220, 224, 225, 226, 228, 229, 231, 232, 234, 238, 240, 242, 261, 263, 264, 265, 269], "version": [1, 3, 4, 5, 6, 7, 11, 12, 16, 17, 20, 21, 24, 30, 31, 40, 41, 47, 49, 50, 55, 57, 62, 76, 79, 80, 81, 83, 85, 87, 89, 101, 103, 111, 143, 157, 161, 169, 178, 179, 180, 183, 184, 186, 188, 189, 193, 196, 205, 211, 213, 223, 224, 226, 227, 228, 229, 231, 232, 236, 238, 243, 261, 264, 265], "where": [1, 4, 5, 6, 7, 10, 11, 14, 16, 17, 22, 23, 27, 29, 30, 31, 32, 38, 39, 40, 41, 43, 45, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 64, 65, 66, 67, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 85, 89, 92, 95, 98, 102, 105, 106, 107, 108, 110, 111, 113, 122, 123, 124, 126, 127, 133, 143, 148, 154, 156, 158, 159, 160, 161, 162, 169, 172, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 217, 219, 224, 225, 226, 227, 231, 232, 234, 238, 244, 246, 259, 261, 263, 265, 269, 270], "g": [1, 3, 4, 5, 7, 10, 11, 16, 17, 29, 30, 31, 32, 34, 37, 39, 40, 41, 45, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 61, 65, 66, 67, 69, 72, 75, 76, 78, 79, 80, 85, 89, 91, 92, 98, 99, 103, 108, 110, 111, 113, 114, 115, 117, 118, 119, 123, 124, 126, 127, 139, 143, 148, 154, 156, 157, 159, 162, 164, 165, 169, 174, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 229, 231, 232, 233, 234, 246, 259, 264, 268, 269, 270], "1": [1, 3, 4, 7, 11, 12, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131, 132, 133, 134, 138, 141, 142, 143, 144, 145, 147, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 236, 238, 240, 241, 242, 244, 247, 254, 258, 259, 261, 263, 264, 265, 268, 269, 270], "dev": [1, 3, 4, 5, 229], "sympi": [2, 3, 4, 7, 8, 9, 12, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 245, 246, 247, 248, 250, 256, 257, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270], "sympy_debug": [2, 76, 234], "variabl": [2, 3, 6, 7, 10, 12, 14, 17, 22, 23, 24, 26, 27, 29, 31, 32, 44, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 66, 68, 74, 76, 77, 79, 80, 85, 91, 92, 93, 96, 98, 110, 111, 117, 119, 126, 127, 133, 148, 153, 157, 159, 162, 168, 169, 171, 174, 181, 183, 184, 186, 188, 189, 190, 193, 194, 199, 200, 205, 206, 208, 209, 210, 211, 212, 220, 224, 226, 227, 228, 232, 238, 240, 241, 243, 244, 246, 255, 259, 261, 263, 265, 270], "instanc": [2, 4, 6, 7, 10, 13, 16, 17, 24, 25, 26, 28, 30, 31, 40, 42, 44, 49, 51, 53, 54, 55, 57, 62, 65, 66, 67, 72, 73, 76, 77, 80, 82, 85, 89, 91, 92, 99, 103, 106, 110, 111, 127, 132, 139, 143, 149, 153, 154, 156, 158, 159, 169, 171, 173, 174, 179, 183, 184, 188, 189, 190, 191, 193, 201, 203, 205, 209, 211, 212, 213, 217, 218, 219, 224, 225, 226, 228, 231, 232, 238, 239, 240, 241, 242, 244, 246, 258, 259, 264, 269, 270], "unix": [2, 224, 225], "would": [2, 4, 5, 6, 7, 10, 11, 14, 16, 17, 19, 21, 30, 31, 32, 38, 40, 41, 48, 49, 50, 54, 56, 61, 65, 74, 76, 80, 85, 89, 91, 92, 98, 99, 100, 102, 104, 111, 114, 123, 126, 154, 156, 159, 164, 168, 169, 174, 176, 179, 182, 183, 184, 186, 189, 190, 192, 193, 194, 196, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 217, 218, 224, 226, 228, 231, 232, 234, 235, 242, 243, 244, 246, 258, 259, 261, 263, 264, 265, 268, 269, 270], "do": [2, 3, 4, 6, 7, 10, 11, 14, 16, 17, 18, 20, 21, 22, 25, 26, 27, 29, 30, 31, 32, 41, 45, 48, 49, 50, 51, 52, 55, 57, 59, 61, 64, 65, 68, 74, 76, 77, 79, 80, 82, 83, 85, 86, 89, 90, 95, 98, 102, 106, 108, 110, 111, 112, 114, 118, 121, 126, 131, 134, 139, 143, 148, 151, 153, 155, 161, 163, 164, 167, 168, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 196, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 215, 218, 219, 222, 224, 225, 227, 229, 231, 232, 234, 240, 242, 243, 244, 246, 258, 259, 261, 262, 263, 264, 265, 267, 269], "true": [2, 3, 6, 10, 11, 13, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 74, 76, 77, 79, 80, 81, 82, 85, 86, 89, 91, 92, 93, 96, 98, 99, 100, 101, 102, 104, 106, 107, 111, 113, 114, 126, 130, 131, 140, 143, 144, 151, 153, 154, 157, 158, 159, 162, 168, 169, 170, 171, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 224, 225, 226, 227, 229, 231, 232, 234, 238, 240, 241, 242, 243, 244, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "isympi": [2, 3, 11, 77], "window": [2, 234, 255], "just": [2, 4, 6, 7, 10, 11, 16, 17, 21, 27, 30, 31, 40, 47, 49, 50, 51, 72, 74, 76, 77, 78, 79, 85, 89, 90, 100, 102, 103, 108, 111, 114, 118, 123, 124, 126, 139, 144, 149, 159, 164, 168, 173, 174, 176, 180, 182, 183, 184, 186, 188, 192, 193, 200, 201, 202, 203, 205, 209, 212, 222, 224, 226, 227, 229, 243, 244, 246, 258, 259, 261, 262, 263, 264, 265, 269, 270], "limit": [2, 4, 10, 11, 18, 21, 27, 29, 31, 48, 49, 51, 53, 54, 55, 57, 58, 61, 69, 71, 76, 77, 79, 85, 89, 96, 120, 124, 148, 154, 157, 173, 179, 184, 186, 189, 190, 193, 196, 197, 199, 201, 205, 206, 208, 209, 210, 211, 213, 218, 225, 228, 231, 232, 234, 237, 238, 247, 260, 261, 263, 265], "function": [2, 3, 4, 7, 8, 13, 14, 16, 17, 19, 20, 24, 25, 26, 28, 29, 30, 32, 40, 41, 44, 45, 47, 50, 51, 52, 53, 54, 58, 59, 60, 61, 66, 69, 70, 73, 75, 76, 77, 78, 80, 82, 84, 88, 90, 92, 94, 95, 96, 98, 99, 100, 104, 105, 108, 109, 110, 111, 114, 115, 116, 120, 121, 122, 126, 131, 132, 133, 134, 138, 143, 144, 145, 148, 153, 154, 155, 156, 157, 158, 159, 162, 168, 169, 172, 173, 175, 177, 178, 180, 185, 186, 187, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 237, 238, 242, 243, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270], "nice": [2, 4, 6, 21, 49, 61, 85, 89, 111, 123, 126, 179, 193, 203, 234, 264], "print": [2, 4, 6, 7, 11, 14, 16, 17, 21, 24, 25, 26, 27, 29, 30, 32, 33, 38, 40, 41, 48, 49, 50, 53, 54, 55, 57, 76, 78, 79, 82, 85, 86, 89, 90, 91, 93, 98, 106, 111, 113, 120, 125, 131, 139, 152, 153, 157, 159, 169, 175, 177, 179, 182, 183, 184, 188, 189, 199, 200, 202, 203, 205, 209, 211, 218, 220, 224, 226, 231, 232, 234, 236, 238, 241, 248, 250, 256, 259, 260, 261, 262, 263, 264, 265, 269], "tree": [2, 10, 13, 40, 43, 49, 91, 104, 111, 151, 154, 169, 185, 189, 200, 202, 205, 212, 215, 217, 228, 231, 234, 250, 256, 260], "veri": [2, 3, 4, 6, 10, 11, 13, 16, 31, 45, 49, 50, 53, 54, 59, 61, 67, 71, 74, 76, 79, 85, 89, 98, 102, 111, 114, 126, 131, 164, 176, 177, 180, 183, 186, 188, 189, 190, 192, 193, 194, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 224, 225, 226, 232, 258, 261, 264, 269], "sever": [3, 4, 5, 6, 10, 13, 16, 21, 31, 34, 40, 41, 48, 49, 53, 54, 56, 57, 61, 74, 76, 89, 104, 164, 166, 179, 181, 183, 186, 188, 192, 193, 194, 200, 201, 209, 213, 224, 226, 236, 248, 261, 265, 268], "instal": [3, 5, 7, 11, 20, 53, 90, 183, 184, 193, 225, 232, 256, 262, 268], "enabl": [3, 7, 21, 49, 76, 77, 89, 93, 111, 113, 159, 169, 173, 193, 209, 213, 224, 229, 232, 265, 268, 269], "certain": [3, 7, 21, 28, 30, 31, 40, 47, 49, 53, 57, 65, 74, 76, 89, 91, 123, 169, 170, 180, 183, 186, 188, 193, 194, 200, 203, 205, 206, 209, 212, 213, 215, 226, 227, 232, 238, 240, 246, 269], "most": [3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 21, 24, 25, 26, 29, 30, 31, 32, 40, 41, 48, 49, 50, 53, 59, 61, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 98, 102, 106, 111, 118, 123, 124, 127, 161, 168, 172, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 193, 200, 201, 203, 206, 209, 210, 211, 212, 213, 222, 225, 226, 227, 228, 229, 231, 232, 234, 240, 242, 258, 261, 263, 264, 265, 267, 268, 269], "mention": [3, 4, 6, 40, 74, 76, 98, 113, 127, 128, 174, 203, 206, 209, 213, 241, 242, 243, 244, 265], "except": [3, 4, 6, 10, 11, 14, 16, 17, 29, 31, 40, 41, 49, 50, 53, 55, 57, 74, 76, 84, 89, 105, 118, 165, 178, 180, 183, 184, 185, 188, 189, 190, 191, 193, 202, 205, 206, 209, 210, 212, 217, 222, 224, 226, 227, 230, 231, 232, 241, 244, 256, 258, 261, 264, 265], "unless": [3, 6, 16, 24, 26, 29, 31, 40, 48, 49, 50, 54, 57, 64, 65, 74, 85, 88, 132, 176, 177, 181, 183, 188, 189, 193, 198, 201, 202, 209, 211, 224, 228, 231, 232, 234, 238, 246, 259, 265, 269], "thei": [3, 4, 6, 7, 10, 11, 16, 17, 21, 27, 30, 31, 32, 37, 39, 40, 41, 47, 48, 49, 50, 51, 54, 55, 57, 59, 62, 63, 64, 65, 66, 71, 74, 76, 77, 79, 80, 82, 83, 85, 88, 89, 91, 102, 106, 108, 110, 111, 113, 118, 120, 121, 122, 123, 126, 127, 133, 138, 143, 148, 151, 156, 161, 162, 164, 165, 169, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 193, 194, 199, 200, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 219, 222, 224, 226, 228, 231, 232, 234, 238, 244, 246, 259, 261, 262, 263, 264, 265, 269], "intend": [3, 4, 6, 10, 16, 49, 50, 60, 69, 74, 89, 91, 104, 154, 183, 184, 188, 191, 206, 209, 210, 222, 227, 258], "part": [3, 4, 6, 7, 10, 16, 17, 23, 28, 40, 41, 48, 49, 50, 54, 55, 57, 65, 72, 74, 76, 79, 80, 82, 89, 98, 102, 103, 105, 106, 110, 111, 113, 118, 120, 124, 126, 143, 155, 159, 168, 177, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 201, 203, 205, 206, 209, 211, 224, 226, 228, 231, 259, 264, 269], "those": [3, 6, 11, 16, 17, 22, 27, 30, 31, 32, 40, 41, 47, 48, 49, 50, 53, 56, 62, 63, 74, 76, 79, 85, 88, 89, 102, 113, 118, 132, 156, 168, 171, 173, 176, 177, 179, 183, 184, 186, 188, 189, 191, 192, 193, 199, 201, 205, 209, 210, 211, 212, 213, 219, 222, 224, 228, 231, 238, 240, 261, 263, 269], "everi": [3, 4, 6, 16, 20, 25, 26, 27, 30, 35, 37, 40, 41, 49, 50, 64, 78, 80, 85, 89, 98, 124, 174, 176, 177, 179, 180, 181, 183, 184, 186, 188, 193, 198, 201, 203, 205, 206, 209, 212, 213, 215, 241, 244, 246, 262, 264, 265, 269], "doe": [3, 6, 7, 8, 10, 13, 16, 17, 20, 21, 22, 25, 26, 29, 30, 31, 32, 40, 41, 45, 47, 48, 49, 50, 51, 53, 55, 57, 59, 60, 62, 63, 65, 74, 76, 79, 80, 85, 88, 89, 91, 100, 102, 104, 111, 113, 117, 139, 143, 149, 153, 155, 158, 168, 176, 177, 179, 181, 182, 183, 184, 186, 188, 189, 190, 193, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 218, 219, 222, 224, 226, 228, 231, 232, 234, 238, 239, 242, 258, 259, 261, 264, 265, 268, 269, 270], "themselv": [3, 7, 10, 27, 30, 41, 45, 47, 49, 76, 89, 120, 163, 183, 184, 188, 199, 213, 219, 228, 231, 234, 269], "incomplet": [3, 6, 7, 49, 54, 57, 181, 183, 189, 195, 211, 212], "main": [3, 5, 6, 7, 10, 11, 26, 27, 31, 49, 55, 74, 80, 85, 88, 111, 118, 157, 163, 173, 177, 179, 180, 184, 185, 193, 200, 209, 212, 218, 225, 269, 270], "webpag": [3, 7], "complet": [3, 4, 6, 11, 16, 26, 31, 49, 50, 51, 53, 55, 56, 57, 65, 74, 76, 85, 89, 102, 106, 107, 114, 120, 126, 145, 148, 149, 177, 186, 189, 190, 194, 200, 205, 206, 209, 212, 213, 224, 226, 234, 263, 264, 269], "io": [3, 7, 77, 193, 232], "one": [3, 4, 6, 7, 10, 11, 14, 16, 17, 20, 22, 23, 26, 27, 29, 30, 31, 33, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 65, 66, 71, 72, 73, 74, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 98, 99, 102, 103, 105, 106, 111, 112, 114, 123, 124, 126, 128, 131, 132, 133, 139, 144, 153, 157, 159, 161, 162, 164, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 219, 220, 224, 225, 226, 228, 231, 232, 234, 238, 242, 244, 246, 257, 258, 259, 261, 263, 264, 265, 267, 268, 269], "arbitrari": [3, 6, 10, 11, 16, 29, 34, 41, 42, 48, 49, 50, 53, 54, 57, 60, 61, 63, 79, 80, 85, 93, 124, 145, 148, 177, 179, 180, 183, 184, 186, 188, 190, 205, 209, 210, 211, 219, 229, 232, 238, 239, 258, 259, 264, 269, 270], "precis": [3, 4, 6, 11, 16, 17, 31, 40, 49, 52, 53, 54, 57, 65, 76, 85, 89, 96, 124, 178, 180, 183, 184, 188, 189, 190, 193, 200, 205, 206, 211, 212, 225, 226, 234, 258, 269], "arithmet": [3, 31, 49, 50, 53, 80, 85, 89, 148, 155, 178, 179, 180, 182, 183, 184, 186, 187, 191, 194], "hood": 3, "whenev": [3, 4, 10, 11, 47, 74, 76, 85, 166, 179, 180, 181, 195, 200, 203, 213, 259, 261, 264], "calcul": [3, 11, 14, 16, 23, 29, 32, 41, 47, 49, 50, 51, 52, 53, 55, 57, 59, 61, 62, 63, 65, 66, 76, 80, 82, 85, 89, 92, 93, 100, 102, 103, 106, 110, 113, 114, 128, 131, 132, 135, 138, 154, 155, 156, 157, 159, 160, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 183, 184, 186, 188, 189, 190, 195, 200, 209, 213, 217, 225, 226, 232, 238, 240, 244, 245, 246, 265, 268], "float": [3, 16, 31, 40, 55, 57, 64, 66, 76, 77, 80, 85, 89, 91, 96, 98, 126, 132, 173, 179, 183, 184, 193, 205, 211, 213, 224, 232, 234, 249, 258, 261], "point": [3, 4, 6, 7, 10, 11, 14, 16, 21, 23, 29, 31, 32, 40, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 71, 72, 73, 74, 76, 85, 89, 92, 93, 96, 103, 105, 106, 107, 108, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 139, 161, 164, 170, 174, 175, 177, 179, 180, 183, 184, 186, 188, 189, 193, 195, 199, 200, 201, 209, 211, 212, 213, 225, 228, 231, 232, 234, 238, 240, 242, 243, 244, 245, 246, 247, 249, 258, 259, 261, 264], "valu": [3, 4, 6, 7, 10, 11, 14, 16, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 40, 41, 45, 48, 49, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 100, 103, 105, 106, 107, 108, 110, 111, 113, 123, 126, 128, 132, 135, 138, 143, 145, 148, 151, 153, 154, 155, 156, 159, 160, 162, 163, 164, 169, 170, 172, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 224, 226, 227, 231, 232, 234, 240, 242, 244, 247, 259, 261, 264], "evalf": [3, 6, 11, 16, 31, 48, 53, 54, 55, 57, 68, 71, 72, 80, 85, 91, 111, 113, 126, 141, 184, 189, 200, 201, 205, 213, 225, 232, 249, 260], "cannot": [3, 4, 6, 7, 10, 11, 13, 17, 21, 24, 25, 26, 27, 28, 29, 31, 41, 46, 48, 49, 51, 53, 54, 55, 59, 61, 62, 64, 66, 71, 76, 78, 81, 83, 85, 87, 89, 98, 154, 162, 164, 176, 177, 179, 184, 186, 188, 189, 190, 193, 200, 201, 205, 206, 208, 209, 211, 212, 213, 214, 222, 224, 225, 226, 231, 235, 238, 239, 263, 264, 265, 269, 270], "without": [3, 4, 6, 7, 10, 11, 16, 21, 25, 27, 28, 31, 48, 49, 50, 51, 53, 57, 74, 76, 77, 80, 82, 85, 98, 99, 111, 116, 118, 122, 123, 159, 164, 168, 169, 170, 176, 179, 182, 183, 186, 189, 193, 195, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 215, 218, 219, 222, 224, 225, 226, 229, 231, 232, 234, 240, 243, 265, 269], "import": [3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 247, 258, 259, 261, 263, 264, 265, 267, 268, 269, 270], "importerror": 3, "extern": [3, 21, 77, 91, 96, 113, 120, 173, 183, 184, 194, 201, 205, 213, 224, 225], "doc": [3, 4, 6, 7, 8, 11, 20, 31, 40, 48, 49, 65, 77, 124, 161, 183, 185, 206, 209, 224, 225, 227, 229, 231, 238, 242], "latest": [3, 5, 21, 30, 227, 229, 232], "mean": [3, 4, 6, 7, 10, 11, 16, 17, 27, 32, 41, 48, 49, 50, 51, 67, 74, 76, 77, 79, 80, 83, 85, 89, 102, 159, 161, 164, 169, 173, 176, 179, 180, 181, 183, 186, 188, 192, 193, 203, 205, 206, 209, 211, 212, 213, 214, 215, 217, 218, 224, 231, 242, 258, 259, 261, 263, 264, 265, 269, 270], "did": [3, 7, 17, 49, 76, 89, 102, 117, 164, 186, 190, 201, 211, 222, 232, 261, 263, 269], "explain": [3, 4, 6, 7, 16, 30, 45, 49, 57, 67, 72, 180, 183, 186, 188, 190, 200], "ones": [3, 4, 10, 21, 31, 40, 45, 49, 74, 76, 79, 80, 82, 85, 88, 89, 111, 132, 153, 159, 182, 186, 196, 206, 209, 214, 220, 226, 234, 238, 242, 265, 268], "typic": [3, 4, 10, 45, 57, 74, 89, 98, 103, 108, 112, 168, 177, 179, 181, 186, 190, 203, 225, 226, 242], "directli": [3, 4, 6, 10, 11, 14, 16, 17, 21, 25, 26, 29, 30, 31, 40, 48, 49, 51, 55, 60, 80, 82, 85, 89, 111, 145, 157, 162, 169, 172, 179, 180, 183, 184, 188, 189, 201, 202, 203, 205, 206, 209, 210, 212, 213, 224, 225, 226, 227, 228, 229, 259, 270], "git": [3, 8], "repositori": [3, 5, 7, 21], "vast": [3, 76, 185], "wrap": [3, 4, 6, 24, 25, 26, 27, 31, 38, 49, 55, 77, 90, 173, 177, 179, 182, 183, 186, 193, 196, 212, 218, 225, 229, 232, 234, 264], "addition": [3, 6, 10, 49, 121, 157, 177, 186, 193, 213, 222, 229, 241], "ci": [3, 7, 57, 74, 193, 268], "wish": [3, 6, 11, 21, 31, 49, 50, 53, 74, 89, 154, 168, 177, 228, 232, 259, 263, 265, 270], "local": [3, 22, 24, 25, 26, 49, 51, 74, 91, 117, 119, 171, 180, 186, 211, 224], "improv": [3, 4, 10, 17, 49, 74, 120, 179, 183, 186, 187, 189, 190, 192, 194, 209, 212, 218, 249, 259, 265], "perform": [3, 10, 11, 13, 14, 16, 28, 30, 31, 32, 40, 41, 44, 48, 49, 50, 52, 53, 55, 62, 66, 73, 76, 83, 85, 89, 90, 104, 106, 113, 114, 120, 123, 124, 126, 143, 144, 153, 156, 159, 174, 177, 181, 182, 183, 186, 188, 189, 194, 195, 196, 200, 205, 206, 209, 211, 212, 213, 214, 225, 231, 238, 239, 241, 244, 249, 258, 259, 263, 264, 269], "gmpy2": [3, 183, 184], "wrapper": [3, 10, 25, 27, 31, 41, 49, 57, 85, 123, 171, 173, 182, 183, 186, 193, 200, 209, 212, 213, 225, 229, 231], "gmp": 3, "multipl": [3, 4, 6, 10, 11, 16, 25, 26, 27, 29, 30, 31, 32, 38, 40, 41, 45, 48, 49, 50, 54, 55, 57, 59, 64, 67, 69, 74, 76, 78, 79, 80, 82, 85, 86, 89, 91, 95, 98, 102, 113, 120, 126, 127, 143, 144, 145, 149, 156, 158, 161, 164, 165, 166, 169, 172, 176, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 193, 198, 199, 201, 202, 203, 205, 206, 209, 210, 212, 213, 214, 217, 219, 222, 226, 227, 228, 229, 231, 232, 234, 238, 242, 258, 259, 261, 262, 264, 265, 270], "larg": [3, 4, 6, 11, 16, 40, 41, 49, 50, 59, 74, 76, 88, 89, 102, 107, 123, 126, 139, 164, 168, 178, 183, 184, 186, 189, 192, 193, 194, 200, 203, 205, 213, 218, 225, 232, 234, 240, 258, 263, 269], "integ": [3, 6, 7, 10, 11, 16, 19, 24, 25, 26, 29, 31, 32, 38, 40, 41, 42, 43, 45, 48, 50, 51, 52, 53, 54, 56, 57, 59, 62, 73, 74, 76, 77, 78, 79, 80, 82, 85, 86, 89, 91, 92, 98, 100, 148, 153, 155, 156, 157, 159, 161, 169, 171, 173, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 198, 199, 200, 202, 203, 205, 206, 209, 211, 212, 213, 217, 218, 219, 225, 226, 228, 231, 234, 259, 261, 264, 268, 269], "faster": [3, 16, 31, 34, 49, 57, 80, 89, 90, 102, 104, 106, 107, 123, 182, 183, 184, 186, 188, 189, 190, 194, 196, 200, 205, 206, 209, 210, 212, 225, 228], "int": [3, 6, 7, 10, 11, 16, 17, 23, 29, 31, 41, 49, 50, 51, 54, 55, 57, 58, 65, 74, 76, 77, 79, 80, 85, 86, 89, 91, 96, 98, 139, 143, 144, 153, 169, 171, 172, 173, 178, 179, 183, 184, 188, 189, 190, 193, 195, 196, 198, 209, 210, 213, 225, 229, 231, 234, 261, 263, 264, 268, 269], "core": [3, 4, 5, 6, 11, 13, 16, 17, 27, 29, 31, 40, 50, 55, 56, 58, 66, 80, 84, 89, 91, 157, 158, 181, 183, 184, 185, 186, 188, 189, 190, 193, 200, 201, 205, 206, 209, 213, 223, 224, 225, 231, 232, 236, 248, 249, 261, 264], "oper": [3, 5, 6, 16, 17, 23, 27, 31, 40, 41, 42, 48, 49, 50, 51, 52, 53, 55, 57, 59, 67, 69, 72, 74, 79, 80, 82, 84, 89, 91, 98, 99, 102, 106, 107, 114, 118, 123, 126, 131, 135, 136, 140, 142, 143, 144, 145, 150, 151, 154, 156, 157, 158, 159, 168, 169, 171, 175, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 196, 198, 201, 202, 204, 205, 209, 211, 212, 215, 216, 217, 218, 224, 225, 228, 231, 232, 238, 245, 248, 254, 260, 261, 262, 264, 269], "poli": [3, 11, 48, 49, 50, 54, 55, 57, 58, 65, 71, 76, 80, 82, 85, 89, 126, 180, 181, 185, 186, 188, 189, 190, 192, 195, 208, 209, 211, 212, 224], "refer": [3, 4, 5, 7, 11, 14, 17, 18, 20, 21, 25, 26, 27, 29, 31, 33, 35, 37, 38, 40, 41, 42, 43, 47, 50, 52, 54, 55, 57, 59, 64, 65, 66, 69, 71, 75, 77, 78, 79, 84, 86, 90, 92, 96, 98, 99, 101, 103, 105, 106, 108, 110, 111, 113, 120, 121, 124, 126, 127, 128, 129, 130, 132, 136, 138, 140, 141, 142, 145, 147, 148, 156, 157, 159, 163, 168, 169, 170, 171, 172, 174, 176, 183, 185, 190, 193, 195, 196, 198, 201, 204, 205, 207, 209, 210, 211, 213, 219, 228, 230, 231, 232, 234, 238, 241, 242, 246, 249, 252, 253, 254, 255, 256, 261, 265, 266, 269], "domain": [3, 6, 10, 14, 29, 30, 49, 50, 52, 54, 55, 57, 68, 70, 71, 74, 76, 82, 85, 86, 89, 95, 98, 111, 126, 180, 182, 185, 186, 188, 190, 191, 207, 208, 209, 211, 213, 265, 270], "No": [3, 6, 7, 11, 30, 49, 57, 64, 79, 89, 99, 111, 154, 179, 189, 195, 196, 205, 206, 211, 212, 213, 218, 222, 228, 229, 231, 258, 270], "mani": [3, 4, 6, 11, 14, 16, 17, 21, 29, 30, 31, 32, 37, 40, 45, 49, 50, 51, 53, 55, 57, 61, 74, 76, 79, 80, 85, 89, 90, 106, 107, 111, 113, 120, 122, 123, 126, 143, 159, 167, 177, 180, 182, 183, 184, 186, 188, 197, 200, 201, 203, 205, 206, 209, 210, 211, 212, 213, 217, 226, 231, 258, 259, 261, 262, 263, 264, 268, 269, 270], "algorithm": [3, 6, 11, 16, 29, 33, 34, 36, 39, 40, 41, 43, 45, 47, 48, 49, 50, 53, 54, 55, 61, 66, 74, 76, 79, 82, 85, 86, 89, 99, 123, 146, 164, 169, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 194, 197, 198, 201, 202, 204, 205, 206, 209, 211, 212, 213, 219, 228, 231, 250, 259, 264, 265, 269], "simplif": [3, 11, 16, 24, 26, 28, 29, 31, 49, 51, 54, 55, 56, 74, 80, 85, 91, 104, 111, 123, 126, 143, 159, 169, 189, 194, 204, 209, 211, 212, 248, 249, 251, 258, 260, 262, 263], "factor": [3, 10, 11, 32, 40, 41, 48, 49, 50, 53, 54, 55, 57, 74, 76, 85, 89, 92, 98, 126, 128, 136, 140, 143, 155, 159, 164, 165, 166, 180, 183, 184, 185, 187, 188, 189, 196, 202, 203, 205, 206, 211, 213, 217, 228, 241, 244, 263, 265], "matric": [3, 6, 15, 16, 27, 31, 49, 50, 76, 86, 88, 98, 105, 106, 107, 111, 114, 123, 126, 128, 131, 132, 134, 142, 143, 153, 158, 169, 177, 178, 182, 188, 193, 194, 201, 203, 205, 206, 209, 211, 212, 214, 216, 226, 227, 254, 260, 262, 263], "thu": [3, 4, 10, 11, 14, 27, 34, 40, 41, 49, 50, 51, 55, 57, 72, 74, 76, 80, 83, 85, 88, 89, 99, 110, 114, 120, 123, 164, 169, 181, 186, 188, 190, 194, 200, 203, 205, 226, 231, 232, 242, 243, 261, 264, 269, 270], "speed": [3, 6, 26, 31, 40, 49, 50, 53, 80, 89, 90, 100, 105, 106, 107, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 126, 127, 130, 133, 168, 169, 172, 177, 178, 190, 193, 194, 200, 205, 209, 225, 228, 231, 264, 265], "non": [3, 4, 11, 16, 22, 27, 29, 32, 39, 42, 48, 49, 50, 54, 55, 56, 57, 58, 59, 62, 63, 64, 76, 78, 79, 80, 81, 82, 85, 86, 88, 102, 106, 108, 113, 114, 118, 121, 122, 126, 143, 148, 158, 159, 161, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 196, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 214, 217, 218, 219, 224, 226, 231, 234, 244, 264, 269, 270], "who": [3, 4, 6, 14, 50, 51, 126, 177, 186, 193, 262], "abl": [3, 4, 6, 14, 16, 30, 31, 40, 45, 49, 50, 51, 60, 68, 76, 82, 85, 89, 95, 111, 121, 123, 124, 126, 127, 180, 183, 190, 209, 212, 224, 241, 263, 268, 270], "experi": [3, 113, 212, 213], "design": [3, 4, 6, 10, 12, 13, 17, 19, 20, 27, 32, 39, 49, 85, 88, 91, 126, 127, 183, 187, 193, 198, 203, 209, 212, 263, 264, 268], "interfac": [3, 7, 29, 49, 77, 105, 120, 128, 154, 173, 175, 177, 183, 186, 191, 212, 225, 226, 255], "ipython": [3, 6, 10, 11, 21, 77, 126, 173, 232, 236, 237, 267, 268], "jupyt": [3, 10, 232, 236], "notebook": [3, 21, 77, 173, 232, 267, 268], "init_sess": [3, 77, 268], "usual": [3, 10, 11, 14, 16, 30, 32, 40, 48, 49, 50, 67, 74, 76, 85, 120, 145, 157, 164, 174, 176, 177, 180, 181, 183, 184, 186, 192, 193, 194, 200, 203, 209, 212, 213, 214, 218, 219, 226, 228, 232, 238, 246, 258, 261, 264, 268, 269], "flag": [3, 4, 29, 31, 40, 41, 45, 47, 49, 62, 64, 76, 79, 80, 81, 85, 89, 111, 143, 179, 184, 186, 189, 190, 193, 194, 195, 201, 205, 206, 209, 211, 212, 219, 224, 225, 231, 234, 258, 269], "auto_symbol": [3, 77, 91], "auto_int_to_integ": [3, 77], "qt": 3, "consol": [3, 4, 11, 49, 77, 173, 179, 268], "express": [3, 4, 6, 7, 12, 13, 16, 17, 19, 24, 25, 26, 27, 28, 29, 41, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 64, 65, 69, 72, 73, 74, 76, 77, 80, 83, 84, 85, 88, 89, 90, 92, 98, 99, 101, 102, 107, 108, 111, 114, 120, 121, 122, 123, 124, 126, 127, 134, 138, 142, 143, 147, 148, 151, 154, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 172, 173, 174, 175, 177, 178, 179, 180, 181, 184, 185, 186, 188, 189, 190, 193, 194, 196, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 225, 226, 227, 228, 229, 232, 234, 238, 239, 241, 243, 244, 245, 246, 250, 251, 252, 256, 259, 260, 261, 262, 263, 265, 268, 269, 270], "mathjax": [3, 7, 77, 173, 268], "preview": [3, 30, 227, 256], "save": [3, 29, 49, 85, 89, 179, 192, 211, 228], "viewer": [3, 7, 30, 193, 227], "parser": [3, 82, 91, 120, 126, 224], "modul": [3, 4, 5, 6, 7, 10, 11, 13, 16, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 39, 41, 49, 50, 52, 54, 55, 57, 61, 65, 69, 72, 75, 76, 77, 79, 82, 83, 84, 85, 90, 91, 92, 94, 96, 99, 102, 111, 112, 116, 120, 121, 122, 126, 128, 131, 133, 134, 146, 149, 162, 163, 164, 165, 174, 177, 179, 184, 185, 187, 190, 191, 193, 197, 200, 203, 207, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 240, 242, 244, 245, 246, 247, 248, 254, 256, 258, 261, 263, 269, 270], "parse_expr": [3, 10, 16, 91], "mathematca": 3, "parse_mathematica": [3, 10, 91], "maxima": [3, 91, 212], "parse_maxima": [3, 91], "antlr": [3, 91, 111], "runtim": [3, 31, 49, 107, 256], "autolev": [3, 113, 120], "call": [3, 4, 6, 7, 11, 13, 14, 16, 17, 19, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 38, 39, 40, 41, 47, 49, 50, 52, 53, 54, 56, 57, 59, 64, 65, 67, 72, 74, 76, 78, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 98, 102, 111, 113, 114, 123, 124, 149, 151, 154, 159, 164, 169, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 215, 217, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 238, 240, 241, 244, 246, 259, 261, 263, 264, 265, 268, 269, 270], "antlr4": [3, 91], "awar": [3, 4, 6, 11, 17, 29, 49, 53, 79, 85, 203, 213, 232], "must": [3, 4, 5, 6, 10, 11, 16, 17, 23, 24, 25, 26, 31, 40, 41, 43, 45, 47, 48, 49, 50, 51, 54, 55, 56, 57, 59, 62, 65, 68, 71, 72, 74, 76, 79, 80, 81, 82, 85, 88, 89, 92, 93, 96, 98, 99, 106, 107, 111, 113, 120, 121, 122, 123, 124, 126, 139, 154, 156, 159, 168, 169, 177, 178, 179, 180, 181, 184, 186, 188, 189, 193, 194, 201, 202, 203, 205, 206, 209, 211, 212, 213, 217, 218, 224, 225, 226, 227, 228, 229, 231, 232, 235, 261, 263, 264, 268, 269], "match": [3, 4, 6, 10, 11, 16, 40, 41, 48, 49, 62, 74, 76, 80, 85, 110, 135, 160, 168, 169, 182, 189, 205, 206, 209, 210, 213, 222, 224, 226, 231, 232, 243, 259], "wa": [3, 4, 10, 11, 16, 38, 40, 41, 43, 49, 50, 51, 57, 62, 85, 89, 91, 102, 103, 111, 113, 114, 123, 124, 154, 164, 176, 177, 178, 180, 186, 188, 189, 190, 192, 193, 202, 203, 205, 209, 211, 213, 222, 224, 227, 229, 231, 232, 259, 261, 263, 264, 267], "compil": [3, 31, 77, 90, 102, 126, 173, 193, 205, 218, 224, 225, 226, 248, 263], "4": [3, 7, 11, 12, 14, 16, 17, 19, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 72, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 96, 98, 99, 100, 104, 111, 113, 114, 115, 117, 118, 119, 120, 123, 124, 126, 127, 128, 131, 135, 138, 143, 153, 154, 156, 157, 158, 159, 160, 162, 168, 169, 170, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 224, 225, 228, 231, 232, 238, 240, 241, 242, 244, 246, 247, 258, 259, 261, 263, 264, 265, 269, 270], "clang": [3, 91], "bind": [3, 31, 193, 225], "parse_c": 3, "lfortran": [3, 91], "fortran": [3, 14, 29, 90, 91, 102, 126, 178, 226, 250, 256, 268], "satisfi": [3, 7, 10, 16, 26, 27, 29, 32, 37, 40, 45, 49, 50, 54, 57, 59, 72, 74, 78, 79, 85, 89, 107, 123, 143, 148, 180, 181, 186, 188, 189, 193, 199, 200, 201, 206, 209, 210, 211, 212, 213, 219, 264, 269], "implement": [3, 6, 7, 10, 12, 13, 17, 18, 20, 23, 24, 25, 26, 29, 30, 31, 32, 34, 39, 40, 41, 46, 49, 50, 52, 54, 55, 56, 57, 60, 62, 69, 70, 72, 73, 75, 76, 79, 80, 81, 85, 89, 90, 91, 102, 111, 120, 128, 130, 131, 134, 143, 144, 152, 153, 155, 163, 168, 170, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 197, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 217, 218, 228, 230, 231, 232, 235, 245, 248, 256, 259, 263, 269], "dpll": 3, "But": [3, 4, 7, 10, 11, 48, 49, 57, 63, 73, 80, 85, 89, 147, 148, 159, 164, 169, 180, 181, 186, 190, 200, 202, 203, 205, 206, 209, 211, 212, 218, 228, 231, 232, 240, 259, 261, 263, 264, 269], "sat": [3, 25], "solver": [3, 6, 25, 57, 85, 89, 110, 120, 126, 127, 182, 185, 205, 206, 210, 224, 248, 249, 260, 262], "ask": [3, 6, 11, 13, 16, 17, 25, 26, 27, 28, 49, 61, 74, 111, 164, 180, 199, 205, 212, 231, 261], "pycosat": 3, "forc": [3, 11, 14, 17, 49, 53, 55, 59, 65, 74, 76, 79, 92, 93, 103, 106, 110, 113, 114, 115, 116, 117, 120, 121, 122, 123, 126, 147, 148, 162, 174, 177, 179, 181, 183, 202, 205, 206, 211, 224, 244, 246, 268, 269], "pysat": 3, "minisat": 3, "minisat22": 3, "heavi": [3, 213, 264], "primarili": [3, 16, 31, 49, 89, 92, 158, 189, 191, 225, 228, 234, 241], "support": [3, 4, 5, 6, 7, 10, 11, 21, 23, 24, 25, 26, 29, 30, 31, 41, 49, 53, 56, 57, 59, 73, 76, 82, 85, 89, 90, 91, 92, 93, 95, 98, 102, 111, 126, 154, 169, 176, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 198, 199, 200, 201, 205, 209, 210, 211, 212, 213, 214, 218, 222, 224, 225, 226, 232, 242, 244, 259, 261, 264, 268], "give": [3, 4, 6, 11, 16, 17, 24, 26, 31, 32, 38, 40, 41, 42, 43, 48, 49, 50, 51, 54, 55, 57, 59, 61, 62, 64, 65, 73, 74, 76, 77, 79, 82, 85, 88, 89, 90, 92, 98, 111, 126, 138, 153, 154, 156, 157, 161, 162, 164, 165, 167, 169, 172, 174, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 189, 190, 193, 194, 195, 196, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 224, 225, 226, 231, 241, 246, 261, 262, 264, 269, 270], "rudimentari": [3, 186], "text": [3, 4, 6, 7, 21, 31, 40, 50, 54, 55, 57, 67, 74, 77, 80, 85, 89, 124, 164, 173, 179, 180, 193, 200, 206, 209, 212, 213, 224], "pyglet": [3, 193, 255], "pygletplot": [3, 179], "2d": [3, 10, 62, 63, 65, 75, 92, 93, 137, 169, 179, 193, 206, 218, 263], "3d": [3, 10, 23, 33, 62, 63, 92, 137, 160, 174, 179, 241, 243, 244, 245, 246], "evalu": [3, 6, 14, 16, 17, 19, 24, 25, 26, 29, 31, 49, 51, 54, 55, 57, 60, 64, 65, 69, 74, 76, 79, 82, 85, 89, 90, 91, 98, 102, 104, 111, 120, 123, 124, 134, 136, 138, 140, 145, 148, 156, 159, 178, 179, 183, 184, 186, 187, 189, 193, 194, 199, 200, 201, 203, 205, 206, 209, 211, 212, 213, 215, 225, 226, 227, 232, 244, 249, 258, 259, 260, 261, 263, 265], "numer": [3, 6, 10, 11, 14, 16, 19, 27, 29, 31, 48, 49, 54, 57, 61, 65, 69, 72, 85, 89, 91, 95, 96, 98, 106, 107, 111, 113, 120, 123, 127, 131, 138, 141, 156, 163, 168, 177, 179, 183, 184, 186, 187, 188, 189, 192, 193, 202, 203, 205, 209, 211, 212, 218, 224, 225, 231, 232, 249, 258, 261, 265, 269], "variou": [3, 6, 7, 14, 29, 31, 33, 40, 48, 49, 54, 69, 74, 76, 79, 108, 138, 142, 143, 154, 156, 168, 180, 181, 184, 185, 186, 188, 194, 200, 203, 206, 209, 210, 212, 226, 269], "primari": [3, 4, 6, 7, 16, 49, 61, 79, 177, 180, 226, 232], "vehicl": 3, "between": [3, 4, 13, 17, 30, 31, 39, 40, 41, 43, 47, 49, 51, 54, 57, 59, 61, 62, 63, 64, 65, 66, 76, 78, 79, 82, 83, 85, 89, 90, 91, 95, 96, 98, 105, 108, 110, 111, 117, 119, 123, 124, 126, 127, 128, 131, 132, 138, 145, 147, 148, 149, 153, 156, 157, 158, 159, 162, 163, 164, 169, 170, 171, 172, 174, 176, 177, 179, 180, 182, 185, 186, 188, 193, 195, 205, 209, 210, 211, 212, 213, 214, 227, 232, 238, 240, 241, 244, 246, 261], "standard": [3, 7, 10, 11, 16, 31, 49, 53, 55, 57, 72, 74, 76, 77, 78, 79, 83, 85, 89, 90, 91, 101, 136, 140, 169, 174, 180, 183, 184, 186, 193, 196, 201, 205, 206, 209, 212, 213, 226, 232, 235, 241, 246, 258, 261, 269], "wai": [3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 16, 17, 22, 30, 32, 33, 38, 40, 41, 42, 45, 49, 51, 54, 57, 65, 69, 73, 74, 76, 78, 82, 85, 88, 89, 91, 92, 102, 106, 108, 110, 111, 114, 116, 117, 120, 123, 139, 153, 156, 157, 162, 164, 167, 168, 169, 171, 172, 174, 176, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 200, 203, 205, 206, 209, 210, 212, 214, 215, 218, 219, 222, 226, 228, 231, 232, 235, 238, 241, 242, 243, 244, 246, 258, 259, 261, 262, 263, 264, 269, 270], "principl": [3, 50, 80, 89, 130, 180, 181, 186, 202, 211], "pass": [3, 4, 5, 6, 11, 13, 16, 17, 22, 23, 26, 29, 30, 31, 40, 41, 49, 50, 51, 53, 55, 56, 57, 59, 62, 63, 65, 76, 77, 79, 80, 82, 85, 86, 89, 91, 92, 96, 98, 103, 110, 111, 114, 126, 127, 131, 148, 149, 153, 154, 156, 157, 169, 173, 179, 180, 182, 183, 184, 186, 188, 189, 191, 193, 194, 200, 201, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 224, 225, 226, 227, 229, 231, 232, 234, 237, 238, 258, 259, 264, 268, 269, 270], "appropri": [3, 6, 7, 11, 14, 40, 49, 55, 56, 64, 85, 102, 113, 148, 149, 159, 169, 176, 182, 183, 189, 190, 193, 199, 200, 205, 206, 211, 213, 218, 226, 242, 268], "namespac": [3, 6, 10, 22, 31, 32, 49, 184, 206, 209, 210, 224, 226, 227, 232], "dictionari": [3, 10, 30, 31, 38, 40, 41, 47, 49, 54, 63, 65, 78, 80, 85, 88, 89, 91, 92, 104, 106, 107, 110, 111, 113, 114, 117, 121, 123, 149, 159, 169, 177, 179, 181, 184, 186, 188, 189, 191, 193, 200, 205, 206, 209, 210, 211, 212, 213, 217, 219, 224, 228, 231, 232, 238, 258, 265], "third": [3, 4, 31, 40, 41, 49, 57, 59, 63, 98, 156, 162, 176, 181, 189, 203, 209, 212, 213, 229, 231, 245, 259, 264], "argument": [3, 4, 5, 6, 13, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 40, 41, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 65, 66, 74, 76, 77, 79, 80, 82, 85, 88, 89, 91, 92, 96, 98, 106, 110, 111, 121, 122, 126, 133, 136, 140, 142, 145, 148, 153, 154, 156, 157, 158, 159, 167, 173, 174, 178, 179, 180, 181, 183, 184, 186, 188, 189, 192, 193, 194, 195, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 217, 218, 224, 225, 226, 227, 228, 229, 231, 232, 234, 241, 242, 244, 258, 259, 264, 265, 269], "default": [3, 4, 6, 7, 11, 16, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 39, 40, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 71, 76, 77, 79, 80, 82, 85, 86, 89, 90, 91, 92, 93, 96, 98, 100, 102, 103, 104, 105, 106, 107, 111, 123, 132, 149, 151, 154, 156, 157, 159, 165, 168, 169, 171, 172, 173, 178, 179, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 218, 219, 224, 225, 226, 228, 229, 231, 232, 234, 238, 258, 259, 263, 265, 268, 269], "translat": [3, 10, 31, 40, 49, 58, 60, 64, 66, 90, 91, 98, 101, 105, 106, 117, 119, 124, 176, 179, 193, 209, 211, 225, 226, 232, 234, 242], "numpi": [3, 6, 10, 21, 31, 49, 72, 77, 84, 90, 96, 111, 126, 143, 153, 182, 193, 213, 218, 225, 226, 232, 258, 261], "By": [3, 11, 16, 24, 26, 31, 39, 48, 49, 51, 53, 54, 57, 63, 64, 68, 72, 74, 79, 80, 85, 88, 89, 90, 91, 92, 93, 96, 103, 154, 159, 179, 181, 183, 184, 186, 188, 189, 190, 192, 193, 195, 200, 202, 205, 206, 209, 211, 212, 213, 217, 219, 220, 224, 227, 231, 232, 244, 258, 263, 264, 269], "produc": [3, 6, 7, 17, 30, 40, 49, 50, 62, 76, 79, 85, 169, 183, 188, 189, 193, 200, 209, 210, 211, 213, 222, 224, 228, 229, 231, 268], "behavior": [3, 4, 10, 11, 40, 49, 57, 76, 91, 101, 102, 120, 123, 154, 180, 181, 188, 189, 193, 194, 198, 200, 202, 205, 222, 225, 227, 231, 232, 261], "backward": [3, 8, 14, 29, 49, 80, 85, 193, 231, 269], "scipi": [3, 31, 49, 57, 102, 126, 153, 193, 213, 225, 232, 258, 267], "special": [3, 6, 12, 16, 22, 23, 41, 49, 50, 52, 53, 54, 56, 64, 67, 74, 76, 80, 85, 126, 143, 148, 174, 180, 183, 185, 186, 187, 188, 193, 202, 203, 205, 209, 210, 211, 213, 224, 225, 226, 229, 231, 232, 241, 244, 246, 250, 251, 259, 260, 264], "cupi": [3, 90], "cuda": [3, 90], "gpu": [3, 90, 126], "jax": [3, 90, 232], "xla": [3, 90], "program": [3, 7, 11, 16, 31, 33, 41, 126, 164, 178, 226, 228, 261, 263, 267, 269], "tpu": [3, 90], "compatibli": 3, "tensorflow": [3, 232], "learn": [3, 5, 7, 19, 85, 124, 177, 202, 212, 258, 261, 262, 263, 267], "numexpr": [3, 232], "fast": [3, 16, 31, 49, 76, 84, 85, 89, 131, 184, 185, 186, 187, 188, 189, 190, 196, 200, 209, 211, 228, 231, 232], "alreadi": [3, 4, 10, 11, 16, 21, 40, 41, 49, 50, 56, 58, 59, 62, 63, 65, 74, 76, 80, 86, 89, 99, 103, 111, 123, 128, 154, 156, 159, 174, 176, 177, 179, 182, 183, 186, 188, 192, 196, 202, 203, 205, 209, 212, 213, 219, 242, 244, 259, 261, 262, 263, 267, 268, 269, 270], "number": [3, 4, 5, 6, 7, 10, 13, 16, 23, 25, 26, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 50, 51, 54, 55, 57, 59, 62, 63, 64, 65, 66, 68, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 89, 90, 91, 93, 96, 98, 99, 100, 102, 106, 107, 110, 111, 114, 123, 124, 126, 132, 135, 138, 139, 142, 143, 144, 145, 147, 148, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 181, 182, 184, 185, 186, 187, 189, 190, 193, 195, 199, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 218, 219, 224, 226, 228, 231, 234, 238, 240, 241, 243, 244, 246, 249, 258, 259, 261, 263, 264, 265, 269], "languag": [3, 7, 11, 14, 31, 55, 85, 91, 102, 111, 126, 193, 198, 213, 225, 226, 261, 263, 265, 267, 269], "valid": [3, 6, 7, 10, 16, 17, 24, 26, 28, 29, 30, 31, 42, 48, 49, 54, 55, 65, 75, 85, 89, 104, 106, 111, 113, 124, 128, 132, 151, 156, 166, 169, 173, 177, 183, 186, 189, 192, 193, 201, 205, 206, 209, 211, 212, 213, 232, 265, 269], "rather": [3, 4, 6, 7, 10, 11, 14, 16, 17, 22, 27, 31, 32, 40, 41, 42, 49, 53, 60, 65, 67, 74, 79, 80, 82, 85, 89, 91, 110, 117, 126, 139, 153, 157, 159, 168, 176, 180, 183, 186, 189, 191, 196, 203, 206, 208, 209, 212, 213, 228, 231, 232, 235, 246, 261, 263, 264], "string": [3, 4, 6, 7, 11, 18, 24, 30, 31, 33, 38, 49, 50, 51, 52, 53, 62, 72, 77, 78, 79, 82, 85, 89, 91, 92, 96, 102, 103, 105, 108, 130, 139, 143, 153, 157, 161, 167, 168, 169, 172, 173, 174, 179, 182, 184, 188, 193, 194, 200, 205, 209, 213, 214, 217, 218, 219, 224, 225, 226, 231, 232, 234, 236, 238, 239, 241, 260, 261, 264, 268], "repres": [3, 10, 11, 13, 16, 17, 23, 25, 27, 30, 31, 32, 33, 38, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 59, 60, 62, 64, 65, 66, 71, 72, 75, 76, 78, 79, 80, 82, 85, 89, 91, 92, 93, 95, 96, 98, 103, 105, 106, 108, 110, 111, 113, 114, 115, 118, 120, 121, 122, 123, 124, 126, 128, 130, 131, 133, 145, 146, 148, 152, 153, 156, 157, 159, 161, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 189, 191, 193, 195, 196, 199, 200, 201, 203, 205, 206, 209, 211, 212, 213, 215, 217, 218, 219, 226, 228, 231, 232, 238, 240, 244, 246, 259, 261, 263, 264, 269, 270], "take": [3, 4, 5, 7, 10, 11, 14, 16, 17, 26, 29, 31, 32, 34, 39, 40, 44, 48, 49, 50, 51, 55, 56, 57, 61, 62, 72, 76, 78, 79, 80, 85, 89, 90, 91, 92, 98, 102, 106, 108, 110, 111, 113, 123, 124, 126, 128, 142, 145, 148, 149, 153, 155, 156, 157, 158, 159, 161, 164, 167, 168, 169, 170, 171, 173, 176, 177, 179, 180, 181, 182, 183, 184, 186, 189, 190, 193, 196, 199, 200, 201, 202, 203, 205, 206, 209, 211, 212, 213, 215, 218, 224, 225, 227, 228, 231, 232, 238, 239, 240, 258, 259, 261, 263, 264, 265, 269], "within": [3, 7, 12, 16, 29, 30, 31, 49, 55, 62, 65, 79, 80, 82, 89, 90, 92, 117, 154, 168, 169, 176, 177, 181, 183, 189, 191, 201, 209, 211, 212, 213, 224, 225, 234], "case": [3, 4, 6, 7, 10, 11, 14, 16, 17, 29, 30, 31, 32, 34, 37, 40, 41, 45, 48, 49, 50, 51, 53, 54, 55, 57, 61, 64, 65, 66, 67, 71, 74, 76, 79, 80, 82, 85, 86, 89, 90, 91, 93, 98, 102, 105, 106, 111, 113, 114, 115, 122, 124, 126, 132, 143, 149, 154, 156, 158, 159, 164, 165, 172, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 198, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 213, 214, 217, 219, 222, 224, 226, 227, 229, 231, 232, 233, 234, 235, 238, 240, 241, 259, 263, 264, 265, 268, 269, 270], "subpackag": [3, 248], "f2py": [3, 31, 90, 225, 226], "ufuncifi": [3, 31, 225, 249], "cython": [3, 31, 90, 126, 225], "codegen": [3, 90, 193, 225, 230, 250, 256], "relat": [3, 4, 6, 7, 17, 24, 26, 27, 29, 32, 33, 39, 40, 47, 51, 54, 55, 56, 65, 71, 74, 76, 80, 85, 89, 101, 114, 117, 120, 126, 128, 133, 141, 143, 169, 172, 175, 176, 178, 179, 180, 186, 188, 189, 190, 192, 193, 197, 199, 200, 203, 205, 206, 208, 209, 211, 212, 213, 231, 245, 249, 251, 269], "reli": [3, 10, 11, 31, 85, 90, 95, 186, 192, 193, 200, 205, 212, 227, 232, 265], "llvm": 3, "gcc": [3, 226], "ifort": 3, "therefor": [3, 4, 6, 32, 40, 45, 49, 53, 57, 65, 78, 89, 98, 174, 177, 178, 179, 183, 186, 189, 193, 209, 212, 213, 214, 219, 238, 239, 241, 242, 244, 246], "aesara": [3, 10, 31, 126, 249, 256], "aesaracod": [3, 10, 31, 90, 193], "aeseara": 3, "previous": [3, 4, 10, 48, 118, 174, 192, 205, 213, 244], "theano": [3, 10, 126, 268], "return": [3, 4, 6, 7, 10, 11, 14, 16, 17, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 78, 79, 80, 81, 82, 85, 86, 88, 89, 91, 92, 96, 98, 99, 100, 101, 103, 104, 106, 107, 108, 110, 111, 113, 114, 118, 121, 123, 124, 126, 128, 130, 131, 132, 133, 135, 136, 140, 143, 144, 145, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 213, 214, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 238, 240, 242, 244, 258, 259, 264, 265, 268, 269, 270], "graph": [3, 6, 41, 57, 78, 85, 90, 182, 193, 212, 231, 264, 268], "object": [3, 4, 6, 7, 11, 12, 15, 16, 17, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 39, 40, 41, 42, 43, 44, 48, 49, 51, 54, 55, 57, 59, 60, 61, 62, 64, 65, 66, 74, 76, 79, 80, 82, 83, 85, 90, 91, 92, 93, 96, 98, 99, 102, 103, 106, 107, 108, 110, 111, 114, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 142, 143, 145, 153, 154, 158, 159, 161, 162, 165, 166, 168, 169, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 193, 195, 196, 199, 200, 201, 202, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 224, 225, 226, 227, 228, 231, 232, 235, 236, 240, 241, 242, 247, 248, 258, 259, 261, 263, 264, 265, 268, 269], "llvmlite": 3, "llvmjitcod": 3, "jit": [3, 202], "around": [3, 4, 6, 7, 10, 11, 17, 21, 29, 38, 41, 49, 50, 51, 53, 55, 58, 65, 69, 88, 89, 103, 120, 123, 127, 177, 183, 186, 188, 193, 195, 200, 204, 206, 209, 212, 213, 224, 238, 239, 259, 261, 263], "llvm_callabl": 3, "callabl": [3, 11, 31, 40, 85, 91, 144, 188, 193, 194, 205, 222, 225, 226, 231, 232, 233], "unlik": [3, 6, 11, 16, 17, 28, 50, 76, 85, 89, 91, 111, 176, 186, 193, 206, 209, 212, 228, 229, 261, 263, 264, 265, 268], "two": [3, 4, 6, 7, 10, 11, 14, 16, 17, 23, 29, 30, 31, 32, 34, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 74, 76, 78, 79, 80, 82, 85, 89, 90, 92, 93, 95, 98, 99, 102, 103, 105, 106, 118, 120, 121, 123, 124, 131, 132, 133, 138, 139, 143, 145, 148, 149, 154, 155, 156, 157, 158, 159, 161, 164, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 218, 228, 231, 232, 238, 240, 242, 243, 244, 246, 258, 259, 262, 264, 265, 269], "tensorflow_cod": 3, "order": [3, 4, 6, 7, 10, 11, 14, 16, 17, 20, 26, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 59, 62, 65, 66, 68, 71, 74, 76, 77, 78, 79, 80, 85, 86, 89, 90, 91, 92, 93, 98, 99, 102, 106, 110, 111, 112, 113, 121, 122, 123, 124, 132, 136, 140, 143, 153, 154, 155, 156, 157, 158, 159, 164, 168, 169, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 199, 201, 204, 205, 206, 210, 211, 212, 213, 214, 215, 218, 219, 220, 224, 225, 226, 228, 231, 232, 234, 238, 239, 241, 242, 247, 259, 261, 262, 264, 268, 269, 270], "assum": [3, 6, 11, 13, 16, 26, 31, 32, 33, 38, 40, 48, 49, 50, 51, 55, 57, 59, 66, 67, 74, 76, 85, 89, 92, 98, 110, 111, 116, 121, 122, 123, 124, 126, 132, 154, 158, 159, 169, 172, 174, 180, 181, 183, 186, 189, 191, 193, 200, 201, 203, 205, 206, 209, 210, 212, 213, 217, 218, 219, 226, 231, 234, 240, 242, 246, 262, 264, 267, 269, 270], "wurlitz": 3, "allow": [3, 4, 7, 10, 11, 16, 27, 30, 31, 32, 33, 40, 42, 45, 48, 49, 50, 53, 57, 59, 60, 61, 74, 77, 79, 80, 82, 83, 85, 89, 90, 91, 93, 106, 111, 113, 120, 123, 124, 126, 131, 143, 159, 163, 164, 165, 177, 179, 180, 183, 184, 186, 188, 189, 190, 193, 198, 200, 201, 202, 205, 206, 209, 211, 212, 213, 214, 218, 224, 227, 229, 231, 232, 242, 261, 264], "captur": [3, 49, 231], "output": [3, 6, 7, 10, 11, 14, 16, 30, 31, 49, 50, 57, 73, 76, 77, 79, 80, 82, 85, 89, 90, 91, 95, 98, 106, 110, 111, 118, 123, 126, 127, 131, 132, 143, 155, 159, 168, 169, 172, 173, 174, 177, 183, 186, 189, 193, 194, 203, 205, 206, 207, 208, 209, 211, 213, 218, 224, 225, 226, 228, 231, 232, 238, 261, 263, 264, 265, 268, 269, 270], "suit": [3, 4, 7, 16, 30, 179, 189, 222, 224], "stat": [3, 248, 255], "sampl": [3, 8, 14, 40, 52, 96, 143, 179, 193, 213, 259, 263], "At": [3, 10, 16, 29, 45, 55, 57, 76, 89, 92, 93, 102, 164, 168, 177, 188, 203, 232], "least": [3, 4, 7, 10, 16, 27, 29, 31, 40, 49, 55, 61, 73, 74, 76, 85, 89, 90, 106, 139, 153, 161, 180, 181, 183, 184, 186, 188, 189, 200, 202, 205, 209, 211, 212, 213, 226, 269], "random": [3, 6, 10, 33, 38, 40, 41, 47, 50, 59, 62, 63, 84, 85, 89, 143, 155, 179, 186, 193, 223, 224, 227, 231, 249, 255, 261, 265, 269], "pymc": [3, 213], "manipul": [3, 13, 14, 16, 30, 31, 32, 40, 49, 57, 74, 84, 89, 90, 111, 120, 124, 157, 176, 182, 183, 184, 187, 192, 193, 195, 202, 205, 207, 216, 231, 248, 251, 255, 258, 259, 260, 261, 262, 263, 265, 268, 269], "use_symengin": 3, "physic": [3, 6, 14, 31, 42, 85, 89, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 178, 187, 213, 228, 231, 244, 263, 269], "mechan": [3, 18, 49, 72, 76, 92, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 141, 145, 148, 154, 156, 157, 158, 161, 168, 169, 175, 178, 254, 255], "liealgebra": [3, 78], "thing": [3, 4, 6, 7, 10, 11, 12, 16, 17, 20, 27, 31, 39, 40, 41, 49, 51, 61, 77, 78, 79, 80, 85, 90, 102, 108, 111, 123, 126, 143, 159, 164, 176, 177, 190, 192, 200, 201, 202, 205, 209, 212, 217, 227, 229, 231, 258, 259, 261, 263, 264, 265, 268, 269], "configur": [3, 4, 5, 10, 41, 79, 98, 106, 114, 117, 119, 120, 121, 123, 185, 193], "otherwis": [3, 4, 16, 17, 29, 30, 31, 40, 41, 45, 48, 49, 50, 53, 55, 57, 58, 59, 62, 63, 64, 65, 74, 76, 78, 79, 81, 85, 88, 89, 91, 96, 98, 100, 103, 110, 111, 144, 149, 155, 172, 175, 176, 180, 184, 186, 188, 189, 191, 193, 195, 196, 198, 199, 201, 205, 206, 209, 210, 211, 212, 213, 214, 222, 224, 226, 231, 232, 258, 259, 268], "ordinari": [3, 16, 17, 19, 29, 31, 40, 49, 53, 55, 57, 67, 71, 72, 76, 86, 98, 120, 180, 182, 183, 192, 199, 207, 209, 214, 228, 263, 269], "x": [3, 4, 6, 7, 10, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 38, 40, 41, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 85, 88, 89, 90, 91, 92, 93, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 131, 133, 134, 135, 136, 137, 139, 140, 143, 148, 149, 154, 156, 157, 158, 159, 160, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 224, 225, 226, 227, 229, 231, 232, 234, 238, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "still": [3, 4, 6, 7, 11, 16, 21, 22, 30, 41, 48, 49, 50, 57, 61, 76, 80, 85, 111, 159, 177, 179, 180, 181, 186, 188, 193, 200, 202, 203, 205, 209, 211, 212, 218, 224, 231, 244, 265], "matchpi": 3, "pattern": [3, 10, 11, 16, 49, 74, 76, 79, 80, 91, 153, 183, 203, 205, 209, 211, 259, 264], "anywher": [3, 4, 6, 10, 16, 31, 49, 57, 63, 159, 234, 263], "els": [3, 4, 10, 11, 16, 17, 31, 39, 41, 45, 49, 50, 57, 59, 63, 65, 66, 74, 76, 79, 85, 89, 98, 159, 169, 179, 184, 188, 189, 193, 194, 201, 205, 209, 212, 217, 219, 224, 231, 234, 238, 240, 258, 264], "mathemat": [3, 4, 7, 8, 10, 13, 16, 20, 25, 26, 29, 31, 32, 35, 39, 41, 48, 49, 50, 51, 54, 55, 56, 57, 62, 63, 74, 76, 79, 82, 85, 89, 90, 91, 98, 99, 102, 114, 125, 164, 174, 176, 177, 180, 181, 183, 184, 187, 192, 193, 201, 202, 206, 209, 212, 213, 218, 225, 226, 232, 238, 241, 244, 246, 258, 261, 262, 263, 264, 267, 269], "softwar": [3, 7, 76, 187, 263], "itself": [3, 4, 6, 7, 10, 27, 38, 40, 41, 47, 49, 51, 54, 62, 66, 71, 89, 106, 110, 111, 124, 149, 156, 174, 176, 179, 180, 183, 186, 188, 189, 193, 201, 202, 205, 212, 217, 218, 219, 226, 228, 231, 246, 263], "_sage_": 3, "basic": [3, 4, 5, 6, 7, 10, 16, 23, 25, 30, 31, 32, 37, 40, 44, 47, 48, 52, 55, 65, 67, 72, 73, 74, 79, 80, 83, 84, 86, 98, 105, 111, 121, 122, 124, 126, 127, 133, 143, 157, 164, 167, 174, 175, 177, 179, 180, 182, 184, 185, 186, 188, 190, 191, 193, 194, 200, 205, 206, 209, 210, 211, 212, 213, 224, 226, 231, 232, 236, 243, 244, 245, 251, 259, 260, 261, 262, 267], "beyond": [3, 16, 43, 65, 89, 123, 180, 183, 202, 205, 265], "control": [3, 5, 10, 11, 16, 30, 32, 49, 50, 53, 74, 79, 80, 123, 126, 139, 143, 154, 155, 159, 163, 189, 190, 194, 201, 206, 212, 231, 254, 255, 258], "pytest": [3, 4, 10, 221, 227, 229, 232, 256], "entir": [3, 4, 16, 20, 40, 49, 50, 53, 57, 63, 65, 74, 88, 104, 124, 169, 180, 182, 188, 201, 218, 227, 229, 263, 269], "import_modul": 3, "own": [3, 5, 6, 11, 25, 33, 40, 41, 49, 65, 93, 111, 126, 188, 193, 200, 205, 209, 228, 231, 232, 263], "runner": [3, 224], "access": [3, 6, 7, 11, 16, 24, 25, 26, 31, 49, 57, 78, 79, 82, 85, 90, 93, 98, 99, 105, 106, 110, 111, 127, 168, 169, 174, 177, 179, 183, 184, 186, 188, 205, 209, 213, 214, 217, 225, 226, 241, 244, 264, 268], "script": [3, 5, 6, 22, 57, 173, 225], "cloudpickl": 3, "effect": [3, 6, 10, 21, 40, 42, 49, 66, 74, 76, 80, 85, 92, 111, 113, 123, 131, 159, 169, 179, 183, 186, 190, 192, 209, 261], "pickl": 3, "util": [3, 4, 5, 6, 7, 29, 36, 38, 40, 41, 54, 55, 60, 61, 62, 65, 79, 80, 84, 89, 90, 129, 163, 166, 182, 185, 186, 190, 193, 205, 206, 207, 222, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 250, 254], "test_pickl": 3, "py": [3, 4, 5, 6, 11, 16, 21, 30, 49, 60, 74, 76, 85, 137, 139, 179, 182, 184, 190, 193, 200, 203, 209, 210, 219, 222, 224, 229, 232], "pdf": [3, 7, 8, 20, 29, 30, 40, 50, 52, 54, 71, 76, 85, 89, 92, 93, 96, 179, 187, 192, 193, 196, 202, 205, 206, 209, 213, 231, 238], "view": [3, 6, 8, 31, 32, 49, 85, 92, 161, 164, 177, 179, 186, 193, 209, 212, 226, 228, 231], "host": [3, 7], "onlin": [3, 6, 106, 206, 231], "sympy_benchmark": 3, "readm": 3, "yourself": [3, 31, 113, 227, 259], "reproduc": [3, 189, 224, 269], "add": [3, 4, 5, 6, 10, 11, 13, 16, 23, 25, 29, 31, 38, 40, 45, 50, 53, 56, 64, 66, 74, 78, 82, 85, 89, 92, 103, 111, 126, 137, 143, 153, 158, 159, 162, 176, 177, 179, 182, 183, 184, 186, 188, 189, 190, 193, 194, 203, 205, 206, 209, 210, 212, 213, 215, 217, 218, 219, 227, 232, 236, 249, 259, 261, 264, 268, 269], "asv": 3, "airspe": 3, "veloc": [3, 102, 103, 105, 106, 108, 113, 114, 117, 118, 119, 123, 124, 126, 133, 161, 164, 168, 169, 172, 174, 177, 244, 246], "describ": [4, 6, 7, 10, 11, 16, 17, 30, 32, 39, 40, 41, 43, 44, 47, 48, 49, 50, 54, 57, 59, 64, 65, 74, 76, 80, 85, 88, 89, 98, 102, 106, 108, 110, 111, 114, 115, 117, 119, 120, 121, 122, 123, 124, 138, 159, 163, 164, 168, 169, 174, 176, 177, 180, 183, 186, 188, 194, 200, 203, 205, 206, 209, 212, 213, 217, 226, 231, 232, 238, 239, 244, 259], "properli": [4, 30, 49, 55, 61, 74, 85, 107, 111, 121, 136, 140, 143, 157, 181, 183, 193, 209, 212, 222, 226, 232, 265, 270], "current": [4, 7, 10, 11, 16, 23, 26, 29, 30, 31, 32, 33, 40, 43, 44, 46, 47, 48, 49, 51, 55, 57, 59, 61, 64, 69, 72, 74, 76, 78, 80, 85, 89, 91, 92, 95, 102, 111, 120, 153, 158, 159, 163, 167, 177, 179, 180, 181, 182, 184, 186, 189, 190, 192, 193, 194, 200, 203, 205, 206, 208, 209, 210, 211, 212, 213, 219, 224, 225, 226, 228, 241, 265, 270], "activ": [4, 5, 12, 113, 179, 222, 227, 229], "updat": [4, 10, 11, 21, 49, 114, 139, 149, 152, 153, 155, 178, 186, 189, 193, 206, 219, 229], "continu": [4, 6, 7, 10, 14, 17, 29, 31, 39, 41, 43, 49, 54, 55, 57, 74, 77, 80, 89, 95, 96, 154, 157, 173, 184, 186, 189, 206, 208, 209, 217, 260], "someon": [4, 209, 228, 262], "warn": [4, 6, 11, 12, 49, 50, 64, 91, 169, 177, 181, 209, 211, 222, 224, 226, 230, 231, 256, 265], "screen": [4, 77, 173, 177, 224, 268], "indic": [4, 6, 11, 13, 16, 29, 30, 31, 32, 33, 38, 40, 41, 42, 44, 45, 47, 48, 49, 52, 53, 54, 57, 59, 64, 65, 74, 76, 79, 80, 82, 85, 88, 89, 99, 110, 114, 143, 154, 156, 157, 159, 164, 168, 169, 178, 182, 183, 184, 188, 189, 190, 193, 200, 201, 202, 204, 205, 206, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 231, 265], "remov": [4, 10, 16, 24, 25, 40, 43, 47, 49, 53, 55, 64, 65, 74, 79, 80, 85, 89, 92, 103, 117, 119, 123, 143, 159, 184, 186, 189, 191, 192, 193, 205, 206, 209, 211, 212, 214, 215, 225, 226, 227, 229, 231, 232, 258, 269], "futur": [4, 11, 16, 17, 31, 32, 49, 74, 76, 80, 85, 91, 110, 113, 120, 123, 159, 163, 175, 179, 181, 192, 193, 205, 209, 218, 224, 227, 229, 232, 255, 264, 270], "chanc": [4, 11, 17, 49, 77, 203, 213, 264], "break": [4, 6, 10, 30, 31, 41, 49, 50, 89, 176, 190, 193, 201, 231], "opportun": [4, 6, 205], "messag": [4, 10, 50, 77, 227, 229], "wrong": [4, 7, 10, 40, 49, 50, 57, 59, 85, 169, 183, 207, 209, 227, 261, 265], "answer": [4, 16, 40, 49, 53, 71, 74, 76, 79, 85, 89, 164, 186, 190, 202, 203, 205, 211, 213, 228, 234, 263, 265, 269], "made": [4, 7, 10, 11, 16, 43, 45, 49, 50, 55, 58, 59, 62, 65, 66, 76, 79, 85, 89, 91, 111, 123, 126, 177, 180, 184, 186, 188, 189, 194, 200, 201, 202, 205, 209, 211, 212, 213, 226, 231, 234, 246, 264], "lightli": 4, "fix": [4, 6, 9, 10, 31, 40, 42, 45, 47, 50, 57, 61, 78, 92, 93, 103, 105, 108, 113, 126, 143, 148, 152, 155, 159, 164, 169, 172, 176, 177, 179, 183, 186, 188, 189, 190, 193, 199, 203, 211, 213, 231, 238, 239], "worth": [4, 16, 169, 242, 244], "pain": 4, "frustrat": 4, "go": [4, 5, 6, 7, 21, 30, 31, 40, 50, 55, 74, 106, 111, 113, 124, 126, 127, 153, 164, 172, 179, 188, 189, 200, 203, 209, 261, 263, 264, 267, 269], "seek": [4, 211], "stabl": [4, 6, 49, 77, 85, 91, 98, 258], "done": [4, 6, 10, 11, 14, 25, 26, 28, 29, 30, 31, 40, 42, 47, 49, 50, 51, 54, 57, 60, 61, 74, 76, 80, 85, 89, 111, 113, 118, 124, 126, 145, 154, 155, 156, 159, 161, 162, 169, 174, 176, 177, 179, 180, 182, 186, 190, 192, 193, 194, 202, 205, 206, 209, 211, 212, 213, 218, 219, 224, 225, 228, 232, 241, 242, 258, 261, 263, 264, 265], "exist": [4, 10, 14, 16, 29, 30, 33, 40, 49, 53, 59, 61, 64, 65, 66, 67, 75, 76, 79, 85, 89, 149, 174, 177, 179, 180, 181, 182, 186, 188, 193, 200, 201, 203, 206, 209, 211, 212, 224, 232, 242, 263, 265, 270], "necessarili": [4, 6, 16, 27, 49, 50, 51, 74, 76, 79, 180, 181, 188, 189, 191, 205, 209, 211, 212], "supplant": 4, "old": [4, 10, 11, 18, 49, 50, 51, 77, 123, 128, 163, 164, 173, 179, 180, 184, 185, 193, 194, 205, 209, 212, 214, 232, 258], "sometim": [4, 6, 7, 11, 16, 30, 31, 49, 54, 57, 73, 74, 98, 120, 123, 151, 159, 177, 180, 183, 188, 193, 195, 200, 202, 206, 209, 211, 222, 231, 258, 265], "alongsid": [4, 10, 82], "newer": [4, 176, 211], "solveset": [4, 126, 191, 207, 208, 211, 270], "superior": [4, 193], "replac": [4, 6, 10, 11, 16, 29, 31, 40, 48, 49, 50, 53, 54, 55, 57, 59, 63, 76, 79, 80, 85, 89, 90, 91, 102, 104, 126, 148, 154, 169, 180, 186, 189, 190, 194, 200, 202, 203, 205, 209, 211, 212, 219, 220, 231, 232, 234, 258, 267], "older": [4, 7, 72, 111, 183, 193, 211], "solv": [4, 6, 10, 11, 14, 16, 18, 31, 33, 45, 48, 49, 57, 62, 74, 76, 80, 81, 85, 92, 94, 106, 107, 111, 114, 117, 119, 120, 121, 123, 126, 162, 182, 185, 186, 190, 191, 192, 195, 205, 206, 207, 208, 209, 210, 213, 254, 259, 260, 263, 265, 268], "remain": [4, 10, 25, 26, 31, 40, 41, 43, 45, 49, 50, 55, 74, 80, 89, 91, 99, 111, 158, 174, 176, 177, 188, 189, 190, 199, 202, 203, 209, 210, 213, 215, 219, 228, 231, 232, 241, 246, 258, 261, 263, 264, 265], "intact": [4, 10, 31, 225], "cogniz": 4, "properti": [4, 13, 18, 25, 26, 29, 30, 31, 32, 33, 37, 38, 40, 41, 42, 43, 44, 48, 49, 50, 51, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 72, 74, 76, 80, 82, 85, 89, 92, 93, 95, 98, 103, 105, 106, 108, 110, 124, 126, 128, 130, 133, 134, 137, 138, 143, 144, 145, 147, 148, 155, 157, 159, 161, 164, 166, 167, 169, 170, 171, 174, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 192, 195, 196, 199, 200, 201, 203, 206, 209, 212, 213, 218, 219, 224, 226, 227, 238, 240, 241, 242, 244, 246, 265], "attr": [4, 31], "imposs": [4, 6, 10, 49, 183, 202, 209, 210, 222, 261, 269], "later": [4, 10, 14, 31, 40, 74, 80, 102, 107, 108, 113, 114, 115, 121, 123, 124, 126, 133, 168, 176, 183, 186, 192, 193, 194, 203, 205, 209, 228, 241, 258, 259, 261, 263, 264, 269], "unsur": [4, 6], "about": [4, 5, 6, 7, 10, 11, 12, 14, 16, 17, 20, 21, 23, 24, 26, 27, 30, 31, 40, 41, 42, 43, 49, 53, 55, 57, 59, 60, 61, 63, 64, 65, 69, 71, 75, 76, 78, 85, 89, 92, 93, 98, 102, 103, 104, 105, 106, 107, 108, 110, 111, 114, 123, 124, 154, 156, 157, 159, 163, 168, 169, 176, 177, 178, 180, 182, 183, 188, 190, 193, 195, 200, 205, 206, 207, 209, 213, 217, 218, 224, 225, 226, 227, 228, 229, 238, 239, 241, 244, 245, 258, 260, 261, 263, 264, 265, 269], "mark": [4, 6, 7, 96, 132, 144, 206, 222, 227, 229], "explicitli": [4, 10, 16, 31, 40, 41, 49, 50, 52, 55, 57, 62, 66, 82, 85, 90, 98, 111, 168, 169, 179, 181, 183, 184, 186, 189, 193, 205, 209, 229, 261, 265, 268, 270], "privat": [4, 6, 49, 50, 111, 179, 226], "experiment": [4, 205, 256], "With": [4, 11, 17, 21, 31, 48, 49, 53, 74, 89, 114, 115, 122, 123, 132, 156, 159, 177, 179, 180, 181, 183, 184, 191, 192, 193, 200, 205, 211, 214, 231, 263, 264], "being": [4, 7, 10, 11, 16, 17, 27, 29, 31, 40, 41, 47, 48, 49, 50, 55, 57, 59, 61, 62, 65, 66, 74, 79, 80, 85, 86, 89, 92, 93, 102, 110, 111, 113, 123, 124, 126, 127, 155, 164, 171, 174, 176, 177, 178, 179, 180, 182, 183, 188, 189, 190, 193, 202, 203, 205, 206, 209, 210, 211, 212, 213, 219, 222, 228, 229, 231, 232, 234, 238, 242, 246, 263, 265], "decid": [4, 6, 14, 16, 17, 30, 48, 80, 102, 123, 152, 163, 183, 186, 188, 189, 193, 209, 212, 226, 265], "reason": [4, 7, 10, 16, 17, 31, 41, 47, 49, 53, 57, 74, 77, 83, 85, 106, 107, 111, 113, 117, 120, 123, 130, 164, 173, 177, 183, 186, 187, 190, 193, 201, 203, 205, 209, 211, 212, 222, 228, 229, 231, 232, 258, 259, 263, 264, 265], "confus": [4, 7, 10, 16, 49, 54, 79, 132, 177, 181, 189, 212, 258, 259, 261], "unnecessari": [4, 6, 7, 27, 31, 189, 192, 213, 224, 262], "redund": [4, 16, 40, 47, 79, 85, 209, 226], "usabl": [4, 183, 184, 193, 212, 263], "breakag": 4, "serious": 4, "taken": [4, 31, 32, 37, 40, 47, 48, 49, 54, 55, 57, 66, 80, 89, 98, 100, 102, 103, 123, 126, 156, 162, 169, 172, 178, 179, 183, 188, 189, 196, 200, 202, 203, 212, 213, 218, 226, 231, 238], "commun": [4, 7, 21, 178, 209, 211, 213, 265], "inde": [4, 14, 37, 40, 48, 74, 180, 203, 209, 220, 224, 263], "second": [4, 7, 10, 11, 14, 16, 17, 22, 26, 29, 31, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 57, 59, 62, 63, 65, 76, 85, 89, 90, 92, 93, 96, 98, 99, 102, 103, 105, 106, 111, 114, 117, 119, 120, 122, 124, 130, 132, 133, 136, 140, 145, 148, 153, 154, 156, 157, 162, 164, 166, 168, 169, 170, 176, 177, 179, 182, 183, 186, 187, 188, 189, 193, 195, 203, 205, 206, 209, 211, 212, 213, 214, 215, 231, 232, 238, 240, 241, 242, 254, 258, 263, 264, 265], "know": [4, 6, 7, 10, 11, 16, 17, 24, 26, 30, 41, 49, 50, 53, 61, 66, 74, 76, 85, 89, 108, 111, 127, 153, 157, 161, 162, 164, 168, 169, 176, 177, 179, 189, 190, 192, 193, 203, 205, 209, 211, 212, 213, 227, 231, 232, 242, 258, 259, 261, 262, 263, 264, 267, 269], "count": [4, 7, 41, 48, 49, 50, 54, 59, 79, 85, 88, 89, 154, 189, 201, 202, 205, 212, 213, 219, 228, 231], "basi": [4, 49, 51, 78, 82, 85, 103, 117, 119, 144, 153, 154, 156, 159, 161, 164, 167, 168, 169, 174, 176, 178, 180, 182, 184, 185, 189, 192, 203, 205, 211, 212, 214, 219, 240, 241, 244, 267], "exact": [4, 11, 16, 27, 48, 49, 50, 53, 59, 64, 71, 74, 76, 80, 85, 92, 126, 153, 183, 184, 186, 189, 200, 205, 209, 211, 224, 234, 261, 263, 268], "rule": [4, 7, 10, 14, 16, 31, 40, 41, 48, 49, 57, 72, 74, 76, 79, 80, 85, 92, 105, 111, 140, 143, 164, 169, 174, 177, 178, 190, 192, 193, 194, 199, 203, 204, 205, 209, 219, 231, 232, 244, 245, 261, 264], "doesn": [4, 6, 10, 11, 31, 73, 111, 114, 123, 126, 177, 181, 190, 192, 202, 205, 212, 270], "constitut": [4, 7, 76, 89, 193], "yet": [4, 5, 11, 16, 24, 26, 29, 30, 49, 53, 54, 56, 76, 123, 139, 180, 183, 184, 188, 190, 192, 201, 209, 212, 259], "fulli": [4, 6, 16, 40, 49, 66, 76, 79, 91, 93, 111, 126, 159, 176, 183, 184, 190, 200, 213, 219, 235], "codifi": 4, "clean": [4, 224], "distinct": [4, 7, 16, 31, 40, 41, 49, 50, 54, 62, 74, 79, 85, 89, 110, 176, 183, 188, 189, 193, 201, 203, 269], "well": [4, 6, 7, 10, 11, 14, 16, 21, 27, 29, 30, 31, 32, 33, 41, 48, 49, 54, 55, 56, 57, 76, 80, 83, 85, 99, 102, 111, 113, 114, 115, 123, 149, 158, 161, 162, 168, 176, 178, 179, 180, 182, 183, 184, 186, 188, 193, 200, 201, 202, 203, 205, 209, 211, 212, 224, 225, 241, 242, 246, 261, 263, 264, 269], "categor": [4, 85, 180], "issu": [4, 7, 9, 10, 11, 17, 21, 22, 29, 48, 49, 66, 76, 79, 85, 90, 107, 120, 139, 175, 178, 187, 188, 190, 193, 201, 202, 211, 212, 224, 226, 228, 229, 231, 234, 260, 261, 264, 269], "here": [4, 6, 7, 10, 14, 16, 17, 20, 21, 25, 26, 31, 32, 33, 38, 39, 40, 41, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 65, 66, 67, 71, 72, 74, 76, 79, 80, 85, 88, 89, 90, 91, 92, 98, 102, 106, 111, 112, 113, 117, 118, 119, 121, 123, 124, 126, 127, 149, 154, 159, 168, 173, 174, 176, 177, 179, 180, 183, 184, 186, 188, 189, 190, 193, 194, 200, 202, 203, 205, 206, 209, 211, 212, 213, 217, 218, 225, 226, 228, 229, 231, 232, 242, 244, 246, 257, 258, 259, 261, 263, 264, 265, 267, 268, 269], "guidelin": [4, 8, 209], "exhaust": [4, 16, 203, 231, 262], "alwai": [4, 6, 7, 10, 11, 16, 17, 21, 23, 30, 40, 41, 48, 49, 50, 51, 53, 55, 57, 59, 61, 64, 65, 73, 74, 76, 79, 80, 85, 88, 89, 98, 99, 110, 111, 113, 114, 118, 127, 159, 161, 164, 165, 174, 176, 180, 181, 183, 184, 186, 188, 189, 193, 194, 195, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 220, 224, 226, 231, 232, 238, 239, 244, 259, 261, 262, 263, 264, 269], "posit": [4, 10, 11, 16, 17, 24, 25, 26, 28, 30, 31, 32, 33, 38, 40, 41, 42, 44, 45, 48, 49, 50, 51, 53, 54, 55, 57, 59, 61, 62, 65, 74, 76, 78, 79, 80, 81, 85, 86, 88, 89, 92, 93, 98, 100, 105, 108, 111, 113, 114, 117, 119, 123, 124, 126, 128, 131, 133, 137, 154, 157, 159, 170, 171, 172, 174, 176, 177, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 198, 199, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 219, 231, 238, 240, 241, 242, 244, 246, 247, 265, 269, 270], "convent": [4, 6, 7, 9, 40, 41, 45, 48, 49, 50, 54, 55, 57, 59, 64, 74, 76, 79, 91, 92, 93, 98, 101, 113, 126, 128, 132, 153, 154, 156, 161, 162, 174, 179, 193, 209, 210, 212, 213, 219, 246, 261, 269], "defin": [4, 6, 7, 10, 11, 14, 16, 17, 22, 23, 25, 26, 29, 31, 32, 33, 39, 40, 41, 44, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 72, 74, 76, 77, 80, 82, 85, 89, 93, 96, 102, 103, 105, 108, 110, 111, 113, 117, 119, 120, 124, 126, 127, 130, 136, 138, 140, 145, 148, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 195, 196, 199, 200, 201, 203, 205, 206, 209, 211, 212, 213, 214, 218, 219, 225, 226, 227, 232, 233, 234, 238, 239, 240, 241, 242, 243, 244, 246, 247, 261, 263, 269], "And": [4, 10, 11, 17, 19, 25, 40, 41, 48, 49, 50, 57, 74, 79, 80, 85, 88, 105, 131, 177, 179, 181, 189, 190, 193, 201, 205, 206, 212, 213, 232, 242, 269], "aren": [4, 10, 31, 49, 111, 192, 212], "don": [4, 10, 11, 17, 26, 31, 74, 85, 90, 91, 102, 111, 168, 176, 177, 183, 193, 203, 212, 222, 227, 246, 258, 259, 263, 264, 269], "form": [4, 7, 10, 14, 16, 23, 26, 27, 28, 29, 31, 32, 39, 40, 41, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 62, 65, 69, 71, 72, 74, 76, 78, 80, 82, 84, 85, 89, 91, 92, 93, 95, 98, 102, 103, 105, 106, 107, 110, 111, 113, 114, 117, 119, 120, 121, 122, 124, 126, 127, 136, 139, 140, 141, 143, 153, 154, 157, 159, 161, 164, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 202, 203, 205, 206, 210, 211, 212, 213, 216, 218, 219, 224, 225, 231, 238, 240, 241, 243, 244, 246, 251, 252, 259, 263, 264, 265, 268, 269, 270], "equival": [4, 10, 11, 16, 17, 23, 27, 31, 32, 39, 40, 45, 49, 50, 53, 55, 57, 74, 76, 85, 89, 91, 95, 96, 98, 111, 120, 142, 153, 156, 159, 162, 169, 173, 177, 179, 180, 181, 183, 184, 188, 189, 193, 200, 201, 205, 209, 211, 212, 214, 215, 218, 219, 228, 232, 234, 235, 251], "intern": [4, 10, 11, 16, 17, 29, 31, 32, 40, 49, 52, 53, 54, 57, 65, 66, 69, 75, 81, 85, 89, 93, 96, 113, 123, 132, 153, 154, 164, 180, 182, 184, 185, 187, 189, 191, 193, 203, 205, 207, 210, 211, 212, 213, 217, 219, 222, 226, 228, 231, 264, 268], "Such": [4, 6, 16, 31, 49, 65, 114, 180, 181, 188, 194, 202, 203, 205, 258, 264], "prefix": [4, 31, 49, 85, 89, 163, 166, 167, 183, 186, 190, 206, 209, 225, 226, 231, 254], "underscor": [4, 6, 10, 49, 85, 209, 219, 227], "_": [4, 5, 6, 7, 10, 11, 14, 25, 26, 30, 37, 38, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 62, 63, 64, 65, 74, 76, 79, 80, 81, 82, 83, 85, 87, 89, 91, 98, 121, 124, 126, 138, 159, 164, 168, 173, 176, 178, 184, 189, 192, 193, 194, 196, 200, 201, 202, 203, 205, 206, 209, 210, 211, 214, 231, 240, 242, 268], "univers": [4, 31, 178, 187, 201, 206, 211, 212], "adher": [4, 7, 74], "codebas": [4, 10, 16, 183, 222], "anyth": [4, 6, 7, 10, 11, 29, 31, 49, 50, 60, 64, 85, 111, 133, 143, 190, 193, 199, 201, 205, 209, 211, 225, 231, 234, 261], "were": [4, 7, 10, 11, 16, 30, 41, 43, 49, 50, 55, 66, 74, 80, 85, 89, 90, 91, 102, 110, 123, 168, 174, 177, 180, 186, 187, 188, 189, 192, 193, 194, 202, 205, 211, 231, 232, 234, 261, 263, 264, 268, 269], "incorrect": [4, 7, 10, 17, 40, 49, 59, 89, 96, 172, 184, 209, 212, 225, 228, 229], "bug": [4, 6, 16, 21, 29, 50, 75, 183, 201, 209, 212, 261], "despit": [4, 49, 269], "sai": [4, 7, 11, 14, 16, 32, 39, 48, 49, 50, 78, 102, 106, 111, 120, 126, 164, 176, 177, 180, 181, 182, 186, 188, 192, 193, 200, 203, 206, 209, 211, 212, 213, 232, 258, 263, 269], "befor": [4, 6, 10, 11, 16, 17, 21, 31, 40, 41, 43, 45, 49, 50, 51, 57, 77, 80, 85, 89, 91, 92, 93, 102, 107, 111, 113, 114, 117, 118, 123, 126, 128, 159, 168, 173, 177, 181, 183, 188, 189, 193, 194, 200, 201, 205, 206, 209, 211, 212, 213, 220, 224, 227, 231, 232, 241, 262, 263, 264, 269], "recent": [4, 10, 11, 13, 16, 17, 24, 25, 26, 31, 32, 41, 49, 50, 53, 57, 59, 76, 79, 80, 81, 82, 83, 85, 87, 88, 91, 98, 178, 180, 183, 184, 186, 189, 192, 200, 201, 209, 211, 212, 222, 225, 227, 229, 231, 232, 234, 261, 265], "best": [4, 8, 11, 20, 21, 31, 49, 57, 74, 76, 90, 158, 179, 190, 193, 202, 203, 205, 209, 212, 217, 225, 257, 261, 262, 268, 269], "determin": [4, 7, 11, 14, 16, 17, 24, 26, 27, 28, 29, 31, 32, 33, 40, 49, 50, 51, 52, 53, 55, 59, 60, 62, 64, 65, 76, 77, 78, 82, 85, 89, 91, 92, 93, 98, 104, 107, 108, 110, 119, 124, 127, 138, 151, 153, 155, 156, 159, 162, 164, 169, 174, 179, 180, 181, 182, 186, 188, 193, 199, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 217, 229, 231, 238, 244, 247, 261, 269], "someth": [4, 6, 7, 10, 11, 16, 17, 29, 31, 49, 50, 53, 59, 74, 79, 80, 85, 89, 102, 111, 112, 126, 152, 165, 168, 179, 183, 184, 192, 200, 201, 205, 209, 212, 224, 226, 232, 258, 261, 263, 264, 267], "re": [4, 11, 28, 29, 31, 40, 41, 49, 50, 53, 56, 57, 74, 76, 85, 169, 171, 174, 180, 186, 193, 194, 195, 201, 202, 203, 209, 224, 240, 242, 259, 261, 264], "harm": 4, "even": [4, 6, 7, 11, 13, 16, 24, 25, 26, 28, 31, 32, 37, 40, 41, 48, 49, 50, 53, 54, 55, 57, 61, 65, 74, 76, 79, 80, 85, 88, 89, 99, 111, 120, 144, 155, 162, 164, 169, 178, 181, 182, 183, 184, 186, 188, 189, 190, 193, 194, 200, 201, 202, 203, 205, 206, 209, 211, 212, 220, 224, 246, 258, 259, 261, 263, 264, 269, 270], "might": [4, 6, 10, 11, 16, 17, 29, 49, 53, 55, 62, 71, 74, 82, 85, 89, 91, 102, 111, 112, 126, 139, 169, 176, 179, 183, 184, 189, 190, 193, 194, 201, 202, 203, 205, 206, 211, 212, 213, 225, 226, 229, 231, 234, 258, 261, 263, 264, 266, 269], "while": [4, 6, 10, 11, 16, 19, 20, 30, 31, 32, 40, 41, 42, 45, 48, 49, 50, 51, 53, 54, 59, 63, 65, 73, 79, 80, 85, 89, 90, 91, 92, 103, 107, 111, 114, 123, 143, 164, 169, 174, 180, 188, 191, 193, 209, 212, 224, 226, 228, 231, 246, 258, 264, 265], "peopl": [4, 6, 52, 57, 76, 85, 164, 213], "upgrad": [4, 22], "immedi": [4, 16, 40, 49, 74, 79, 159, 180, 183, 225, 232], "fire": 4, "uncondition": 4, "correct": [4, 6, 7, 10, 11, 17, 31, 38, 40, 46, 48, 49, 53, 55, 73, 74, 76, 85, 89, 98, 111, 123, 176, 177, 186, 189, 200, 206, 209, 211, 212, 217, 225, 231, 261, 268], "question": [4, 6, 7, 14, 16, 48, 51, 59, 66, 74, 76, 79, 89, 102, 161, 164, 168, 180, 183, 188, 203, 212, 231, 234], "read": [4, 6, 7, 9, 10, 41, 55, 74, 89, 93, 126, 176, 177, 182, 183, 184, 190, 193, 206, 219, 220, 228, 235, 262, 268, 269], "previou": [4, 6, 10, 33, 38, 39, 40, 41, 44, 49, 55, 76, 80, 88, 103, 123, 161, 176, 177, 186, 199, 206, 210, 214, 231, 232, 262, 264, 269], "unchang": [4, 10, 40, 41, 49, 76, 85, 98, 189, 193, 199, 202, 205, 212, 258], "dure": [4, 10, 11, 22, 31, 49, 50, 80, 85, 89, 91, 103, 106, 126, 127, 176, 188, 202, 211, 212, 229, 231], "period": [4, 6, 10, 29, 49, 50, 55, 74, 89, 123, 133, 155, 162, 188, 193, 196, 199, 208, 212, 213, 231], "silenc": [4, 12, 222, 229], "filterwarn": [4, 10], "caus": [4, 7, 10, 21, 49, 50, 53, 55, 85, 111, 118, 123, 176, 193, 202, 209, 210, 211, 228, 229, 265], "anoth": [4, 6, 7, 10, 11, 13, 14, 16, 17, 27, 30, 31, 41, 46, 48, 49, 50, 51, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 74, 76, 82, 85, 89, 92, 93, 108, 148, 164, 166, 169, 172, 176, 177, 179, 181, 183, 184, 186, 188, 189, 190, 193, 194, 200, 201, 203, 209, 211, 212, 213, 225, 226, 232, 238, 241, 242, 246, 258, 261, 263, 264, 269, 270], "over": [4, 7, 8, 10, 11, 13, 20, 23, 29, 30, 31, 32, 40, 41, 44, 48, 49, 50, 51, 52, 53, 54, 63, 65, 72, 74, 78, 79, 82, 85, 86, 89, 92, 93, 100, 111, 126, 127, 138, 154, 157, 159, 163, 164, 174, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 196, 198, 200, 205, 206, 208, 209, 211, 212, 213, 214, 217, 218, 227, 231, 232, 238, 240, 244, 247, 263, 267, 269], "defeat": [4, 209], "three": [4, 11, 14, 16, 18, 23, 27, 31, 40, 41, 42, 45, 49, 50, 54, 57, 59, 63, 64, 65, 74, 78, 79, 80, 92, 93, 110, 116, 117, 118, 132, 154, 156, 161, 169, 172, 176, 177, 178, 179, 180, 181, 184, 186, 189, 193, 203, 205, 206, 211, 212, 213, 224, 238, 239, 244, 247, 261, 264, 269], "natur": [4, 10, 11, 16, 23, 27, 31, 32, 40, 49, 50, 54, 55, 83, 89, 111, 161, 163, 164, 180, 183, 184, 186, 188, 190, 193, 202, 206, 212, 213, 231, 247, 264, 269], "heavili": [4, 200, 210], "consider": [4, 17, 49, 90, 102, 183, 192, 201, 206, 209, 241], "easi": [4, 37, 41, 49, 57, 74, 90, 108, 114, 120, 176, 180, 183, 188, 193, 200, 203, 206, 209, 212, 217, 218, 219, 258, 259, 261, 262, 263, 264, 265, 268], "account": [4, 55, 85, 196, 205, 209], "nonetheless": [4, 50, 161, 205, 209], "deprecat": 4, "won": [4, 11, 31, 205, 212, 264], "until": [4, 14, 16, 22, 41, 43, 49, 50, 59, 76, 85, 89, 123, 177, 186, 189, 202, 209, 261], "come": [4, 21, 40, 45, 47, 48, 49, 55, 57, 74, 76, 85, 90, 102, 111, 113, 121, 162, 177, 180, 183, 186, 188, 189, 203, 206, 209, 212, 222, 224, 229, 232, 261, 263, 264, 267, 269], "minimum": [4, 10, 29, 31, 40, 41, 43, 45, 49, 50, 53, 55, 85, 102, 106, 113, 143, 168, 179, 181, 186, 212, 213, 227, 259], "longer": [4, 6, 11, 15, 49, 59, 89, 114, 123, 181, 186, 193, 202, 205, 231, 234, 261, 269], "especi": [4, 6, 48, 85, 102, 111, 126, 153, 168, 177, 205, 209, 211, 224, 258, 259], "hard": [4, 8, 16, 41, 50, 85, 89, 111, 159, 183, 193, 200, 209, 212, 261, 263], "migrat": 4, "lengthen": 4, "impos": [4, 93], "signific": [4, 11, 16, 31, 49, 50, 53, 76, 85, 102, 124, 153, 183, 212, 232, 264], "mainten": [4, 26], "burden": [4, 193], "keep": [4, 6, 11, 13, 20, 45, 49, 50, 53, 54, 57, 74, 85, 106, 124, 143, 159, 179, 182, 183, 184, 189, 200, 201, 203, 205, 209, 211, 219, 246, 259, 264], "firstli": [4, 10, 16, 203], "regular": [4, 10, 11, 16, 17, 32, 37, 49, 50, 53, 57, 65, 71, 72, 76, 89, 111, 153, 183, 190, 209, 219, 224, 268, 269], "schedul": 4, "Being": [4, 45, 59, 65, 183], "assur": [4, 89, 189], "suffici": [4, 6, 16, 30, 31, 40, 41, 45, 49, 85, 164, 196, 200, 209, 213, 228, 269], "regardless": [4, 6, 10, 41, 49, 76, 89, 186, 201, 205, 231, 241, 246, 269], "often": [4, 6, 16, 17, 30, 31, 32, 39, 49, 57, 59, 61, 74, 76, 85, 89, 90, 98, 120, 123, 168, 176, 177, 180, 181, 183, 186, 189, 194, 200, 201, 206, 209, 213, 231, 258, 263, 264, 265, 269], "happen": [4, 6, 10, 14, 16, 17, 23, 31, 41, 48, 49, 53, 61, 64, 73, 154, 158, 164, 180, 186, 188, 189, 192, 201, 205, 209, 213, 232, 242, 261, 268, 269], "secondli": [4, 203], "rigor": [4, 57, 177, 226], "semant": [4, 16, 82], "surfac": [4, 55, 57, 63, 74, 93, 128, 132, 159, 179, 205, 238, 245], "enough": [4, 6, 40, 49, 53, 76, 85, 88, 89, 98, 111, 126, 184, 186, 193, 209, 259, 261], "encod": [4, 10, 33, 41, 47, 50, 79, 185, 193, 224, 228, 231], "backport": 4, "prior": [4, 10, 21, 172, 189, 205, 265], "extrem": [4, 40, 53, 59, 65, 76, 82, 123, 177, 205, 213], "accur": [4, 11, 14, 29, 40, 49, 53, 54, 71, 76, 95, 179, 200, 258, 265], "model": [4, 53, 79, 89, 98, 107, 113, 114, 115, 116, 131, 189, 202, 213], "final": [4, 6, 7, 10, 16, 30, 41, 48, 49, 55, 57, 74, 76, 79, 85, 89, 93, 96, 105, 106, 113, 117, 119, 120, 121, 124, 139, 151, 154, 156, 157, 159, 161, 162, 164, 169, 176, 177, 180, 183, 186, 188, 195, 201, 202, 203, 205, 206, 209, 211, 212, 219, 232, 262, 263, 264], "temptat": [4, 202, 269], "fudg": 4, "earli": [4, 49, 89, 148, 206], "acceler": [4, 90, 108, 113, 117, 119, 123, 124, 126, 162, 169, 172, 174, 197, 228, 246], "myst": [4, 7], "checkbox": 4, "tag": [4, 193, 211], "nest": [4, 49, 51, 55, 57, 76, 80, 98, 181, 183, 186, 193, 203, 205, 208, 212, 213, 214, 215, 217, 220, 231, 232, 264], "ensur": [4, 11, 21, 49, 50, 53, 81, 85, 124, 188, 189, 193, 207, 224, 229, 232], "realli": [4, 10, 14, 16, 17, 49, 61, 89, 113, 161, 183, 192, 194, 200, 202, 203, 205, 209, 225, 234, 261, 263], "per": [4, 50, 85, 90, 133, 169, 174, 179, 184, 189, 190, 238, 241, 243, 246], "everywher": [4, 11, 49, 57, 74, 98, 174, 246], "doctest": [4, 6, 7, 11, 42, 57, 85, 89, 113, 148, 159, 183, 189, 209, 224, 227, 229, 268], "sympy_deprecation_warn": [4, 222, 227, 229], "write": [4, 8, 10, 14, 16, 17, 22, 31, 38, 49, 50, 57, 74, 76, 82, 126, 139, 176, 177, 181, 186, 188, 193, 202, 203, 206, 209, 212, 218, 224, 225, 226, 232, 262, 263, 264, 269], "multilin": [4, 193], "deprecated_since_vers": [4, 222, 227, 229], "active_deprecations_target": [4, 222, 227, 229], "target": [4, 6, 29, 30, 31, 49, 89, 104, 139, 143, 144, 202, 205, 208, 211, 212, 222, 225, 226, 229, 269], "stacklevel": [4, 222, 227, 229], "line": [4, 6, 10, 11, 14, 16, 21, 30, 31, 40, 41, 45, 50, 59, 60, 61, 63, 64, 65, 66, 71, 74, 76, 77, 78, 85, 89, 92, 96, 99, 111, 113, 118, 139, 169, 173, 174, 176, 178, 179, 193, 196, 203, 205, 209, 213, 214, 222, 224, 225, 226, 229, 232, 234, 244, 247, 261], "visual": [4, 49, 89, 93, 98, 120, 192, 205], "confirm": [4, 10, 40, 89, 209], "look": [4, 6, 7, 10, 11, 16, 17, 22, 30, 31, 40, 49, 54, 55, 57, 70, 85, 89, 106, 111, 113, 120, 143, 153, 154, 157, 172, 179, 183, 184, 188, 193, 195, 196, 200, 203, 205, 206, 209, 210, 224, 228, 232, 234, 242, 259, 264, 267, 268], "good": [4, 7, 16, 31, 49, 50, 53, 61, 74, 85, 89, 113, 123, 126, 180, 183, 184, 193, 200, 202, 203, 205, 209, 231, 258, 262, 265], "top": [4, 6, 7, 10, 31, 48, 49, 50, 65, 66, 76, 79, 85, 92, 93, 110, 154, 161, 183, 193, 203, 209, 226, 227, 232, 247, 264], "relev": [4, 6, 7, 16, 31, 47, 62, 77, 78, 103, 106, 108, 113, 164, 173, 177, 183, 203, 209, 210, 219, 224, 245], "docstr": [4, 7, 8, 10, 11, 30, 31, 42, 49, 71, 74, 76, 85, 89, 94, 97, 99, 120, 124, 129, 146, 152, 153, 155, 175, 189, 196, 199, 200, 202, 205, 209, 210, 211, 212, 218, 219, 224, 227, 232, 234, 245, 248], "src": [4, 6, 7, 91, 209, 224, 229], "explan": [4, 7, 11, 16, 18, 20, 23, 24, 25, 26, 27, 28, 30, 31, 34, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 51, 55, 57, 61, 71, 72, 74, 76, 80, 85, 89, 98, 101, 103, 104, 105, 106, 108, 118, 128, 130, 133, 136, 138, 140, 142, 154, 159, 178, 179, 180, 182, 184, 188, 189, 191, 195, 196, 198, 199, 200, 201, 203, 205, 206, 209, 211, 213, 214, 218, 219, 224, 227, 229, 232, 266], "cross": [4, 7, 8, 49, 59, 65, 80, 85, 92, 93, 105, 118, 124, 126, 139, 169, 175, 176, 177, 206, 238, 241, 243, 244], "xyz": [4, 61, 91, 92, 169, 177, 238, 239, 242], "header": [4, 31, 225, 226], "why": [4, 10, 11, 16, 31, 49, 177, 184, 190, 200, 203, 207, 232, 262, 264, 265], "test": [4, 6, 7, 8, 11, 15, 17, 26, 27, 29, 30, 31, 36, 40, 41, 48, 49, 50, 56, 59, 64, 74, 80, 82, 85, 89, 139, 148, 152, 153, 154, 162, 177, 183, 184, 185, 186, 188, 190, 201, 203, 206, 209, 210, 211, 212, 222, 225, 226, 227, 228, 229, 231, 232, 234, 248, 251, 256, 261, 263, 264], "warns_deprecated_sympi": [4, 222, 227, 229], "pr": [4, 10, 48, 184, 186, 187, 189, 212], "merg": [4, 31, 40, 41, 49, 167, 193, 201, 213, 224, 231, 232], "wiki": [4, 5, 6, 7, 8, 11, 16, 20, 23, 25, 26, 27, 29, 30, 31, 37, 38, 40, 41, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 76, 77, 78, 79, 80, 82, 85, 89, 96, 98, 101, 128, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 147, 148, 157, 159, 163, 169, 171, 175, 179, 189, 196, 200, 201, 202, 206, 209, 212, 213, 226, 231, 238, 239, 243, 245, 247, 265, 266], "decor": [4, 40, 49, 57, 222, 224, 229, 230, 233, 234, 256], "sympydeprecationwarn": [4, 10, 222, 224, 227, 229], "class": [4, 7, 8, 10, 11, 15, 16, 17, 20, 23, 24, 25, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 74, 76, 77, 78, 79, 82, 84, 91, 92, 95, 96, 98, 103, 105, 106, 107, 108, 110, 111, 114, 115, 120, 124, 126, 127, 128, 130, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 167, 168, 172, 173, 175, 180, 183, 184, 185, 186, 189, 190, 191, 192, 194, 195, 196, 199, 200, 201, 203, 207, 209, 210, 211, 212, 213, 216, 218, 219, 220, 224, 225, 226, 227, 228, 229, 231, 232, 236, 241, 242, 244, 245, 247, 248, 249, 250, 253, 255, 256, 259, 261, 264, 269], "context": [4, 6, 7, 10, 16, 24, 25, 26, 49, 51, 57, 76, 79, 111, 164, 183, 186, 188, 201, 222, 224, 229, 238], "manag": [4, 10, 21, 25, 26, 91, 139, 186, 205, 219, 222, 224, 229], "filter": [4, 10, 13, 49, 50, 74, 131, 189, 222, 224, 229, 231], "emit": [4, 193, 222, 229], "assert": [4, 30, 38, 39, 40, 41, 49, 59, 61, 91, 123, 201, 209, 210, 222, 229, 231], "separ": [4, 6, 10, 11, 14, 17, 30, 37, 49, 50, 55, 57, 74, 76, 85, 99, 110, 123, 124, 127, 132, 156, 159, 168, 169, 179, 181, 184, 186, 189, 190, 193, 202, 205, 206, 210, 212, 217, 222, 224, 228, 232, 234, 238, 261], "block": [4, 6, 10, 31, 38, 40, 50, 80, 84, 85, 110, 111, 113, 115, 169, 177, 182, 206, 232, 241], "behavior1": 4, "behavior2": 4, "everyth": [4, 7, 11, 31, 49, 51, 57, 76, 83, 100, 123, 155, 156, 179, 193, 264, 268], "ignore_warn": [4, 222, 227, 229, 232], "prevent": [4, 11, 31, 49, 86, 89, 102, 182, 184, 189, 193, 205, 213, 222, 229, 260], "trigger": [4, 41, 91, 159, 222], "twice": [4, 11, 31, 49, 51, 63, 89, 169, 171, 176, 193, 228, 229, 238, 239, 259], "similar": [4, 5, 10, 11, 14, 16, 41, 48, 49, 50, 53, 54, 55, 57, 60, 65, 66, 70, 79, 85, 90, 98, 111, 113, 114, 123, 124, 157, 174, 176, 177, 181, 183, 184, 186, 190, 200, 202, 203, 205, 209, 211, 214, 219, 222, 225, 228, 229, 238, 239, 241, 242, 246, 258, 263, 264, 265, 267, 269], "somewher": [4, 6, 7, 31], "sign": [4, 6, 7, 12, 23, 28, 31, 45, 49, 50, 54, 56, 59, 65, 74, 76, 85, 89, 92, 93, 98, 113, 132, 144, 169, 174, 176, 178, 186, 193, 198, 200, 205, 206, 211, 231, 244, 247, 262], "readi": [4, 16, 110, 183, 193, 209], "paragraph": [4, 6, 7, 30], "metadata": [4, 30, 227, 229], "link": [4, 6, 7, 11, 19, 31, 50, 59, 65, 76, 99, 105, 120, 225, 228, 229, 267], "rememb": [4, 6, 11, 79, 85, 99, 102, 126, 176, 177, 193, 205, 211, 214, 232, 264, 269], "shown": [4, 6, 10, 16, 17, 38, 41, 48, 49, 53, 57, 74, 91, 93, 96, 98, 102, 106, 108, 114, 115, 121, 122, 124, 168, 169, 176, 177, 179, 182, 183, 184, 189, 193, 209, 213, 229, 231, 241, 242, 262], "plain": [4, 6, 16, 77, 173, 189, 193], "rst": [4, 6, 7, 32, 209, 224], "markdown": [4, 8], "markup": [4, 193], "clearli": [4, 6, 89, 177, 183, 203, 265], "delin": 4, "newlin": [4, 85, 234], "charact": [4, 6, 7, 49, 50, 74, 77, 91, 139, 169, 173, 193, 209, 224, 226, 229, 234, 261, 263, 268], "full": [4, 6, 7, 8, 9, 10, 11, 16, 20, 26, 29, 31, 40, 41, 49, 53, 57, 61, 62, 76, 82, 85, 91, 121, 122, 169, 183, 186, 187, 189, 193, 195, 205, 206, 263, 266, 269], "abc": [4, 6, 11, 13, 23, 24, 25, 26, 27, 28, 29, 31, 38, 40, 42, 48, 49, 50, 51, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 72, 73, 74, 76, 77, 79, 80, 82, 85, 88, 90, 96, 98, 100, 130, 132, 134, 135, 140, 157, 159, 160, 180, 182, 184, 186, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 225, 226, 227, 228, 229, 231, 232, 234, 238, 240, 241, 242, 247, 249, 261, 264, 268], "func": [4, 6, 15, 25, 29, 31, 49, 51, 54, 57, 68, 70, 76, 89, 148, 169, 186, 189, 193, 194, 205, 209, 210, 211, 222, 227, 229, 231, 232, 234, 237], "larger": [4, 7, 31, 40, 41, 48, 49, 50, 57, 74, 82, 85, 89, 114, 118, 184, 190, 194, 200, 205, 211, 226, 228, 261, 269], "easier": [4, 17, 49, 93, 111, 113, 176, 184, 188, 190, 203, 209, 212, 226, 232, 241, 263, 269, 270], "exactli": [4, 6, 7, 10, 11, 27, 33, 40, 49, 52, 53, 56, 85, 91, 105, 124, 178, 203, 205, 209, 212, 214, 228, 231, 232, 259, 261, 263, 268, 269], "direct": [4, 6, 7, 10, 15, 23, 25, 26, 30, 34, 37, 40, 45, 48, 49, 51, 53, 55, 58, 62, 63, 64, 65, 79, 80, 85, 92, 93, 102, 103, 105, 113, 114, 118, 126, 145, 169, 174, 176, 177, 180, 182, 183, 186, 190, 200, 203, 219, 222, 231, 238, 242, 243, 246], "syntax": [4, 6, 7, 10, 11, 24, 26, 41, 49, 76, 91, 111, 126, 156, 179, 183, 192, 193, 205, 211, 215, 234, 250, 259, 261, 263, 268, 270], "paramet": [4, 7, 10, 11, 23, 24, 26, 29, 31, 32, 40, 41, 45, 47, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 72, 74, 76, 77, 79, 80, 82, 85, 86, 88, 89, 91, 92, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 126, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 144, 147, 148, 149, 151, 153, 154, 156, 157, 158, 159, 160, 161, 169, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 218, 219, 222, 224, 225, 226, 228, 229, 231, 232, 238, 239, 240, 241, 242, 247, 259, 264], "short": [4, 7, 11, 22, 32, 39, 41, 45, 49, 50, 51, 52, 55, 83, 89, 102, 145, 164, 168, 177, 180, 187, 214, 224, 234, 264, 268], "renam": [4, 10, 31, 76], "rest": [4, 10, 74, 77, 79, 83, 93, 100, 111, 114, 120, 164, 180, 183, 213, 231, 261, 262, 269], "left": [4, 7, 10, 14, 16, 19, 29, 31, 32, 40, 41, 45, 49, 50, 51, 54, 55, 57, 65, 66, 72, 74, 76, 77, 79, 80, 85, 88, 89, 98, 103, 110, 124, 131, 138, 143, 147, 148, 151, 156, 169, 174, 178, 179, 180, 182, 189, 190, 191, 192, 193, 195, 196, 200, 201, 202, 203, 205, 209, 210, 211, 212, 213, 224, 225, 226, 228, 231, 244, 259, 263, 265, 269], "imaginari": [4, 6, 11, 16, 23, 26, 28, 49, 53, 55, 57, 80, 126, 183, 184, 189, 193, 194, 201, 205, 212], "simplify_thi": [4, 6, 227], "expr": [4, 6, 11, 16, 25, 26, 28, 29, 31, 41, 48, 51, 53, 55, 57, 59, 71, 74, 76, 79, 82, 85, 90, 91, 98, 102, 104, 111, 123, 136, 140, 142, 144, 148, 151, 154, 156, 157, 159, 166, 169, 171, 173, 179, 181, 182, 183, 184, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 202, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 225, 226, 227, 229, 232, 238, 239, 240, 241, 242, 244, 249, 258, 259, 261, 263, 264, 268, 269, 270], "simplifi": [4, 6, 11, 14, 16, 17, 24, 26, 28, 29, 48, 49, 51, 53, 54, 55, 57, 61, 66, 71, 74, 76, 79, 80, 81, 82, 85, 92, 98, 99, 104, 107, 114, 117, 118, 119, 123, 131, 138, 143, 158, 159, 166, 169, 174, 180, 188, 190, 192, 194, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 227, 229, 232, 241, 243, 249, 250, 258, 260, 261, 263, 264, 265], "def": [4, 6, 7, 10, 11, 14, 16, 17, 25, 26, 30, 49, 54, 56, 61, 79, 85, 89, 91, 118, 154, 183, 189, 193, 202, 205, 212, 227, 229, 231, 232, 235, 258, 261, 264, 265, 269], "ref": [4, 40, 55, 85, 96, 126, 198, 213, 227, 265], "is_this_zero": [4, 229], "y": [4, 6, 10, 11, 13, 16, 17, 19, 22, 24, 25, 26, 27, 28, 29, 31, 32, 40, 41, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 72, 74, 76, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 92, 93, 96, 98, 103, 104, 105, 108, 111, 113, 114, 115, 117, 118, 119, 124, 126, 127, 136, 137, 140, 143, 148, 154, 156, 157, 159, 160, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 225, 226, 229, 231, 232, 234, 238, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 268, 269, 270], "0": [4, 6, 11, 14, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 103, 104, 105, 106, 108, 111, 113, 114, 115, 117, 119, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 138, 143, 144, 145, 148, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 227, 228, 229, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "zero": [4, 11, 16, 17, 23, 26, 28, 31, 39, 40, 41, 45, 48, 52, 53, 54, 55, 56, 57, 59, 63, 64, 65, 74, 76, 78, 79, 80, 82, 84, 85, 88, 89, 91, 92, 97, 98, 105, 108, 111, 113, 115, 118, 121, 122, 126, 131, 153, 157, 159, 161, 172, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 188, 189, 191, 193, 196, 200, 201, 203, 205, 206, 209, 210, 211, 212, 213, 214, 229, 231, 232, 241, 243, 244, 264, 270], "is_zero": [4, 16, 49, 56, 64, 85, 180, 184, 189, 229, 265], "mail": [4, 10, 21, 193, 262], "summar": [4, 224, 269], "idea": [4, 16, 17, 34, 40, 47, 49, 50, 61, 67, 74, 76, 89, 99, 111, 159, 163, 164, 180, 182, 183, 202, 205, 206, 209, 212, 226, 232, 269], "fit": [4, 30, 74, 85, 88, 89, 177, 193, 209, 234, 264], "put": [4, 6, 10, 11, 14, 31, 45, 46, 49, 50, 51, 55, 79, 80, 85, 131, 136, 140, 155, 156, 189, 193, 194, 202, 203, 205, 209, 214, 220, 225, 265, 269], "word": [4, 7, 27, 36, 45, 48, 49, 50, 55, 57, 79, 98, 111, 124, 180, 183, 188, 205, 206, 209, 211, 226, 238, 242, 261], "global": [4, 6, 10, 24, 25, 26, 29, 31, 32, 49, 61, 74, 91, 143, 149, 169, 171, 179, 180, 183, 184, 186, 193, 206, 209, 210, 213, 224, 226, 227, 232, 240], "uniqu": [4, 29, 30, 32, 40, 43, 45, 49, 50, 51, 54, 57, 64, 67, 72, 76, 78, 79, 85, 89, 105, 148, 157, 169, 177, 180, 181, 183, 186, 188, 194, 198, 205, 206, 209, 211, 212, 213, 217, 226, 231, 234, 241, 246, 261, 264], "across": [4, 7, 40, 47, 49, 60, 76, 93, 158, 159, 166, 179, 193, 228, 230, 231, 232, 267], "level": [4, 6, 7, 10, 11, 16, 17, 31, 40, 47, 49, 55, 57, 76, 79, 85, 89, 102, 114, 126, 154, 159, 164, 168, 171, 177, 179, 182, 183, 185, 191, 193, 202, 206, 212, 213, 217, 225, 226, 231, 264, 265, 267], "correspond": [4, 6, 7, 10, 14, 16, 17, 29, 30, 31, 32, 39, 40, 41, 43, 44, 45, 48, 49, 50, 51, 52, 55, 59, 60, 62, 63, 64, 65, 72, 74, 78, 79, 80, 85, 88, 89, 92, 93, 98, 104, 106, 110, 111, 113, 114, 127, 131, 135, 149, 153, 154, 156, 160, 161, 164, 169, 172, 174, 178, 179, 181, 182, 183, 184, 186, 188, 189, 193, 199, 200, 203, 205, 206, 209, 210, 211, 212, 213, 215, 217, 218, 219, 226, 227, 228, 229, 231, 232, 234, 238, 239, 241, 242, 244, 246, 264, 270], "share": [4, 16, 50, 89, 184, 188, 193, 213, 226], "__init__": [4, 6, 49, 106, 188, 238, 239, 264], "func_nam": [4, 31, 55, 80, 234], "help": [4, 5, 6, 7, 12, 16, 22, 31, 39, 49, 57, 74, 76, 85, 89, 90, 96, 111, 126, 134, 144, 177, 179, 188, 190, 193, 202, 203, 206, 209, 210, 213, 224, 225, 226, 232, 254, 262, 265], "rais": [4, 10, 11, 16, 17, 24, 26, 29, 31, 38, 41, 49, 50, 51, 53, 55, 58, 59, 62, 64, 65, 66, 74, 76, 80, 82, 85, 86, 88, 89, 96, 98, 133, 145, 174, 177, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 195, 201, 205, 208, 209, 210, 211, 212, 213, 217, 219, 222, 224, 226, 229, 231, 232, 234, 235, 244, 265], "been": [4, 11, 16, 29, 31, 32, 40, 41, 42, 45, 48, 49, 50, 61, 74, 76, 85, 89, 90, 91, 106, 111, 113, 120, 123, 124, 132, 144, 154, 156, 164, 168, 174, 175, 176, 177, 180, 183, 184, 188, 190, 191, 193, 195, 200, 203, 205, 210, 211, 212, 214, 223, 224, 226, 227, 229, 231, 234, 241, 244, 261, 262, 264, 265, 269], "simplfiy_thi": 4, "ident": [4, 11, 27, 30, 32, 39, 40, 41, 47, 49, 50, 54, 55, 65, 72, 78, 80, 82, 85, 99, 101, 124, 143, 145, 148, 164, 180, 181, 182, 186, 187, 188, 189, 193, 202, 205, 209, 212, 217, 219, 224, 231, 232, 234, 242, 261, 265, 269], "much": [4, 6, 10, 14, 16, 17, 30, 31, 34, 45, 53, 57, 71, 74, 76, 123, 167, 168, 176, 177, 178, 180, 183, 186, 189, 200, 203, 205, 209, 210, 211, 212, 226, 228, 261, 263, 269], "trivial": [4, 32, 40, 45, 48, 49, 50, 55, 64, 79, 82, 85, 89, 121, 159, 180, 181, 186, 189, 203, 206, 209, 212, 217], "furthermor": [4, 10, 27, 49, 50, 79, 188, 202, 261, 263, 264], "particular": [4, 6, 10, 11, 16, 17, 19, 27, 32, 40, 49, 50, 53, 57, 60, 74, 76, 79, 82, 85, 89, 92, 120, 143, 154, 181, 182, 183, 184, 186, 188, 189, 199, 201, 203, 205, 206, 209, 211, 212, 224, 226, 228, 265, 267, 269], "expr1": [4, 16, 98, 179, 211, 264], "expr2": [4, 16, 98, 179, 264], "dozen": [4, 269], "search": [4, 6, 29, 40, 41, 45, 47, 49, 55, 85, 89, 111, 180, 188, 189, 202, 203, 205, 207, 210, 213, 225], "upcom": 4, "bot": 4, "push": [5, 74], "respect": [5, 6, 10, 11, 24, 26, 27, 29, 30, 31, 32, 39, 40, 41, 44, 45, 47, 48, 49, 51, 55, 57, 59, 61, 65, 66, 71, 72, 74, 76, 79, 80, 82, 85, 89, 91, 92, 93, 98, 103, 104, 105, 108, 114, 122, 124, 126, 133, 148, 161, 162, 163, 168, 169, 172, 174, 177, 178, 179, 180, 183, 186, 188, 189, 190, 193, 195, 196, 199, 201, 205, 209, 210, 211, 212, 213, 214, 218, 219, 224, 226, 238, 239, 240, 241, 242, 243, 244, 245, 246, 259, 269], "handbook": [5, 6, 32, 39, 40, 47, 57, 89], "internet": 5, "practic": [5, 8, 14, 16, 38, 40, 50, 59, 123, 126, 179, 180, 181, 183, 188, 190, 217, 261, 262], "project": [5, 7, 10, 31, 62, 63, 64, 78, 85, 125, 225, 226, 238], "purpos": [5, 6, 7, 8, 10, 15, 16, 30, 31, 40, 46, 49, 50, 76, 85, 111, 126, 164, 168, 177, 183, 186, 190, 192, 193, 200, 209, 212, 218, 228, 230, 232, 241, 242, 259, 269], "nn": 5, "brows": 5, "clone": [5, 21, 186], "download": [5, 7, 21, 30, 71, 187, 202, 209, 213, 238, 263], "origin": [5, 11, 14, 16, 21, 23, 40, 41, 42, 45, 48, 49, 50, 53, 54, 55, 57, 58, 60, 62, 64, 74, 76, 80, 85, 89, 96, 98, 99, 114, 123, 126, 151, 154, 164, 170, 174, 179, 180, 184, 188, 189, 192, 193, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 219, 224, 231, 232, 238, 240, 241, 242, 243, 244, 246, 247, 269], "77": [5, 38, 57, 85, 89, 192, 193, 226], "mib": 5, "remot": [5, 49], "collabor": 5, "upstream": 5, "fetch": 5, "branch": [5, 17, 29, 49, 54, 55, 56, 57, 75, 190, 203, 212, 264, 269], "checkout": [5, 30], "advantag": [5, 16, 26, 29, 31, 49, 50, 76, 79, 85, 89, 95, 163, 182, 183, 190, 201, 206, 209, 212, 228, 261, 263, 265, 269], "isol": [5, 29, 55, 184, 188, 189, 190, 211, 226], "wide": [5, 16, 77, 85, 126, 173, 183, 189, 193, 213], "flake8": 5, "usernam": 5, "easiest": [5, 7, 10, 11, 49, 180, 183, 206, 232, 242, 258, 264, 269], "consult": [5, 32], "kwarg": [5, 11, 25, 26, 27, 31, 40, 41, 48, 49, 50, 51, 55, 57, 59, 60, 62, 63, 64, 65, 66, 71, 74, 76, 80, 81, 82, 83, 85, 87, 88, 96, 98, 104, 106, 114, 128, 137, 139, 143, 144, 148, 150, 152, 153, 155, 156, 157, 169, 172, 173, 179, 182, 184, 189, 193, 195, 199, 200, 201, 205, 209, 210, 211, 213, 214, 219, 224, 225, 227, 232, 234, 242], "test_bas": [5, 224], "similari": 5, "qualiti": [5, 90, 193], "code_qu": 5, "liter": [6, 11, 31, 39, 49, 77, 79, 91, 159, 166, 205], "occur": [6, 10, 11, 40, 41, 49, 53, 56, 57, 66, 74, 80, 91, 102, 123, 168, 169, 176, 188, 196, 205, 210, 211, 214, 224, 231, 264], "definit": [6, 10, 11, 17, 23, 26, 31, 32, 40, 41, 46, 48, 49, 51, 52, 54, 55, 57, 62, 65, 69, 72, 74, 76, 80, 81, 82, 85, 89, 91, 113, 117, 118, 124, 161, 164, 167, 169, 176, 177, 180, 181, 184, 189, 190, 193, 200, 213, 214, 225, 226, 227, 231, 232, 238, 241, 242, 243, 244, 259, 269], "__doc__": [6, 11], "attribut": [6, 13, 16, 25, 26, 30, 31, 40, 41, 49, 57, 58, 59, 62, 63, 64, 65, 82, 85, 91, 93, 98, 103, 105, 106, 107, 108, 110, 117, 124, 127, 148, 153, 157, 164, 168, 169, 174, 177, 179, 180, 183, 184, 188, 193, 201, 205, 206, 218, 219, 225, 227, 231, 232, 235, 241, 264], "fdiff": [6, 31, 49, 55, 56, 57], "self": [6, 16, 23, 25, 26, 30, 31, 40, 41, 46, 48, 49, 51, 55, 56, 58, 59, 60, 62, 63, 64, 65, 76, 80, 85, 89, 103, 113, 154, 159, 169, 171, 172, 180, 182, 184, 186, 188, 189, 193, 195, 200, 201, 219, 238], "argindex": [6, 31, 49, 55, 56, 57], "heavisid": [6, 56, 74, 76, 193], "diff": [6, 10, 14, 29, 31, 54, 55, 56, 57, 66, 71, 82, 85, 102, 104, 114, 126, 157, 169, 171, 173, 174, 177, 179, 184, 189, 192, 193, 203, 209, 210, 211, 214, 215, 220, 241, 244, 259, 263, 270], "diracdelta": [6, 56, 76, 154, 159, 193], "what": [6, 7, 8, 10, 11, 13, 14, 16, 17, 19, 20, 29, 31, 41, 43, 48, 49, 50, 51, 55, 59, 60, 64, 74, 76, 78, 85, 89, 91, 103, 106, 108, 111, 114, 126, 158, 159, 162, 164, 169, 176, 177, 184, 185, 186, 189, 192, 193, 194, 200, 202, 203, 205, 206, 207, 209, 211, 218, 222, 224, 226, 227, 232, 241, 242, 247, 259, 261, 262, 264, 268, 269], "scope": [6, 31, 120, 123, 222, 269], "high": [6, 7, 11, 14, 16, 31, 49, 53, 54, 77, 89, 126, 173, 183, 188, 191, 193, 206, 211, 254, 265], "od": [6, 72, 106, 110, 120, 126, 207, 210, 270], "seen": [6, 14, 16, 23, 41, 74, 76, 91, 110, 164, 176, 180, 183, 186, 189, 209, 211, 212, 229, 231, 241, 261, 264, 268], "hand": [6, 10, 14, 16, 30, 31, 41, 42, 49, 55, 57, 76, 79, 80, 85, 89, 92, 106, 110, 111, 123, 127, 131, 148, 151, 169, 174, 177, 178, 180, 183, 184, 186, 188, 191, 203, 212, 224, 226, 228, 232, 235, 244, 246, 263], "less": [6, 7, 10, 14, 27, 31, 32, 40, 41, 48, 49, 50, 53, 54, 55, 57, 63, 64, 65, 80, 85, 89, 96, 98, 111, 113, 159, 183, 186, 188, 189, 202, 203, 205, 206, 209, 211, 212, 213, 224, 226], "understand": [6, 11, 16, 17, 49, 50, 74, 111, 120, 121, 122, 126, 164, 176, 179, 182, 183, 188, 203, 206, 225, 232, 260, 261, 268, 269], "clear": [6, 10, 16, 25, 39, 49, 74, 78, 103, 176, 177, 179, 184, 186, 189, 203, 211, 212, 219, 224, 228, 246, 261], "begin": [6, 10, 11, 16, 19, 49, 50, 54, 55, 57, 74, 80, 82, 85, 89, 114, 121, 122, 123, 124, 155, 164, 169, 177, 178, 182, 193, 203, 206, 209, 210, 212, 213, 224, 234, 261, 263, 265, 269], "convers": [6, 7, 10, 16, 31, 49, 69, 91, 123, 163, 181, 182, 183, 184, 186, 188, 190, 193, 206, 218, 225, 238], "aim": [6, 7, 20, 67, 74, 164, 180, 203, 209, 212, 262, 263], "comment": [6, 7, 31, 40, 111, 113, 190, 193, 226, 231], "distract": 6, "input": [6, 7, 10, 11, 18, 23, 29, 32, 45, 49, 50, 52, 53, 54, 55, 63, 76, 78, 79, 85, 89, 91, 95, 96, 98, 102, 107, 110, 111, 113, 114, 123, 126, 127, 132, 155, 169, 171, 172, 183, 184, 186, 189, 190, 191, 192, 193, 194, 201, 205, 206, 207, 209, 211, 213, 215, 225, 226, 228, 229, 231, 232, 234, 258, 264, 265, 269], "consum": [6, 31, 57, 107, 123], "human": [6, 74, 161, 189, 193], "beings": 6, "english": [6, 50], "likewis": [6, 16, 30, 114], "reader": [6, 7, 30, 32, 124, 180, 228, 262, 267], "machineri": [6, 49, 188, 232], "mind": [6, 11, 13, 16, 49, 85, 124, 179, 200, 201, 246, 264], "platform": [6, 49, 159, 177, 209, 225], "anyon": [6, 7, 10, 20, 189, 193, 257, 267, 268], "restructuredtext": [6, 7], "extend": [6, 7, 16, 26, 31, 40, 41, 49, 50, 54, 61, 74, 76, 85, 89, 126, 167, 173, 179, 181, 184, 186, 188, 189, 190, 193, 200, 202, 206, 208, 209, 212, 213, 214, 226, 228, 261, 263], "concis": [6, 126], "quick": [6, 7, 49, 85, 89, 205, 211, 232], "depth": [6, 7, 9, 11, 12, 20, 40, 49, 113, 179, 180, 193, 255], "tripl": [6, 66, 85, 177, 178, 180, 188, 234], "quot": [6, 11, 31, 79, 193, 234], "raw": [6, 7, 31, 49, 50, 55, 90, 91, 153, 158, 183, 184, 189, 201, 205, 268], "backslash": [6, 49, 193], "blank": [6, 91, 107, 179], "close": [6, 31, 48, 49, 53, 54, 57, 65, 67, 74, 76, 78, 98, 179, 180, 181, 187, 188, 201, 211, 212, 226, 259, 269], "rare": [6, 49, 209, 213, 222, 261], "underlin": [6, 7], "numpydoc": [6, 7], "build": [6, 7, 8, 13, 25, 26, 31, 49, 51, 57, 79, 126, 153, 164, 169, 177, 180, 185, 188, 189, 190, 200, 213, 241, 258, 261, 264], "consist": [6, 7, 10, 14, 16, 30, 40, 41, 45, 49, 50, 54, 55, 57, 59, 65, 67, 74, 79, 92, 124, 133, 153, 159, 164, 167, 172, 179, 181, 183, 184, 186, 201, 209, 211, 212, 213, 217, 222, 225, 226, 231, 262, 264], "review": [6, 7, 125], "head": [6, 13, 30, 49, 213, 219, 234, 264], "plural": [6, 7], "length": [6, 10, 31, 33, 39, 40, 41, 43, 47, 49, 50, 52, 54, 55, 57, 58, 62, 64, 65, 66, 79, 80, 85, 88, 89, 92, 93, 102, 106, 110, 114, 115, 124, 128, 132, 156, 161, 162, 164, 169, 172, 177, 188, 189, 193, 199, 203, 205, 209, 211, 213, 224, 225, 231, 234, 238, 239, 247], "equal": [6, 10, 12, 16, 17, 23, 27, 30, 31, 32, 38, 39, 40, 41, 45, 47, 48, 50, 51, 53, 54, 55, 57, 62, 63, 64, 65, 66, 68, 74, 79, 80, 82, 85, 89, 92, 98, 99, 103, 106, 108, 113, 121, 122, 143, 144, 159, 164, 169, 172, 177, 180, 181, 182, 183, 184, 186, 188, 189, 191, 193, 199, 201, 203, 206, 209, 210, 211, 212, 213, 219, 224, 225, 226, 231, 234, 238, 242, 247, 259, 262, 270], "clutter": 6, "harder": [6, 10, 16, 49, 74, 183, 224], "minim": [6, 16, 29, 40, 41, 45, 48, 49, 50, 74, 76, 79, 89, 103, 114, 128, 182, 183, 184, 185, 186, 189, 192, 202, 205, 206, 211, 231, 235], "amount": [6, 30, 49, 50, 61, 120, 169, 174, 177, 186, 196, 224, 238, 239], "deprec": [6, 8, 12, 24, 41, 49, 62, 76, 80, 101, 123, 189, 193, 213, 219, 222, 223, 227, 229, 232, 236], "notifi": 6, "awai": [6, 30, 32, 50, 92, 93, 113, 188, 193], "encourag": [6, 10, 30, 121, 122, 188], "label": [6, 30, 31, 43, 49, 59, 72, 76, 132, 139, 143, 148, 157, 159, 179, 193, 194, 196, 205, 218, 219, 268], "elabor": [6, 18, 174, 244], "suffic": [6, 181], "clarifi": 6, "complic": [6, 11, 16, 31, 40, 48, 50, 51, 53, 54, 55, 57, 74, 76, 82, 120, 121, 159, 177, 183, 186, 190, 192, 203, 205, 212, 213, 217, 218, 226, 228, 232, 234, 259, 261, 264, 265], "demonstr": [6, 7, 11, 16, 40, 41, 49, 76, 89, 103, 105, 111, 114, 115, 123, 180, 183, 243, 269], "api": [6, 7, 10, 16, 18, 20, 31, 49, 61, 69, 75, 90, 91, 97, 126, 155, 168, 179, 186, 206, 207, 208, 230, 232, 235, 241, 242, 252, 254, 262, 263, 266], "simpl": [6, 11, 14, 16, 20, 21, 30, 31, 40, 48, 49, 53, 57, 61, 65, 67, 74, 76, 78, 85, 89, 90, 92, 93, 98, 99, 102, 105, 106, 108, 110, 113, 114, 115, 117, 119, 120, 123, 127, 133, 147, 148, 156, 157, 158, 169, 176, 177, 183, 184, 185, 189, 190, 193, 195, 200, 202, 203, 205, 206, 209, 212, 219, 225, 226, 231, 235, 237, 238, 239, 240, 244, 258, 261, 264, 265, 269], "too": [6, 11, 40, 41, 49, 55, 57, 59, 62, 64, 74, 79, 88, 89, 90, 121, 128, 200, 201, 205, 206, 209, 211, 212, 213, 224, 225, 240, 241], "thought": [6, 49, 200, 209, 261, 264], "perfect": [6, 40, 49, 89, 206, 212, 263, 264], "tell": [6, 7, 16, 17, 31, 41, 50, 53, 57, 80, 91, 110, 164, 183, 188, 192, 200, 203, 209, 225, 261], "think": [6, 10, 16, 17, 21, 29, 40, 113, 164, 228, 232, 261, 269], "test_": [6, 224], "coverage_doctest": 6, "coverag": 6, "6868680200532414": 6, "dsolv": [6, 210, 211, 259, 263, 270], "co": [6, 11, 19, 23, 29, 31, 48, 49, 51, 53, 54, 56, 57, 58, 59, 62, 63, 65, 67, 71, 72, 73, 74, 76, 80, 85, 89, 91, 103, 104, 105, 111, 113, 115, 117, 118, 119, 123, 126, 131, 133, 169, 171, 172, 174, 176, 177, 178, 179, 183, 186, 189, 190, 192, 193, 194, 195, 196, 200, 201, 202, 203, 205, 209, 211, 212, 213, 214, 220, 232, 238, 239, 240, 241, 242, 247, 258, 259, 261, 263, 269, 270], "sin": [6, 7, 10, 11, 16, 19, 21, 23, 29, 31, 48, 49, 51, 53, 54, 56, 57, 58, 59, 63, 67, 68, 71, 72, 73, 74, 76, 77, 80, 85, 90, 91, 100, 103, 104, 105, 110, 111, 113, 115, 117, 118, 119, 123, 126, 131, 133, 157, 169, 171, 172, 174, 176, 177, 178, 179, 181, 183, 189, 190, 192, 193, 194, 195, 196, 200, 201, 202, 203, 205, 208, 209, 211, 212, 214, 220, 226, 232, 238, 239, 240, 241, 242, 247, 258, 259, 261, 263, 264, 269, 270], "hint": [6, 30, 33, 40, 49, 52, 55, 76, 80, 85, 89, 98, 126, 136, 140, 156, 158, 159, 169, 189, 200, 203, 207, 211, 269], "1st_exact": 6, "eq": [6, 11, 16, 27, 29, 31, 55, 59, 62, 66, 74, 79, 162, 179, 180, 184, 189, 191, 193, 195, 199, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 225, 226, 232, 238, 261, 263, 270], "c1": [6, 14, 50, 59, 66, 80, 82, 145, 159, 201, 206, 209, 211, 243, 270], "comma": [6, 7, 11, 31, 49, 193, 232, 261], "readabl": [6, 22, 30, 77, 102, 189, 192, 193, 200, 202, 235], "accept": [6, 30, 31, 40, 49, 55, 63, 76, 79, 80, 82, 85, 88, 91, 111, 153, 169, 173, 179, 188, 189, 192, 193, 194, 201, 203, 205, 211, 225, 232, 238, 239, 242, 265], "rang": [6, 10, 14, 29, 31, 38, 39, 40, 41, 43, 45, 49, 50, 54, 55, 57, 63, 80, 85, 89, 93, 96, 100, 128, 159, 179, 183, 184, 185, 186, 188, 189, 190, 195, 196, 199, 202, 205, 209, 212, 213, 214, 218, 224, 231, 258, 269], "30": [6, 23, 29, 31, 35, 49, 50, 52, 53, 54, 57, 63, 65, 76, 80, 85, 86, 89, 92, 93, 111, 132, 182, 184, 188, 189, 193, 199, 202, 205, 213, 214, 269], "7": [3, 6, 11, 12, 16, 19, 23, 25, 26, 29, 31, 33, 35, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 59, 62, 63, 64, 65, 71, 74, 76, 79, 80, 82, 83, 85, 89, 91, 92, 94, 96, 98, 113, 119, 121, 122, 126, 159, 164, 166, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 195, 196, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 218, 219, 224, 225, 228, 231, 232, 238, 247, 259, 264, 265, 268], "8": [6, 12, 14, 21, 23, 24, 29, 31, 33, 40, 41, 42, 45, 47, 49, 50, 52, 53, 54, 55, 57, 59, 62, 63, 65, 71, 74, 76, 78, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 96, 98, 100, 113, 126, 131, 132, 143, 179, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 195, 196, 199, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 218, 224, 226, 228, 231, 238, 240, 241, 247, 258, 259, 263, 265, 269], "9": [6, 12, 21, 29, 31, 37, 39, 40, 41, 45, 47, 48, 49, 50, 52, 54, 55, 57, 58, 59, 62, 63, 65, 71, 74, 76, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 96, 98, 99, 100, 101, 111, 113, 115, 126, 128, 132, 164, 178, 179, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 199, 201, 202, 203, 205, 206, 209, 211, 212, 213, 214, 224, 228, 231, 238, 240, 263, 265, 270], "11": [6, 12, 16, 25, 26, 31, 40, 43, 45, 47, 49, 50, 52, 54, 57, 61, 62, 63, 65, 66, 74, 76, 79, 80, 81, 85, 89, 91, 94, 98, 111, 113, 124, 143, 153, 178, 179, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 200, 202, 206, 209, 211, 212, 213, 214, 225, 231, 241], "12": [6, 11, 23, 29, 30, 31, 35, 37, 38, 40, 41, 42, 45, 47, 48, 49, 50, 52, 54, 55, 57, 59, 62, 63, 65, 74, 76, 80, 85, 86, 89, 92, 93, 96, 98, 100, 113, 124, 156, 169, 178, 181, 182, 183, 186, 188, 189, 190, 192, 193, 199, 201, 202, 206, 208, 209, 213, 214, 225, 228, 231, 240, 265, 269], "13": [6, 23, 31, 38, 40, 45, 49, 50, 52, 54, 57, 61, 62, 63, 64, 74, 79, 85, 89, 93, 96, 98, 111, 124, 179, 186, 188, 189, 190, 192, 193, 199, 206, 208, 210, 211, 213, 214, 225, 247], "14": [6, 31, 38, 40, 44, 45, 47, 49, 50, 54, 55, 57, 74, 85, 86, 89, 90, 92, 96, 111, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 202, 205, 206, 209, 211, 213, 214, 259], "15": [6, 11, 29, 35, 38, 40, 45, 47, 49, 50, 52, 53, 54, 57, 59, 62, 63, 65, 66, 74, 76, 79, 80, 81, 85, 86, 89, 92, 132, 178, 179, 181, 182, 183, 184, 188, 189, 190, 192, 193, 195, 199, 200, 202, 205, 206, 210, 211, 212, 213, 214, 231, 258, 259, 264, 265], "16": [6, 23, 29, 31, 40, 41, 44, 48, 49, 50, 54, 57, 58, 59, 63, 74, 76, 79, 85, 86, 88, 89, 93, 174, 181, 182, 183, 186, 187, 188, 189, 192, 193, 199, 201, 202, 203, 206, 213, 214, 231, 238, 246, 265], "17": [6, 10, 38, 40, 41, 49, 50, 53, 54, 55, 59, 62, 65, 74, 85, 89, 98, 183, 184, 188, 189, 192, 193, 200, 202, 206, 209, 214, 228, 232, 263], "18": [6, 40, 41, 52, 54, 57, 59, 62, 65, 81, 85, 89, 93, 96, 98, 100, 170, 178, 186, 187, 192, 193, 201, 202, 206, 209, 211, 212, 213, 214, 240], "19": [6, 40, 49, 52, 57, 59, 62, 65, 85, 89, 91, 92, 184, 188, 189, 192, 202, 206, 208, 211, 225, 258], "20": [6, 11, 27, 31, 38, 40, 41, 48, 49, 50, 53, 54, 57, 65, 66, 76, 85, 89, 92, 93, 98, 108, 164, 166, 179, 183, 187, 188, 189, 190, 192, 193, 199, 200, 201, 202, 205, 206, 209, 212, 213, 238, 259], "21": [6, 10, 35, 40, 49, 52, 54, 62, 63, 71, 85, 89, 91, 92, 124, 179, 184, 186, 187, 188, 190, 192, 193, 199, 209, 211, 213, 214, 269], "22": [6, 11, 40, 49, 52, 53, 54, 57, 85, 89, 92, 93, 124, 187, 192, 205, 206, 211, 213], "23": [6, 29, 40, 41, 49, 52, 55, 57, 63, 65, 85, 89, 92, 124, 184, 189, 192, 199, 206, 231], "24": [6, 23, 29, 37, 41, 42, 49, 52, 54, 57, 63, 71, 76, 85, 89, 92, 93, 96, 98, 156, 166, 178, 184, 186, 188, 189, 190, 192, 195, 200, 206, 209, 213, 228, 231, 247, 259, 265], "25": [6, 11, 40, 41, 50, 52, 54, 57, 59, 62, 64, 81, 85, 88, 89, 92, 93, 98, 108, 172, 178, 186, 188, 189, 192, 193, 199, 200, 202, 206, 208, 209, 210, 213, 225], "26": [6, 38, 49, 50, 52, 61, 85, 89, 92, 93, 189, 206, 213], "27": [6, 31, 32, 40, 44, 54, 59, 85, 89, 92, 93, 98, 100, 186, 211], "28": [6, 31, 40, 48, 52, 53, 57, 85, 89, 113, 202, 206, 209, 264], "29": [6, 23, 38, 40, 41, 49, 50, 52, 54, 55, 62, 63, 85, 89, 98, 148, 183, 201, 213], "assumpt": [6, 11, 15, 17, 18, 24, 25, 27, 28, 30, 31, 40, 41, 43, 48, 51, 53, 55, 56, 76, 79, 80, 85, 86, 98, 102, 126, 166, 171, 182, 193, 201, 202, 205, 209, 211, 212, 218, 226, 231, 248, 249, 269], "parenthes": [6, 11, 49, 91, 102, 147, 148, 177, 193, 217, 234], "type": [6, 8, 10, 11, 13, 16, 17, 25, 26, 29, 40, 41, 45, 48, 49, 50, 51, 52, 53, 55, 56, 59, 60, 61, 62, 63, 64, 67, 74, 76, 77, 78, 79, 80, 81, 82, 85, 89, 90, 91, 92, 93, 96, 98, 102, 106, 111, 126, 131, 145, 153, 154, 155, 157, 169, 172, 173, 175, 177, 179, 180, 183, 184, 187, 188, 189, 190, 191, 193, 194, 195, 201, 202, 203, 205, 206, 207, 208, 211, 217, 218, 219, 222, 224, 225, 226, 231, 232, 234, 241, 244, 247, 250, 255, 259, 261, 263, 264, 265, 268, 269, 270], "enclos": [6, 59, 60, 65, 88, 99, 193, 203, 232], "colon": [6, 49], "preced": [6, 7, 11, 32, 41, 49, 50, 53, 54, 139, 205, 232], "space": [6, 11, 29, 30, 31, 49, 50, 51, 58, 59, 60, 62, 64, 65, 78, 85, 91, 92, 100, 106, 107, 108, 128, 130, 133, 143, 146, 148, 154, 156, 163, 169, 172, 174, 177, 178, 179, 180, 188, 204, 212, 213, 224, 228, 238, 239, 241, 242, 243, 244, 246, 247, 261, 264], "omit": [6, 10, 16, 31, 41, 48, 49, 50, 74, 76, 79, 85, 161, 193, 194, 201, 203, 211, 217, 226, 231, 259], "absent": [6, 33], "specifi": [6, 7, 10, 16, 30, 31, 32, 44, 48, 49, 50, 51, 52, 55, 57, 58, 62, 65, 74, 76, 78, 79, 80, 82, 85, 89, 91, 92, 93, 98, 103, 106, 110, 111, 113, 114, 115, 117, 120, 121, 122, 123, 124, 126, 127, 143, 148, 153, 154, 156, 157, 162, 168, 169, 171, 172, 174, 176, 177, 180, 181, 182, 183, 184, 186, 188, 189, 190, 193, 195, 196, 199, 200, 201, 203, 205, 209, 210, 211, 212, 213, 214, 218, 219, 220, 224, 225, 226, 231, 232, 238, 239, 240, 243, 246, 255, 265], "displai": [6, 7, 11, 16, 17, 49, 50, 53, 74, 78, 92, 93, 96, 130, 163, 169, 172, 173, 179, 183, 184, 193, 201, 217, 224], "signatur": [6, 25, 26, 41, 49, 85, 226, 227, 231, 232], "brace": [6, 54, 111, 193], "appear": [6, 7, 11, 30, 31, 33, 38, 40, 49, 50, 54, 55, 58, 59, 62, 65, 68, 72, 74, 76, 80, 85, 89, 91, 111, 114, 143, 159, 161, 164, 179, 181, 183, 186, 188, 189, 193, 202, 205, 209, 210, 211, 213, 217, 219, 224, 231, 232, 238, 242], "shape": [6, 10, 31, 65, 80, 82, 85, 87, 88, 96, 98, 110, 111, 169, 179, 180, 182, 193, 196, 203, 213, 214, 215, 217, 218, 219, 232, 268], "combin": [6, 10, 11, 30, 49, 53, 54, 57, 69, 76, 78, 79, 80, 89, 93, 98, 110, 120, 127, 138, 145, 153, 154, 156, 157, 158, 162, 164, 165, 180, 181, 183, 184, 186, 188, 189, 193, 194, 202, 203, 205, 206, 209, 211, 213, 214, 228, 231, 258, 261, 264], "incorrectli": [6, 10, 58, 59, 85, 181], "opt_cs": 6, "canon": [6, 16, 31, 33, 38, 40, 41, 45, 49, 50, 51, 55, 65, 74, 79, 85, 89, 91, 106, 136, 140, 159, 161, 164, 166, 186, 194, 201, 202, 205, 211, 213, 219, 231, 269], "find": [6, 11, 14, 15, 19, 23, 26, 29, 31, 32, 40, 43, 44, 45, 48, 49, 53, 55, 57, 59, 61, 62, 63, 66, 71, 74, 76, 78, 85, 89, 91, 104, 112, 118, 124, 126, 128, 144, 151, 153, 154, 155, 159, 162, 164, 176, 179, 180, 181, 182, 183, 184, 185, 186, 190, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 219, 228, 231, 232, 234, 238, 247, 259, 261, 263, 265, 270], "optim": [6, 31, 33, 40, 53, 89, 102, 126, 139, 143, 189, 193, 194, 202, 205, 213, 225], "mul": [6, 10, 11, 13, 23, 74, 76, 80, 89, 139, 143, 153, 154, 182, 183, 184, 188, 189, 193, 194, 195, 202, 205, 209, 210, 211, 212, 217, 249, 264], "pow": [6, 10, 11, 23, 28, 31, 50, 55, 74, 80, 89, 158, 182, 183, 184, 189, 193, 195, 202, 205, 211, 212, 264, 268], "neg": [6, 11, 16, 17, 26, 28, 31, 32, 44, 48, 49, 54, 55, 57, 59, 61, 62, 65, 74, 76, 78, 79, 80, 85, 88, 89, 92, 93, 95, 96, 98, 159, 169, 181, 182, 184, 186, 188, 189, 190, 193, 199, 201, 202, 203, 205, 206, 209, 211, 212, 213], "coeffici": [6, 14, 16, 26, 29, 31, 48, 49, 51, 53, 54, 57, 62, 67, 68, 71, 72, 74, 78, 79, 82, 85, 86, 89, 99, 106, 111, 132, 146, 156, 164, 178, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 195, 196, 199, 200, 203, 205, 206, 208, 209, 210, 211, 212, 213, 219, 225, 241, 244, 264, 269], "none": [6, 7, 10, 16, 17, 23, 24, 25, 26, 27, 29, 30, 31, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 76, 77, 79, 80, 82, 85, 86, 89, 90, 91, 92, 98, 103, 104, 105, 106, 107, 110, 111, 128, 130, 132, 133, 139, 144, 149, 154, 156, 159, 161, 165, 166, 167, 169, 171, 172, 173, 177, 178, 179, 180, 182, 183, 184, 186, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 224, 225, 226, 227, 231, 232, 234, 237, 238, 240, 265, 269, 270], "process": [6, 7, 10, 11, 16, 28, 31, 40, 41, 47, 49, 50, 55, 57, 65, 74, 76, 85, 89, 98, 107, 111, 113, 118, 121, 123, 126, 179, 180, 186, 193, 194, 201, 205, 209, 211, 224, 228, 269], "concern": [6, 16, 29, 32, 48, 53, 89, 174, 179, 181, 182, 183, 192, 193, 194, 205, 206, 211, 225, 226, 228, 234], "item": [6, 7, 11, 31, 38, 39, 41, 49, 54, 60, 66, 80, 85, 89, 106, 179, 183, 186, 189, 193, 201, 209, 210, 213, 224, 225, 228, 231, 232, 269], "fragment": [6, 50], "desir": [6, 10, 11, 14, 22, 40, 41, 49, 50, 52, 53, 54, 55, 59, 63, 65, 79, 80, 85, 88, 89, 90, 106, 107, 108, 110, 120, 123, 144, 169, 176, 177, 182, 184, 186, 188, 189, 190, 193, 194, 196, 201, 205, 209, 211, 212, 225, 227, 228, 231, 244, 258], "span": [6, 10, 78, 85, 92, 93, 188, 193, 229, 265], "subsequ": [6, 11, 49, 55, 169, 184, 186, 189, 228, 231, 241, 244], "indent": [6, 11, 234], "embed": [6, 7, 29, 41, 49, 77, 188], "hyperlink": 6, "classnam": 6, "erf": [6, 57, 74, 76, 193, 203, 213], "gauss": [6, 57, 76, 85, 128, 181, 188, 191, 211, 212], "erfc": [6, 57, 74, 193, 213], "complementari": [6, 57, 98], "erfi": [6, 57, 74, 193], "erf2": [6, 57, 193], "erfinv": [6, 57, 193, 213], "invers": [6, 23, 40, 41, 49, 50, 51, 56, 57, 75, 76, 82, 85, 89, 106, 148, 152, 153, 156, 161, 164, 180, 181, 182, 184, 186, 189, 190, 193, 195, 203, 205, 209, 211, 212, 213, 231, 265, 269], "erfcinv": [6, 57, 193], "erf2inv": [6, 57, 193], "besselj": [6, 57, 71, 193, 205, 209, 263], "besselbas": [6, 57], "bessel": [6, 7, 55, 56, 67, 76, 189, 205, 209, 213, 263], "kind": [6, 7, 10, 15, 16, 17, 30, 31, 51, 54, 57, 69, 76, 80, 92, 106, 111, 122, 174, 181, 183, 184, 189, 194, 195, 201, 209, 210, 213, 231, 244, 246, 249, 259, 269], "bess": [6, 57, 193, 205, 209, 213], "besselk": [6, 57, 193, 213], "cite": [6, 18], "citat": [6, 48, 187], "meant": [6, 7, 10, 11, 16, 31, 49, 57, 62, 76, 89, 111, 126, 179, 184, 201, 205, 210, 242, 264], "augment": [6, 31, 85, 106, 121, 122, 126, 191, 211, 212, 229, 232, 270], "freeli": [6, 22, 83, 180], "wikipedia": [6, 16, 23, 25, 26, 27, 29, 30, 31, 37, 38, 40, 41, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 76, 78, 79, 80, 82, 85, 89, 96, 98, 101, 128, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 147, 148, 157, 159, 162, 169, 171, 175, 189, 196, 200, 201, 202, 209, 212, 213, 226, 231, 238, 239, 243, 245, 247, 263, 265, 267], "wolfram": [6, 27, 42, 43, 49, 50, 52, 54, 55, 57, 59, 65, 76, 85, 89, 91, 187, 193, 195, 196, 198, 201, 206, 213, 231, 265], "mathworld": [6, 27, 42, 43, 49, 50, 52, 54, 55, 57, 59, 65, 76, 85, 89, 187, 196, 201, 206, 213, 231], "nist": [6, 54, 55, 57, 164], "digit": [6, 11, 31, 49, 50, 52, 53, 59, 76, 79, 89, 120, 169, 183, 189, 200, 205, 231, 258], "dlmf": [6, 54, 55, 57], "suffer": 6, "rot": [6, 65, 156], "publish": [6, 74, 203], "identifi": [6, 10, 16, 17, 29, 42, 49, 52, 53, 76, 85, 121, 147, 148, 180, 183, 184, 194, 202, 205, 209, 210, 211, 212, 213, 232, 235], "clickabl": 6, "kozen89": [6, 186, 187], "kozen": [6, 187], "landau": [6, 187, 259], "polynomi": [6, 7, 14, 16, 19, 27, 40, 48, 49, 50, 53, 54, 56, 67, 68, 69, 70, 72, 76, 79, 80, 82, 85, 89, 93, 98, 124, 126, 180, 182, 187, 191, 195, 200, 202, 203, 205, 206, 207, 208, 209, 212, 224, 248, 255, 260, 265, 270], "decomposit": [6, 40, 47, 81, 82, 85, 182, 184, 185, 186, 187, 195, 269], "1989": [6, 187, 211], "pp": [6, 40, 41, 47, 48, 49, 50, 54, 55, 76, 80, 85, 114, 123, 178, 181, 186, 187, 209, 210, 213], "445": [6, 187], "456": [6, 49, 187], "abramowitz": [6, 57], "milton": [6, 57], "stegun": [6, 57], "iren": [6, 57], "chapter": [6, 40, 57, 89, 111, 187], "formula": [6, 14, 29, 43, 48, 49, 53, 54, 57, 62, 75, 79, 85, 89, 178, 180, 186, 189, 193, 195, 199, 202, 205, 206, 209, 263, 269], "tabl": [6, 16, 32, 40, 49, 54, 57, 70, 75, 76, 85, 89, 105, 126, 178, 188, 215, 251], "ed": [6, 41, 57, 85, 187, 211, 213], "1965": [6, 57, 80], "luke": [6, 57, 74, 203], "l": [6, 10, 11, 29, 30, 31, 32, 38, 40, 41, 48, 50, 57, 60, 61, 62, 63, 64, 66, 67, 72, 74, 76, 78, 81, 82, 85, 89, 92, 93, 98, 100, 105, 106, 108, 110, 111, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 131, 157, 160, 161, 162, 164, 176, 177, 178, 180, 182, 184, 186, 187, 193, 195, 196, 202, 203, 206, 209, 211, 213, 217, 218, 219, 220, 224, 226, 231, 247, 269], "Their": [6, 49, 57, 74, 179, 183, 186, 203], "approxim": [6, 11, 12, 15, 29, 40, 48, 49, 50, 53, 57, 59, 65, 74, 76, 85, 89, 93, 95, 128, 162, 179, 183, 184, 189, 196, 200, 203, 213, 250, 259, 263], "1969": [6, 50, 57, 74, 187, 203], "en": [6, 7, 16, 23, 25, 26, 27, 29, 30, 31, 37, 38, 40, 41, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 76, 77, 78, 79, 80, 82, 85, 89, 96, 98, 101, 128, 130, 131, 132, 134, 135, 136, 140, 141, 142, 145, 147, 148, 157, 159, 169, 171, 175, 189, 190, 196, 200, 201, 202, 209, 212, 213, 226, 231, 232, 238, 239, 243, 245, 247, 265], "bessel_funct": [6, 57], "typefunct": [6, 57], "gamma": [6, 7, 11, 48, 49, 51, 53, 54, 56, 74, 76, 101, 126, 156, 177, 178, 193, 203, 205, 209, 213, 254, 269], "infti": [6, 16, 27, 48, 49, 50, 54, 55, 57, 74, 76, 180, 189, 196, 200, 203, 209, 212, 213, 259, 263, 269], "mathrm": [6, 21, 39, 48, 49, 50, 57, 74, 76, 85, 184, 186, 193, 201, 203, 209, 212, 213, 256, 259, 263], "factori": [6, 14, 48, 49, 53, 56, 57, 85, 89, 91, 178, 184, 186, 188, 189, 193, 195, 205, 211, 213, 226, 227, 231, 232, 269], "z": [6, 10, 11, 16, 27, 28, 31, 32, 40, 41, 48, 49, 50, 51, 52, 54, 55, 57, 61, 62, 63, 64, 65, 74, 76, 79, 80, 82, 85, 91, 92, 93, 100, 103, 104, 105, 108, 111, 113, 114, 115, 117, 118, 119, 123, 124, 126, 127, 128, 137, 139, 143, 153, 154, 156, 160, 164, 168, 169, 170, 171, 172, 174, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 192, 193, 194, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 217, 218, 219, 225, 226, 232, 238, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 268, 269, 270], "whole": [6, 10, 16, 49, 51, 57, 76, 93, 100, 179, 180, 188, 189, 193, 196, 201, 203, 209, 212, 231], "complex": [6, 10, 11, 13, 16, 23, 26, 28, 29, 31, 40, 49, 50, 52, 53, 54, 56, 57, 61, 71, 74, 80, 81, 85, 89, 90, 91, 96, 98, 102, 111, 126, 128, 132, 142, 145, 147, 148, 159, 168, 169, 177, 181, 182, 184, 185, 188, 189, 193, 194, 198, 203, 205, 209, 211, 212, 213, 226, 234, 269, 270], "plane": [6, 23, 49, 57, 59, 61, 62, 64, 65, 75, 76, 96, 113, 131, 132, 176, 177, 201, 212, 247, 269], "pole": [6, 57, 74, 97, 98, 132, 200, 203, 209], "pi": [6, 10, 11, 13, 16, 22, 23, 24, 26, 27, 28, 29, 31, 41, 48, 51, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 68, 74, 76, 85, 89, 100, 113, 126, 128, 130, 131, 132, 133, 135, 143, 154, 156, 157, 160, 162, 169, 178, 179, 181, 183, 184, 189, 193, 196, 200, 201, 202, 203, 205, 208, 209, 211, 212, 213, 231, 238, 240, 247, 258, 263, 269], "oo": [6, 16, 17, 27, 29, 48, 49, 53, 54, 55, 56, 57, 62, 74, 76, 79, 85, 98, 100, 145, 157, 160, 184, 186, 189, 198, 199, 200, 201, 205, 208, 209, 211, 212, 213, 218, 231, 234, 259, 263], "known": [6, 16, 17, 26, 30, 31, 32, 38, 40, 41, 49, 50, 53, 54, 56, 57, 59, 62, 67, 74, 76, 77, 86, 89, 96, 98, 99, 101, 103, 108, 123, 162, 169, 176, 182, 183, 184, 188, 189, 193, 196, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 213, 231, 232, 238, 244, 246, 269], "sqrt": [6, 10, 16, 23, 27, 28, 29, 31, 49, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 72, 73, 74, 76, 77, 80, 81, 85, 89, 91, 92, 98, 100, 113, 128, 130, 132, 133, 138, 143, 153, 154, 156, 157, 159, 160, 162, 169, 174, 177, 178, 181, 183, 184, 186, 188, 189, 192, 193, 194, 199, 202, 203, 205, 206, 208, 209, 211, 212, 213, 231, 232, 234, 238, 246, 247, 258, 263, 268, 269, 270], "obei": [6, 57, 178, 193, 203], "mirror": [6, 57, 76, 132], "symmetri": [6, 10, 37, 42, 45, 57, 80, 138, 178, 209, 217, 219, 258, 269], "conjug": [6, 27, 38, 39, 40, 49, 56, 57, 80, 85, 100, 128, 142, 145, 159, 189, 193, 209, 219], "differenti": [6, 7, 10, 19, 29, 49, 54, 55, 57, 66, 67, 69, 72, 98, 105, 106, 110, 111, 113, 114, 117, 120, 121, 122, 123, 126, 127, 148, 154, 168, 169, 171, 172, 174, 177, 180, 186, 190, 192, 193, 198, 203, 205, 207, 209, 210, 238, 244, 245, 248, 255, 259, 260, 263], "polygamma": [6, 54, 57, 193], "seri": [6, 14, 29, 30, 31, 32, 39, 40, 48, 49, 51, 53, 54, 55, 57, 69, 72, 73, 74, 78, 89, 95, 98, 111, 117, 119, 126, 172, 176, 185, 186, 193, 198, 199, 203, 209, 212, 249, 255, 260], "expans": [6, 14, 31, 49, 51, 54, 55, 57, 69, 76, 85, 89, 123, 138, 140, 189, 190, 195, 196, 197, 202, 204, 209, 211, 212, 249, 260, 269], "eulergamma": [6, 53, 54, 57], "40": [6, 31, 52, 54, 57, 59, 66, 80, 85, 89, 92, 179, 190, 192, 193, 213, 234, 258], "288037795340032417959588909060233922890": [6, 57], "49801566811835604271": [6, 57], "15494982830181068512": [6, 57], "lowergamma": [6, 57, 213], "lower": [6, 10, 16, 26, 29, 31, 40, 41, 48, 49, 51, 57, 58, 60, 65, 66, 76, 80, 81, 82, 85, 96, 101, 105, 159, 172, 178, 180, 182, 184, 186, 189, 193, 202, 203, 205, 209, 218, 219, 228, 238, 259, 267], "uppergamma": [6, 54, 57, 193, 213], "upper": [6, 26, 48, 50, 53, 57, 58, 65, 66, 80, 81, 82, 85, 88, 89, 96, 105, 152, 159, 178, 182, 184, 186, 188, 189, 193, 203, 211, 218, 238], "loggamma": [6, 7, 57, 193], "log": [6, 7, 11, 21, 23, 29, 31, 40, 48, 49, 53, 54, 56, 57, 67, 71, 73, 74, 76, 80, 85, 89, 179, 184, 193, 195, 200, 203, 205, 209, 212, 213, 220, 259, 269, 270], "digamma": [6, 54, 57, 193], "trigamma": [6, 57, 193], "beta": [6, 11, 31, 40, 49, 56, 76, 156, 169, 178, 188, 190, 193, 209, 213], "euler": [6, 29, 30, 48, 49, 50, 53, 56, 57, 65, 71, 77, 89, 156, 169, 173, 177, 178, 193, 209, 213, 238, 239], "gamma_funct": [6, 57], "gov": [6, 54, 55, 57], "gammafunct": [6, 57], "gammabetaerf": [6, 54, 57], "unusu": [6, 16, 113, 224], "inlin": [6, 77, 173, 193, 226], "pretti": [6, 30, 31, 57, 76, 77, 85, 89, 93, 98, 113, 173, 203, 205, 212, 246, 256, 260, 263, 265, 269], "As": [6, 10, 13, 14, 17, 22, 31, 40, 41, 49, 50, 53, 54, 55, 57, 73, 74, 79, 85, 88, 89, 91, 110, 111, 113, 114, 123, 124, 159, 164, 176, 180, 181, 183, 184, 186, 190, 192, 193, 200, 201, 203, 209, 212, 213, 231, 232, 241, 242, 258, 259, 261, 263, 264, 265, 268, 269], "literatur": [6, 74, 163, 185], "fact": [6, 10, 16, 17, 26, 27, 49, 54, 57, 67, 74, 89, 113, 123, 164, 180, 181, 183, 186, 188, 190, 192, 203, 205, 209, 212, 224, 232, 246, 258, 261, 262, 263, 264, 269], "eval": [6, 10, 16, 25, 26, 31, 49, 55, 56, 57, 145, 159, 184, 189, 193, 226, 258], "illumin": 6, "tone": 6, "narr": [6, 8, 262], "excerpt": 6, "geometri": [6, 58, 59, 60, 62, 63, 64, 65, 66, 76, 120, 132, 185, 240, 247, 248, 255, 263], "autofunct": 6, "intersect": [6, 16, 29, 30, 40, 59, 60, 62, 63, 64, 65, 66, 132, 180, 189, 193, 199, 200, 212, 255], "convex_hul": [6, 61, 65, 66], "are_similar": [6, 60, 61, 66], "autoclass": 6, "linearent": [6, 59, 62, 63, 64, 65], "rai": [6, 59, 61, 62, 63, 65, 66, 128, 132], "segment": [6, 10, 40, 59, 61, 62, 63, 64, 65, 66, 176, 179, 209, 224], "curv": [6, 30, 51, 61, 76, 89, 92, 128, 179, 180, 209, 238, 247, 259], "ellips": [6, 60, 61, 65, 131, 179, 193, 268], "circl": [6, 49, 59, 60, 61, 63, 64, 65, 66, 74, 132, 139, 179, 212, 238, 240, 247], "polygon": [6, 59, 60, 61, 66, 75, 179, 247], "regularpolygon": [6, 60, 61, 65, 179], "triangl": [6, 30, 54, 60, 61, 65, 66, 76, 80, 89, 178, 179, 240, 247], "rel": [6, 7, 10, 30, 31, 39, 40, 41, 42, 46, 47, 48, 50, 53, 60, 74, 89, 103, 105, 108, 115, 123, 124, 131, 158, 169, 172, 176, 177, 180, 182, 183, 186, 188, 201, 203, 208, 211, 213, 224, 231, 241, 242, 246, 263], "cumbersom": 6, "viewcod": 6, "aco": [6, 11, 23, 56, 62, 65, 113, 126, 132, 169, 193, 209, 238, 269], "obj": [6, 10, 16, 49, 184, 189, 193, 227], "qualifi": [6, 235], "elementari": [6, 16, 17, 40, 49, 50, 53, 56, 57, 71, 74, 76, 80, 85, 89, 124, 152, 155, 185, 189, 190, 197, 231, 232, 241, 251], "trigonometr": [6, 49, 56, 76, 190, 196, 204, 208, 209, 212, 232, 249, 260, 270], "trail": [6, 41, 89, 184, 186, 189, 229, 234], "pair": [6, 11, 14, 30, 31, 40, 41, 49, 50, 55, 61, 66, 73, 85, 89, 111, 114, 149, 151, 153, 154, 159, 168, 180, 183, 186, 188, 189, 194, 199, 200, 202, 203, 205, 206, 209, 212, 213, 226, 231, 241, 258, 265], "www": [6, 7, 23, 29, 40, 41, 50, 52, 54, 57, 71, 76, 77, 89, 96, 173, 187, 192, 193, 202, 205, 206, 209, 213, 231, 265, 268], "master": [6, 7, 21, 76, 224], "usag": [6, 7, 11, 16, 17, 22, 25, 51, 55, 76, 120, 156, 174, 179, 180, 185, 186, 193, 201, 203, 206, 209, 210, 214, 228, 232, 233, 244, 245, 255, 264], "expect": [6, 7, 11, 16, 30, 32, 34, 49, 55, 57, 61, 79, 89, 90, 98, 111, 153, 183, 186, 188, 190, 191, 200, 205, 208, 212, 213, 222, 224, 225, 228, 231, 232, 263, 264], "vector": [6, 14, 23, 27, 31, 33, 36, 40, 41, 51, 57, 62, 63, 64, 71, 72, 78, 80, 85, 90, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 117, 118, 119, 121, 122, 123, 124, 126, 127, 131, 132, 145, 154, 156, 161, 164, 171, 172, 173, 180, 185, 188, 193, 203, 209, 211, 213, 218, 219, 224, 225, 239, 243, 248, 252, 254, 265], "dynamicsymbol": [6, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 126, 127, 169, 172, 173, 174, 175, 176, 177], "custom": [6, 10, 31, 41, 49, 53, 77, 80, 85, 104, 105, 168, 173, 174, 195, 199, 206, 213, 219, 225, 232, 238, 246, 255, 263, 265], "sine": [6, 49, 55, 57, 74, 76, 133, 190, 196, 202, 258], "expand": [6, 10, 11, 14, 16, 31, 51, 53, 54, 55, 57, 74, 76, 80, 98, 111, 113, 126, 140, 148, 151, 158, 159, 181, 183, 185, 186, 188, 189, 190, 196, 200, 202, 203, 205, 209, 212, 213, 217, 225, 232, 243, 249, 258, 263], "troubleshoot": [6, 123], "spell": [6, 10, 209], "try": [6, 7, 8, 10, 11, 16, 17, 41, 48, 49, 53, 57, 59, 64, 74, 76, 79, 82, 85, 88, 89, 149, 151, 158, 159, 179, 183, 188, 193, 198, 200, 201, 202, 203, 205, 206, 209, 211, 232, 234, 258, 261, 264, 265, 269], "referencefram": [6, 103, 104, 106, 108, 111, 113, 114, 117, 118, 119, 121, 122, 123, 124, 126, 127, 170, 171, 172, 173, 174, 175, 176], "though": [6, 11, 16, 17, 22, 32, 49, 50, 51, 61, 65, 74, 76, 80, 85, 89, 102, 106, 113, 121, 123, 154, 168, 169, 176, 177, 181, 183, 184, 189, 190, 202, 203, 205, 209, 210, 211, 212, 224, 244, 259, 264, 269], "frame": [6, 102, 103, 104, 105, 106, 108, 110, 111, 113, 114, 115, 117, 119, 121, 122, 123, 124, 126, 127, 168, 169, 170, 171, 172, 174, 175, 176, 228, 238, 244], "notimplementederror": [6, 29, 48, 59, 62, 66, 76, 85, 96, 182, 188, 192, 201, 208, 209, 210, 211, 212], "outsid": [6, 27, 40, 49, 57, 60, 65, 80, 89, 102, 164, 177, 189, 205, 259, 264], "plot": [6, 21, 58, 59, 61, 62, 65, 72, 77, 85, 92, 93, 97, 126, 143, 146, 152, 196, 248, 254, 255, 263, 268], "ahead": [6, 89], "submit": 6, "sub": [6, 10, 11, 16, 17, 31, 48, 55, 57, 58, 59, 60, 61, 62, 63, 65, 76, 79, 80, 82, 85, 89, 91, 92, 93, 98, 102, 104, 111, 113, 114, 117, 118, 123, 126, 156, 157, 162, 169, 178, 180, 182, 183, 184, 189, 193, 200, 201, 205, 206, 209, 210, 211, 213, 224, 225, 227, 249, 258, 259, 261], "common": [6, 7, 10, 11, 16, 17, 19, 26, 29, 31, 40, 41, 49, 50, 55, 60, 63, 66, 76, 82, 84, 85, 89, 90, 96, 98, 103, 105, 107, 120, 124, 126, 131, 164, 169, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 195, 201, 202, 203, 204, 206, 209, 213, 225, 226, 229, 231, 232, 244, 246, 249, 252, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269], "matrixcommon": [6, 82, 84, 85], "dyadic": [6, 52, 103, 108, 111, 113, 117, 119, 120, 126, 171, 173, 175, 240, 245], "shorten": 6, "highli": [7, 49, 53, 95, 183, 189, 198, 226], "aspect": [7, 16, 85, 183], "teach": [7, 41, 50, 213], "conduct": 7, "accord": [7, 11, 31, 37, 40, 41, 45, 48, 49, 50, 57, 79, 82, 85, 89, 91, 112, 120, 153, 159, 179, 184, 186, 188, 190, 206, 211, 212, 219, 224, 226, 231, 246], "survei": 7, "commonli": [7, 41, 54, 57, 76, 85, 102, 176, 181, 209, 244], "encount": [7, 11, 14, 49, 76, 85, 151, 181, 186, 189, 211, 212, 226, 238, 265], "problem": [7, 10, 11, 14, 16, 17, 19, 33, 43, 45, 49, 50, 61, 74, 76, 80, 85, 89, 92, 94, 99, 102, 111, 114, 115, 118, 120, 121, 168, 176, 177, 180, 181, 185, 186, 203, 205, 206, 209, 212, 228, 231, 245, 254, 259, 261, 265], "offer": [7, 30, 31, 40, 49, 90, 102, 126, 168, 177, 183, 188, 228, 245], "bring": [7, 74, 106, 118, 182, 196, 205, 265], "greater": [7, 27, 41, 49, 55, 57, 74, 78, 89, 98, 186, 189, 192, 200, 205, 209, 211, 213, 228, 231, 244, 259], "clariti": [7, 40, 172], "mission": [7, 30, 83], "ca": [7, 20, 21, 50, 57, 76, 192, 193, 231], "dedic": [7, 31, 185, 226, 242, 244], "essenti": [7, 33, 44, 49, 53, 55, 56, 57, 74, 108, 113, 174, 175, 177, 180, 181, 184, 188, 200, 203, 241, 244, 245, 246], "element": [7, 10, 11, 13, 16, 23, 26, 30, 31, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 65, 72, 74, 76, 78, 79, 80, 81, 82, 85, 88, 89, 90, 92, 93, 98, 99, 108, 126, 128, 131, 145, 156, 164, 172, 175, 177, 179, 180, 181, 182, 184, 185, 186, 189, 191, 192, 193, 199, 200, 201, 203, 205, 206, 209, 211, 212, 213, 214, 218, 225, 227, 228, 231, 232, 233, 240, 259, 264, 265, 268, 269], "deviat": [7, 132, 213], "advanc": [7, 13, 15, 25, 40, 49, 53, 54, 85, 86, 120, 124, 175, 179, 182, 183, 185, 187, 188, 195, 202, 209, 224, 225, 226, 231, 258, 260, 262, 266, 267, 268, 269], "docutil": 7, "sourceforg": [7, 30], "net": [7, 30, 65, 187, 209, 213, 231], "ext": [7, 180, 184], "autodoc": 7, "associ": [7, 10, 16, 30, 32, 47, 49, 50, 56, 57, 71, 72, 74, 78, 124, 126, 149, 157, 168, 169, 176, 177, 181, 182, 183, 184, 186, 188, 193, 201, 203, 206, 219, 233], "graphic": [7, 96], "info": [7, 11, 98, 193, 209, 210], "bear": [7, 16], "linkcod": 7, "readthedoc": [7, 77, 232], "subset": [7, 14, 16, 29, 30, 33, 36, 40, 41, 47, 54, 55, 61, 72, 74, 76, 78, 89, 180, 182, 186, 188, 193, 201, 231], "modifi": [7, 11, 30, 31, 40, 49, 55, 57, 89, 91, 122, 131, 179, 186, 188, 189, 190, 193, 205, 211, 212, 213, 224, 227, 228, 231, 232, 258, 263, 265], "sphinx_math_dollar": 7, "delimit": [7, 49, 193], "dollar": [7, 263], "2": [7, 11, 12, 13, 14, 16, 17, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 96, 98, 99, 100, 101, 102, 103, 104, 106, 108, 110, 113, 114, 115, 117, 118, 119, 121, 122, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 148, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 215, 218, 219, 220, 222, 224, 225, 226, 227, 228, 231, 232, 234, 238, 239, 240, 241, 242, 243, 244, 246, 247, 258, 259, 261, 263, 264, 265, 268, 269, 270], "sphinxext": 7, "plot_direct": 7, "figur": [7, 49, 50, 59, 60, 62, 64, 65, 76, 93, 111, 154, 176, 177, 178, 179, 190, 193, 247, 269], "devel": [7, 178], "supersed": [7, 111, 126], "pep": [7, 31, 49, 79], "257": [7, 89, 211], "our": [7, 9, 10, 14, 21, 31, 49, 57, 74, 85, 89, 164, 176, 177, 179, 180, 182, 188, 189, 190, 193, 200, 203, 206, 209, 212, 224, 258, 261, 262, 264, 269], "introduct": [7, 10, 12, 15, 36, 40, 41, 120, 175, 184, 185, 186, 187, 193, 206, 209, 212, 245, 249, 250, 251, 255, 262, 268], "four": [7, 31, 41, 49, 53, 57, 79, 82, 89, 99, 124, 132, 169, 179, 180, 186, 189, 193, 201, 206, 209, 211, 213, 214, 238, 239, 242], "locat": [7, 10, 41, 49, 63, 85, 89, 92, 93, 105, 114, 123, 127, 172, 174, 188, 189, 193, 205, 213, 227, 236, 238, 241, 243, 245, 246], "websit": [7, 267], "advertis": 7, "serv": [7, 14, 25, 26, 31, 46, 49, 56, 72, 188, 209, 210, 234, 262], "initi": [7, 16, 25, 40, 44, 49, 50, 51, 54, 56, 57, 65, 67, 68, 71, 72, 73, 74, 77, 89, 91, 93, 96, 98, 103, 106, 108, 110, 111, 113, 114, 119, 121, 122, 123, 126, 127, 131, 139, 148, 170, 171, 173, 177, 178, 186, 188, 189, 193, 199, 203, 205, 209, 211, 212, 218, 226, 233, 234, 238, 239, 240, 241, 242], "obtain": [7, 11, 14, 25, 26, 30, 32, 33, 40, 41, 42, 45, 49, 50, 52, 53, 54, 55, 57, 59, 60, 62, 63, 65, 71, 74, 76, 78, 80, 85, 88, 89, 95, 98, 120, 122, 124, 132, 154, 159, 164, 180, 181, 184, 186, 188, 189, 192, 194, 201, 202, 203, 205, 206, 209, 210, 211, 212, 231, 234, 241, 242], "technic": [7, 10, 12, 20, 30, 49, 126, 145, 180, 209, 226, 231, 244, 261, 264], "place": [7, 8, 10, 11, 16, 20, 30, 41, 42, 49, 50, 55, 65, 81, 85, 88, 89, 91, 98, 126, 127, 187, 188, 193, 194, 200, 202, 205, 209, 228, 231, 257, 258, 265, 269], "site": [7, 89, 227], "upload": [7, 89], "belong": [7, 16, 27, 30, 40, 45, 49, 72, 85, 159, 169, 176, 179, 180, 182, 183, 186, 188, 189, 200, 201, 205, 206, 212, 219], "insid": [7, 10, 11, 40, 41, 46, 49, 59, 60, 65, 92, 102, 104, 114, 123, 158, 159, 164, 173, 177, 189, 193, 201, 203, 206, 211, 212, 213, 215, 217, 228, 264, 265], "spars": [7, 82, 84, 85, 153, 182, 185, 188, 189, 190, 213, 214, 252, 264], "substanti": [7, 90], "edit": [7, 76, 85, 89, 186, 187, 189], "arg": [7, 16, 23, 25, 26, 27, 28, 29, 30, 31, 33, 40, 41, 43, 46, 48, 49, 50, 51, 53, 54, 56, 57, 59, 60, 62, 64, 65, 66, 71, 74, 76, 79, 80, 81, 82, 83, 85, 87, 89, 91, 98, 128, 134, 137, 139, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 169, 173, 177, 179, 182, 184, 186, 188, 189, 190, 193, 195, 196, 199, 200, 201, 202, 205, 209, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 231, 232, 234, 238, 239], "invari": [7, 10, 40, 45, 95, 98, 178, 184, 188, 189, 203, 209], "polici": [7, 8, 10, 227, 229], "5": [7, 11, 12, 16, 19, 23, 25, 26, 27, 29, 31, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 91, 92, 94, 96, 98, 100, 101, 103, 108, 111, 113, 117, 118, 119, 120, 121, 128, 132, 153, 154, 157, 159, 166, 168, 170, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 213, 214, 218, 219, 224, 225, 231, 232, 238, 240, 242, 244, 246, 247, 258, 259, 261, 264, 265, 268, 269], "center": [7, 14, 29, 40, 48, 49, 59, 63, 65, 66, 76, 85, 103, 105, 108, 111, 113, 117, 119, 124, 126, 132, 176, 179, 188, 193, 201, 247], "resid": 7, "standalon": [7, 126], "restructur": 7, "appli": [7, 10, 17, 18, 23, 24, 25, 26, 27, 31, 40, 41, 42, 47, 48, 49, 50, 51, 52, 55, 56, 59, 64, 65, 67, 75, 76, 79, 80, 81, 85, 89, 91, 92, 93, 98, 99, 103, 104, 113, 115, 121, 123, 125, 136, 140, 143, 144, 148, 151, 152, 156, 159, 169, 177, 179, 181, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 199, 200, 201, 202, 204, 205, 209, 210, 211, 212, 213, 214, 217, 224, 227, 231, 238, 239, 242, 265, 268, 269], "surround": [7, 49, 66, 132, 201, 234], "nu": [7, 11, 57, 76, 89, 160, 181, 193, 205, 213, 219, 263], "equat": [7, 11, 14, 18, 29, 31, 45, 48, 49, 51, 55, 57, 59, 62, 63, 67, 71, 72, 73, 74, 77, 80, 85, 92, 98, 100, 102, 105, 106, 107, 110, 111, 113, 114, 115, 117, 119, 120, 125, 126, 127, 128, 132, 163, 168, 172, 173, 176, 177, 178, 179, 180, 185, 186, 187, 188, 191, 192, 193, 199, 203, 205, 207, 208, 210, 218, 238, 242, 243, 247, 259, 260, 263], "strip": [7, 50, 76, 89, 186, 229, 234], "out": [7, 11, 16, 17, 30, 31, 40, 41, 49, 50, 51, 54, 57, 65, 74, 76, 82, 85, 89, 92, 98, 99, 111, 113, 114, 117, 126, 136, 140, 151, 154, 156, 158, 159, 180, 181, 183, 184, 188, 189, 190, 191, 193, 194, 200, 203, 205, 209, 214, 224, 226, 231, 232, 261, 263, 264, 268, 269], "unimport": 7, "bullet": 7, "avoid": [7, 8, 10, 17, 31, 32, 49, 50, 55, 74, 76, 79, 85, 88, 91, 114, 123, 153, 176, 177, 181, 183, 189, 193, 194, 201, 205, 209, 211, 213, 217, 226, 229, 232, 261, 262], "whitespac": [7, 49, 229], "invalid": [7, 11, 49, 50, 91, 113, 183, 186, 201], "dx": [7, 10, 14, 29, 31, 45, 49, 51, 53, 57, 66, 68, 71, 72, 73, 74, 76, 85, 92, 101, 106, 107, 148, 177, 189, 190, 196, 206, 209, 210, 214, 259, 263, 268, 270], "meta": [7, 49, 209, 210], "stackexchang": [7, 59], "5020": 7, "wikibook": [7, 76, 77], "overleaf": 7, "mathematical_express": 7, "verbatim": 7, "_rewrit": 7, "_expand": 7, "difficult": [7, 16, 49, 85, 111, 190, 203, 209, 210, 212, 225, 247, 263, 269], "sentenc": [7, 79], "thumb": [7, 79, 231], "greek": [7, 22, 49, 89, 91, 180, 193], "letter": [7, 11, 22, 42, 49, 50, 89, 159, 193, 231, 259, 261], "\u03b1": [7, 178, 192], "alpha": [7, 11, 40, 49, 57, 76, 78, 131, 135, 138, 156, 172, 176, 177, 178, 184, 186, 188, 189, 192, 193, 205, 209, 213], "logarithm": [7, 11, 23, 29, 31, 49, 50, 55, 56, 74, 76, 85, 89, 184, 186, 190, 193, 203, 205, 212, 213, 260], "italic": 7, "emphasi": [7, 183], "asterisk": 7, "stirl": [7, 41, 56, 231], "fals": [7, 11, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 74, 76, 77, 79, 80, 81, 82, 85, 86, 89, 91, 92, 93, 96, 98, 100, 101, 104, 106, 107, 108, 111, 113, 117, 118, 119, 121, 122, 123, 124, 127, 131, 143, 144, 148, 151, 156, 157, 158, 159, 162, 166, 169, 170, 171, 172, 173, 176, 177, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 218, 219, 222, 224, 225, 226, 227, 231, 232, 234, 238, 240, 261, 264, 265, 268], "permut": [7, 32, 34, 36, 37, 39, 42, 45, 46, 47, 50, 54, 57, 80, 82, 85, 107, 159, 178, 182, 184, 189, 206, 214, 215, 219, 231, 269], "cycl": [7, 10, 31, 37, 40, 41, 47, 49, 52, 54, 80, 89, 133, 201, 231], "partit": [7, 36, 40, 56, 89, 114, 123, 125, 213, 228, 230], "reduc": [7, 11, 17, 24, 26, 28, 32, 45, 49, 50, 52, 54, 55, 57, 64, 65, 74, 76, 85, 89, 98, 99, 123, 141, 159, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 194, 199, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 231, 265], "ge": [7, 16, 54, 55, 57, 74, 80, 85, 89, 178, 181, 186, 203, 231], "consecut": [7, 31, 40, 45, 48, 50, 54, 65, 205, 211], "group": [7, 30, 35, 36, 41, 42, 45, 46, 47, 49, 52, 54, 78, 79, 89, 138, 147, 148, 159, 178, 179, 180, 188, 189, 205, 209, 211, 212, 219, 231], "pairwis": [7, 27, 30, 49, 54, 66, 85, 89, 206, 211], "ital": [7, 193], "last": [7, 8, 10, 11, 13, 14, 16, 17, 24, 25, 26, 30, 31, 32, 39, 40, 41, 45, 48, 49, 50, 53, 59, 76, 79, 80, 81, 82, 83, 85, 87, 88, 89, 91, 98, 110, 131, 164, 178, 179, 180, 181, 183, 184, 186, 189, 192, 193, 200, 201, 206, 209, 211, 212, 213, 214, 219, 222, 224, 225, 226, 227, 229, 231, 232, 234, 259, 261, 264, 265], "talk": [7, 12, 20, 50, 180, 188, 241], "handl": [7, 14, 16, 17, 29, 37, 41, 49, 55, 76, 77, 79, 84, 89, 90, 91, 92, 99, 102, 111, 123, 139, 142, 148, 149, 154, 183, 189, 190, 199, 205, 207, 209, 211, 214, 217, 225, 231, 232, 234, 249, 264, 269], "referenc": [7, 8, 33, 38, 89, 110, 113, 156, 188], "overlin": [7, 16, 57], "normal": [7, 10, 11, 16, 17, 23, 26, 31, 40, 48, 49, 53, 55, 59, 62, 63, 64, 76, 77, 79, 83, 84, 85, 89, 91, 100, 102, 105, 111, 113, 118, 126, 132, 143, 153, 156, 157, 158, 159, 160, 164, 167, 169, 177, 180, 183, 184, 185, 186, 188, 189, 193, 194, 196, 201, 202, 206, 209, 213, 218, 224, 229, 231, 238, 252], "assign": [7, 16, 30, 31, 32, 45, 49, 65, 76, 78, 79, 85, 91, 106, 111, 117, 126, 164, 174, 177, 179, 181, 186, 193, 211, 212, 219, 226, 241, 244, 261], "structur": [7, 10, 13, 16, 28, 30, 31, 37, 40, 41, 47, 49, 74, 76, 79, 80, 85, 92, 93, 110, 120, 157, 159, 179, 180, 183, 186, 188, 189, 190, 205, 207, 209, 211, 212, 213, 217, 218, 226, 228, 231, 232, 261, 269], "suggest": [7, 10, 32, 40, 76, 85, 89, 111, 191, 265], "american": [7, 35, 50], "color": [7, 77, 96, 173, 193, 224, 231, 255, 268], "colour": 7, "quotat": 7, "line_color": [7, 179, 196], "aesthet": [7, 179], "ariti": [7, 179], "term": [7, 10, 11, 14, 16, 31, 40, 49, 50, 51, 53, 54, 55, 57, 68, 72, 73, 74, 76, 79, 80, 85, 89, 93, 96, 98, 104, 106, 113, 114, 117, 120, 121, 123, 124, 138, 143, 155, 156, 159, 161, 164, 169, 171, 174, 176, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 217, 218, 231, 238, 240, 244, 249, 259, 261, 263, 264, 269], "unrestrict": [7, 38, 231], "necklac": [7, 231], "bracelet": [7, 231], "impli": [7, 11, 16, 23, 27, 31, 40, 79, 159, 179, 184, 186, 193, 201, 203, 209, 214, 217, 218, 231, 244], "turn": [7, 10, 16, 31, 49, 55, 57, 64, 74, 83, 118, 121, 174, 180, 188, 190, 193, 200, 201, 203, 205, 206, 209, 224, 231, 246, 261, 263], "sequenc": [7, 11, 29, 31, 33, 36, 39, 40, 41, 45, 47, 48, 49, 50, 52, 54, 57, 59, 62, 63, 64, 65, 66, 69, 73, 79, 80, 82, 85, 88, 89, 126, 132, 158, 159, 184, 187, 189, 193, 195, 197, 200, 202, 203, 205, 206, 209, 210, 212, 219, 222, 225, 226, 231, 233, 234], "revers": [7, 33, 38, 41, 48, 49, 50, 55, 76, 77, 79, 85, 89, 98, 158, 169, 173, 180, 182, 186, 189, 190, 193, 194, 201, 205, 209, 231, 269], "ambigu": [7, 10, 11, 49, 147, 153, 205, 217, 222], "person": 7, "chebyshev": [7, 29, 49, 76, 186, 189], "pafnuti": 7, "lvovich": 7, "tchebychev": 7, "whose": [7, 16, 30, 32, 33, 38, 41, 48, 49, 50, 55, 59, 63, 65, 66, 72, 76, 79, 85, 89, 108, 121, 131, 154, 164, 170, 171, 174, 177, 181, 182, 184, 188, 189, 200, 201, 205, 209, 210, 211, 213, 219, 224, 228, 231, 232, 238, 240, 242, 244], "transliter": 7, "russian": 7, "chebyshevt": [7, 57, 193], "orthogonalpolynomi": 7, "t_n": [7, 54, 57, 76, 186, 242], "tens": 7, "inclus": [7, 48, 152, 180, 199, 200, 201, 212], "pronoun": 7, "gender": 7, "neutral": 7, "he": [7, 54, 74, 186], "she": [7, 212], "extran": [7, 209], "belittl": 7, "obvious": [7, 32, 40, 162, 176, 183, 203], "easili": [7, 10, 16, 20, 21, 49, 50, 72, 74, 85, 89, 90, 121, 157, 176, 189, 192, 193, 198, 205, 206, 209, 211, 212, 225, 263], "straightforward": [7, 40, 50, 85, 203], "unwelcom": 7, "judgement": 7, "phrase": [7, 50], "friendli": [7, 31, 74, 226], "mistak": [7, 11, 40, 232], "goe": [8, 20, 49, 56, 85, 200, 203, 212, 261, 264], "content": [8, 12, 31, 49, 50, 84, 181, 184, 186, 189, 192, 193, 221, 226, 229, 230, 249, 250, 251, 252, 253, 254, 255, 256, 260, 262], "setup": [8, 31, 49, 114, 115, 128, 169, 186, 189, 191, 192, 203, 224, 225, 227, 237, 268], "depend": [8, 10, 11, 16, 21, 29, 31, 32, 40, 41, 48, 49, 50, 51, 54, 55, 57, 61, 66, 73, 74, 76, 77, 78, 85, 89, 90, 91, 96, 100, 103, 106, 107, 110, 111, 113, 114, 120, 121, 131, 132, 133, 148, 157, 159, 161, 164, 173, 174, 179, 181, 184, 185, 186, 188, 189, 190, 193, 194, 199, 203, 205, 206, 209, 210, 211, 212, 213, 224, 225, 226, 227, 231, 232, 244, 246, 247, 261, 263], "document": [8, 10, 15, 25, 26, 27, 40, 45, 49, 50, 55, 56, 57, 61, 71, 74, 75, 77, 82, 85, 90, 93, 102, 106, 120, 121, 122, 124, 126, 134, 148, 154, 168, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 189, 193, 203, 207, 209, 211, 212, 222, 224, 226, 227, 229, 231, 238, 244, 245, 248, 259, 261, 262, 268, 269], "auto": [8, 11, 29, 49, 50, 77, 179, 186, 189, 193, 205, 209, 213], "rebuild": [8, 49, 189, 264], "live": [8, 22, 32, 126, 188, 206], "server": 8, "debug": [8, 31, 49, 76, 113, 148, 224, 225, 234], "incompat": 8, "pick": [9, 16, 50, 54, 123, 153, 155, 269], "ignor": [10, 11, 31, 40, 49, 50, 54, 55, 59, 64, 74, 79, 85, 89, 98, 104, 113, 156, 159, 169, 179, 189, 193, 194, 205, 211, 225, 269], "regex": 10, "categori": [10, 180, 248, 255], "lead": [10, 16, 17, 48, 49, 55, 59, 76, 79, 85, 89, 100, 107, 143, 169, 177, 181, 184, 186, 188, 189, 190, 193, 200, 202, 205, 209, 212, 226, 229, 234, 262, 269], "against": [10, 16, 50, 92, 111, 225], "unrel": [10, 49, 56, 181, 261], "capabl": [10, 16, 29, 31, 49, 53, 61, 74, 89, 92, 93, 120, 126, 179, 190, 193, 212, 262, 263, 269, 270], "w": [10, 11, 31, 33, 39, 48, 49, 50, 51, 52, 55, 57, 74, 76, 79, 85, 86, 105, 108, 118, 124, 125, 128, 133, 144, 148, 157, 172, 174, 175, 178, 179, 181, 182, 186, 187, 188, 189, 190, 194, 200, 201, 203, 205, 206, 209, 210, 212, 213, 224, 232, 234, 244, 270], "pythonwarn": 10, "NOT": [10, 79, 98, 139, 143, 158, 161, 222, 225], "blog": [10, 31, 54, 80, 206, 212], "post": [10, 16, 31, 43, 49, 193, 194, 205, 224, 264], "ned": 10, "batcheld": 10, "pars": [10, 41, 49, 82, 111, 190, 192, 248, 256], "comprehens": [10, 16, 20, 187, 201, 213, 258], "additional_transl": 10, "recogn": [10, 11, 49, 50, 54, 64, 89, 92, 99, 181, 184, 192, 201, 202, 211, 218, 261], "logic": [10, 16, 18, 24, 25, 26, 27, 30, 49, 51, 74, 76, 89, 151, 153, 154, 158, 193, 195, 201, 209, 213, 231, 261, 262, 263, 265], "node": [10, 29, 43, 49, 76, 91, 104, 135, 160, 169, 178, 183, 193, 200, 212, 217, 228, 250, 264, 268], "suppos": [10, 17, 41, 48, 49, 50, 56, 74, 180, 182, 186, 188, 189, 193, 200, 203, 209, 211, 222, 231, 242, 247, 261, 263, 269], "maximum": [10, 11, 29, 31, 32, 40, 41, 49, 55, 76, 85, 89, 92, 113, 156, 164, 179, 184, 186, 189, 193, 200, 201, 205, 206, 209, 212, 213, 228, 231], "multipli": [10, 11, 23, 27, 31, 40, 49, 60, 64, 71, 78, 80, 85, 89, 106, 114, 122, 123, 124, 136, 145, 159, 164, 165, 180, 181, 182, 184, 186, 188, 189, 193, 195, 202, 203, 206, 209, 214, 231, 241, 261, 264], "max": [10, 31, 40, 41, 49, 56, 57, 59, 76, 85, 89, 91, 92, 179, 188, 189, 193, 200, 202, 203, 232], "min": [10, 41, 45, 49, 54, 56, 85, 91, 179, 188, 193, 199, 209], "is_perfect_squar": 10, "ntheori": [10, 27, 40, 49, 50, 186, 189, 206, 231, 253], "primetest": [10, 49, 89], "is_squar": [10, 49, 80, 89], "is_prim": [10, 16, 49, 180], "isprim": [10, 27, 50, 89], "divid": [10, 40, 48, 49, 50, 65, 85, 89, 163, 164, 181, 183, 184, 186, 188, 189, 193, 209, 228, 264], "bottom_up": 10, "interactive_travers": 10, "postorder_travers": [10, 264], "preorder_travers": [10, 264], "refactor": [10, 209, 217, 228], "tr": [10, 32, 40, 193, 202], "quantum": [10, 100, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 178, 254], "ever": [10, 55, 177, 180, 189, 203, 209, 226, 229, 264], "helper": [10, 29, 31, 40, 44, 47, 49, 74, 77, 78, 144, 146, 155, 190, 200, 203, 206, 209, 210, 212, 225, 256], "default_sort_kei": [10, 30, 38, 217], "matrixel": [10, 31], "matrixsymbol": [10, 13, 16, 27, 28, 31, 49, 80, 82, 85, 193, 213, 215], "layer": [10, 98, 186, 232], "imprecis": 10, "free_symbol": [10, 31, 49, 58, 76, 80, 148, 166, 169, 189, 199, 206], "sinc": [10, 11, 13, 14, 16, 17, 24, 29, 31, 32, 40, 41, 42, 45, 46, 47, 49, 50, 52, 54, 56, 57, 58, 59, 61, 62, 65, 67, 73, 74, 76, 78, 79, 80, 85, 89, 101, 113, 124, 126, 135, 159, 160, 164, 168, 174, 177, 180, 181, 183, 184, 186, 188, 189, 193, 196, 201, 202, 203, 205, 206, 209, 211, 212, 213, 219, 223, 227, 228, 229, 231, 232, 236, 241, 243, 244, 246, 258, 263, 265, 268, 269, 270], "atomicexpr": 10, "concept": [10, 16, 40, 113, 177, 183, 185, 188, 193, 212, 217, 246, 262, 267], "misappli": 10, "noth": [10, 30, 40, 49, 62, 76, 143, 159, 180, 184, 192, 193, 205, 209, 211, 222, 224, 232, 234, 261], "introduc": [10, 17, 45, 48, 49, 57, 74, 85, 90, 93, 111, 113, 117, 118, 119, 122, 159, 164, 177, 184, 185, 190, 193, 200, 203, 206, 213, 229, 262, 265, 267, 269], "21494": 10, "size": [10, 14, 31, 32, 33, 38, 40, 41, 42, 43, 44, 45, 49, 50, 52, 54, 77, 80, 82, 85, 88, 89, 96, 113, 121, 122, 123, 132, 154, 155, 173, 179, 182, 186, 193, 205, 206, 209, 213, 231, 259], "die": [10, 188, 213], "arrai": [10, 19, 31, 40, 41, 45, 46, 50, 57, 76, 80, 82, 85, 89, 90, 96, 126, 156, 179, 182, 184, 189, 193, 212, 213, 216, 218, 219, 220, 225, 226, 228, 232, 265], "histor": [10, 50, 209, 213], "21563": 10, "revert": [10, 184, 189], "sample_it": [10, 213], "consequ": [10, 27, 49, 181, 183, 261, 269], "subclass": [10, 16, 25, 26, 31, 49, 56, 60, 62, 76, 79, 128, 134, 143, 147, 148, 149, 154, 156, 157, 179, 180, 182, 183, 184, 188, 189, 193, 213, 224, 225, 226, 229, 232, 238, 241, 264], "kei": [10, 11, 24, 27, 30, 38, 40, 41, 49, 50, 51, 54, 65, 78, 80, 85, 88, 89, 92, 110, 111, 120, 151, 154, 159, 177, 179, 181, 183, 184, 185, 186, 188, 189, 190, 191, 193, 205, 209, 210, 211, 213, 217, 228, 231, 232, 234, 265, 266, 269], "domainmatrix": [10, 81, 85, 185, 188, 191], "switch": [10, 40, 47, 76, 89, 98, 186, 189], "21402": 10, "earlier": [10, 102, 190, 194, 203, 205, 232, 242, 244, 264], "could": [10, 11, 14, 16, 26, 31, 42, 49, 61, 74, 76, 79, 108, 111, 120, 123, 159, 162, 164, 180, 182, 183, 186, 188, 190, 193, 201, 203, 205, 209, 210, 211, 212, 213, 214, 217, 218, 225, 229, 242, 243, 261, 264, 269], "traceback": [10, 11, 13, 16, 17, 24, 25, 26, 31, 32, 41, 49, 50, 53, 59, 76, 79, 80, 81, 82, 83, 85, 87, 88, 91, 98, 178, 180, 183, 184, 186, 189, 192, 200, 201, 209, 211, 212, 222, 224, 225, 227, 229, 231, 232, 234, 261, 265], "typeerror": [10, 11, 17, 24, 25, 26, 41, 49, 59, 64, 79, 81, 83, 87, 98, 133, 200, 201, 225, 232], "unsupport": [10, 11, 13, 98, 193], "operand": [10, 11, 41, 49, 170, 188, 240], "dict": [10, 11, 16, 31, 41, 50, 51, 65, 66, 79, 80, 85, 89, 91, 106, 107, 139, 151, 154, 165, 167, 169, 179, 182, 183, 184, 186, 188, 189, 190, 191, 193, 205, 206, 209, 210, 211, 212, 213, 217, 224, 225, 231, 238, 270], "solve_lin_si": [10, 185], "heurisch": [10, 76], "smith_normal_form": [10, 86, 182], "newmatrix": 10, "holonom": [10, 70, 73, 112, 113, 114, 120, 121, 122, 248, 255], "polymatrix": 10, "risch": [10, 76, 259], "broken": [10, 38, 49, 176, 193, 209, 234], "20780": 10, "20759": 10, "20621": 10, "19882": 10, "18844": 10, "21441": 10, "21427": 10, "21496": 10, "potenti": [10, 16, 61, 82, 85, 89, 106, 107, 108, 110, 119, 120, 170, 175, 183, 188, 200, 203, 205, 209, 211, 227, 228, 240, 245, 246], "impact": 10, "downstream": [10, 16], "goal": [10, 30, 102, 127, 188, 190, 224, 225, 227, 262, 263], "perhap": [10, 31, 49, 79, 89, 144, 183, 211, 226, 258], "tableform": [10, 234], "isn": [10, 76, 102, 111, 212, 263], "advis": [10, 16, 30, 111], "usecas": 10, "unclear": [10, 16, 102], "line2dbaseseri": [10, 179], "coordin": [10, 23, 31, 50, 51, 55, 57, 58, 60, 64, 66, 82, 85, 92, 96, 100, 105, 106, 107, 110, 111, 112, 113, 115, 117, 120, 121, 122, 125, 127, 135, 137, 156, 157, 160, 168, 169, 170, 171, 172, 174, 177, 180, 188, 189, 201, 209, 238, 239, 240, 243, 245, 247, 255], "linecollect": [10, 179], "bokeh": 10, "plotli": 10, "mayavi": 10, "k3d": 10, "matplotlibbackend": [10, 179], "get_point": [10, 179], "uniformli": [10, 14, 40, 65, 66, 92, 96, 179, 227], "adapt": [10, 96, 179, 199, 211, 231, 237], "get_data": [10, 179, 235], "dft": [10, 52, 101], "fourier": [10, 49, 57, 76, 101, 152, 197], "as_explicit": [10, 82, 85, 101, 215], "exp": [10, 11, 16, 23, 29, 31, 39, 48, 49, 51, 53, 54, 56, 57, 67, 68, 71, 74, 76, 80, 82, 85, 89, 100, 135, 138, 154, 160, 178, 183, 184, 189, 190, 193, 195, 200, 203, 205, 209, 210, 211, 212, 213, 214, 231, 247, 259, 263, 265, 270], "discret": [10, 29, 31, 32, 39, 41, 49, 50, 57, 89, 159, 164, 195, 198, 209, 211, 212, 249, 258], "transform": [10, 23, 28, 31, 45, 48, 49, 50, 51, 53, 54, 57, 64, 75, 82, 85, 96, 98, 113, 131, 152, 154, 156, 161, 181, 184, 186, 188, 189, 195, 200, 201, 202, 205, 206, 209, 210, 211, 212, 213, 218, 226, 232, 238, 244, 245, 249, 256, 263], "unevalu": [10, 16, 17, 25, 26, 29, 41, 48, 49, 55, 57, 66, 76, 89, 98, 136, 140, 147, 148, 159, 189, 192, 200, 201, 205, 209, 211, 212, 213, 259, 263, 264, 270], "represent": [10, 23, 30, 31, 32, 40, 43, 49, 50, 57, 61, 69, 71, 73, 74, 76, 78, 79, 80, 81, 82, 88, 89, 95, 96, 101, 102, 103, 110, 120, 123, 124, 128, 148, 153, 154, 156, 157, 159, 161, 168, 173, 174, 176, 179, 180, 182, 184, 185, 186, 188, 189, 190, 191, 192, 193, 195, 203, 205, 206, 209, 212, 213, 218, 219, 234, 238, 240, 247, 259, 261, 264], "21626": 10, "expos": [10, 30, 213], "mutat": [10, 98, 182, 184, 213], "flat": [10, 63, 80, 225], "todok": [10, 80], "ey": [10, 80, 81, 82, 83, 84, 85, 87, 182, 188, 214, 234, 265], "converg": [10, 31, 48, 53, 57, 75, 76, 89, 128, 189, 196, 200, 203, 259], "legacy_matrix": [10, 76], "discontinu": [10, 29, 53, 55, 57, 76, 92, 196], "theano_cod": 10, "aesara_cod": [10, 193], "theanoprint": 10, "aesaraprint": [10, 193], "predic": [10, 18, 24, 25, 29, 91, 189, 205, 231, 249], "experienc": [10, 32], "big": [10, 11, 14, 16, 33, 49, 51, 89, 126, 139, 178, 192, 193, 200, 234, 259, 261], "registr": 10, "add_handl": 10, "remove_handl": [10, 24], "multipledispatch": [10, 24], "regist": [10, 24, 25, 26, 50, 155], "register_mani": [10, 25, 26], "askprimehandl": 10, "staticmethod": [10, 224], "register_handl": [10, 24], "prime": [10, 16, 24, 25, 26, 40, 47, 48, 49, 50, 52, 54, 57, 89, 130, 180, 181, 183, 184, 185, 186, 189, 203, 205, 206, 213, 228], "Not": [10, 17, 49, 54, 56, 79, 98, 193, 212, 213, 231, 263, 270], "primepred": [10, 27], "q": [10, 11, 13, 16, 22, 23, 24, 25, 26, 27, 28, 31, 41, 45, 48, 49, 50, 57, 66, 71, 72, 74, 76, 78, 80, 85, 91, 92, 98, 99, 106, 107, 110, 111, 113, 114, 119, 121, 122, 123, 126, 127, 128, 139, 153, 159, 162, 169, 170, 171, 172, 173, 174, 176, 179, 180, 181, 183, 184, 186, 188, 189, 190, 192, 193, 195, 203, 206, 209, 211, 213, 218, 219, 234, 238, 240, 241, 243, 246, 253, 265, 269], "20209": 10, "stochast": 10, "timestamp": 10, "wienerprocess": [10, 213], "normaldistribut": [10, 213], "20078": 10, "misspel": 10, "absorbing_prob": [10, 213], "absorb": [10, 74, 209, 213, 259], "probabilit": [10, 213], "shutil": 10, "power": [10, 11, 23, 28, 31, 39, 40, 41, 50, 52, 53, 55, 71, 72, 74, 76, 78, 80, 82, 89, 90, 98, 111, 126, 131, 142, 145, 158, 161, 164, 165, 169, 180, 181, 183, 184, 185, 186, 188, 189, 193, 194, 197, 200, 202, 204, 206, 209, 211, 212, 213, 217, 226, 231, 249, 251, 258, 259, 260, 261, 262, 264, 265, 268], "immut": [10, 49, 81, 84, 87, 177, 184, 209, 214, 252, 258, 265], "coordsystem": [10, 51], "explicit": [10, 16, 41, 48, 49, 53, 65, 66, 76, 88, 89, 110, 111, 114, 123, 127, 177, 180, 189, 192, 193, 195, 201, 203, 209, 210, 211, 212, 216, 228], "appropi": 10, "patch": [10, 51, 193], "real": [10, 11, 13, 14, 16, 17, 23, 25, 26, 28, 29, 31, 41, 49, 50, 51, 53, 54, 55, 56, 57, 61, 65, 66, 71, 74, 76, 79, 80, 82, 85, 89, 91, 100, 111, 126, 128, 131, 132, 139, 157, 171, 178, 181, 184, 185, 188, 189, 190, 193, 194, 196, 200, 203, 205, 208, 209, 211, 212, 213, 218, 222, 226, 235, 263, 269, 270], "similarli": [10, 16, 45, 49, 50, 57, 61, 85, 92, 93, 98, 106, 124, 179, 180, 183, 188, 190, 200, 201, 203, 209, 224, 232, 242, 243, 265], "manifold": [10, 51], "track": [10, 11, 40, 49, 53, 57, 110, 124, 143, 177, 200, 219, 259], "coord_system": 10, "connect_to": 10, "coord_tuple_transform_to": [10, 51], "constructor": [10, 25, 26, 30, 31, 36, 40, 41, 42, 49, 56, 57, 78, 83, 85, 114, 152, 153, 157, 161, 179, 180, 182, 183, 184, 185, 193, 201, 209, 218, 226, 241, 260, 264], "str": [10, 25, 30, 31, 32, 41, 49, 50, 51, 53, 58, 59, 62, 65, 66, 77, 79, 82, 89, 91, 96, 106, 108, 126, 143, 153, 159, 169, 171, 172, 179, 184, 188, 193, 205, 209, 213, 229, 231, 232, 234, 238], "unord": [10, 11, 49, 89, 184, 212, 231, 232], "lambidfi": 10, "guess": [10, 30, 50, 53, 74, 77, 173, 186, 189, 203, 206, 264], "construct": [10, 14, 25, 26, 30, 31, 36, 49, 51, 55, 57, 59, 63, 65, 77, 82, 85, 90, 93, 102, 106, 108, 111, 113, 144, 148, 157, 158, 161, 165, 180, 183, 184, 186, 188, 189, 193, 206, 211, 213, 214, 216, 218, 226, 228, 229, 241, 243, 244, 261, 264, 265, 269], "superclass": [10, 16, 48, 49, 76, 82, 184], "scalar": [10, 23, 49, 51, 64, 78, 80, 82, 85, 90, 108, 111, 158, 169, 170, 171, 175, 177, 180, 182, 186, 193, 209, 214, 226, 232, 238, 239, 240, 241, 242, 243, 245, 247], "boolean": [10, 18, 24, 25, 26, 27, 28, 29, 31, 49, 55, 59, 63, 64, 65, 66, 77, 80, 85, 86, 89, 92, 96, 98, 144, 169, 171, 173, 179, 182, 184, 186, 188, 190, 193, 205, 209, 211, 213, 231, 240, 251, 265], "sens": [10, 14, 16, 23, 27, 29, 30, 49, 51, 54, 57, 74, 79, 106, 113, 164, 169, 177, 180, 186, 188, 202, 203, 205, 212, 213, 225, 226, 231, 246, 269], "exponenti": [10, 11, 16, 23, 31, 40, 45, 49, 50, 54, 56, 76, 79, 80, 85, 89, 91, 145, 161, 190, 205, 212, 213, 260, 261, 265], "trick": [10, 11, 45, 203, 219], "treat": [10, 16, 17, 39, 40, 47, 49, 54, 57, 64, 65, 85, 91, 108, 111, 132, 169, 174, 181, 183, 184, 186, 188, 189, 190, 192, 193, 200, 201, 203, 205, 206, 209, 217, 225, 228, 244, 261, 265], "cdot": [10, 16, 32, 48, 54, 57, 67, 71, 72, 74, 80, 82, 85, 89, 99, 101, 124, 164, 174, 176, 177, 178, 180, 181, 189, 196, 200, 203, 209, 211, 214, 215, 243, 244, 263, 264, 269], "attributeerror": [10, 16, 49, 85, 212, 232, 265], "as_coeff_mul": [10, 49, 74, 82], "tri": [10, 11, 16, 30, 49, 57, 65, 74, 76, 113, 123, 154, 180, 181, 188, 193, 195, 205, 209, 210, 212, 224, 261, 269], "benchmark": [10, 113, 125], "runtest": [10, 224], "tmpfile": 10, "random_complex_numb": 10, "verify_numer": 10, "test_derivative_numer": 10, "_randrang": [10, 50], "_randint": [10, 186], "as_poli": [10, 49, 181, 189], "as_expr": [10, 49, 85, 183, 188, 189, 190, 265], "combintor": 10, "perm_cycl": [10, 41, 193], "printer": [10, 41, 49, 57, 77, 85, 90, 173, 218, 225, 226, 232, 250, 256, 260, 264], "init_print": [10, 21, 31, 41, 53, 76, 77, 85, 93, 173, 180, 181, 192, 259, 263, 265, 268, 269, 270], "problemat": [10, 183], "affect": [10, 16, 48, 49, 85, 168, 189, 212, 242], "18056": 10, "15416": 10, "100x": 10, "slowdown": [10, 53], "significantli": [10, 31, 53, 102, 121, 184, 195, 225, 228], "slower": [10, 45, 85, 183, 188, 232, 258], "_sympifi": [10, 49, 82, 264], "strict": [10, 40, 41, 49, 53, 54, 80, 85, 186, 189, 211, 231, 234, 269], "lot": [10, 40, 49, 67, 74, 76, 85, 111, 126, 179, 192, 196, 206, 212, 224, 269], "secur": 10, "whatev": [0, 10, 11, 40, 49, 50, 205, 209, 210, 212, 232], "__repr__": [10, 193], "12524": 10, "repr": [10, 31, 76, 153, 183, 188, 193, 224, 268], "plenti": 10, "_sympy_": [10, 49], "disabl": [10, 49, 50, 74, 76, 89, 186, 189, 193, 201, 209, 211, 222, 224, 227, 231], "constant": [10, 29, 31, 48, 49, 53, 55, 57, 73, 74, 76, 92, 93, 98, 110, 111, 113, 126, 127, 136, 140, 146, 162, 163, 165, 166, 167, 170, 172, 174, 179, 181, 184, 186, 188, 189, 190, 193, 195, 200, 203, 205, 206, 209, 210, 211, 212, 213, 224, 226, 231, 232, 240, 244, 247, 259, 265, 270], "lh": [10, 31, 39, 49, 191, 193, 209, 211, 212, 243], "tensexpr": [10, 99, 219], "substitute_indic": 10, "danger": [10, 181], "tensor_head": [10, 99, 219], "had": [10, 41, 49, 50, 85, 89, 111, 123, 188, 189, 190, 193, 201, 203, 209, 211, 212, 227, 232, 258, 261, 264, 265], "shorter": [10, 49, 59, 102, 121, 168, 180, 184, 193, 226, 234], "creation": [10, 11, 49, 51, 85, 103, 108, 117, 120, 121, 122, 123, 133, 143, 147, 148, 149, 159, 176, 177, 193, 213, 218, 226, 232], "_dummy_fmt": 10, "l_": [10, 76, 85], "obsolet": 10, "dummy_nam": [10, 219], "clearer": [10, 241], "metric_symmetri": [10, 219], "set_metr": [10, 219], "delta": [10, 11, 31, 33, 43, 54, 57, 72, 74, 78, 96, 123, 131, 159, 193, 200, 206, 209, 213, 214, 219], "epsilon": [10, 11, 48, 50, 57, 74, 76, 130, 193, 219], "latter": [10, 13, 31, 40, 49, 54, 57, 74, 89, 180, 184, 188, 193, 203, 206, 219, 226, 231, 232, 261], "involv": [10, 11, 14, 16, 26, 28, 40, 48, 49, 50, 54, 61, 62, 74, 76, 89, 98, 103, 106, 111, 138, 148, 154, 156, 166, 176, 177, 180, 181, 184, 186, 188, 189, 190, 194, 195, 200, 201, 202, 203, 205, 206, 209, 211, 214, 232, 269], "obscur": [10, 16], "young": [10, 92, 219], "tableau": 10, "favor": 10, "tensorindex": [10, 219], "tensor_indic": [10, 99, 219], "denot": [10, 11, 14, 40, 41, 49, 51, 57, 71, 72, 74, 76, 78, 79, 80, 85, 89, 91, 98, 164, 169, 174, 179, 180, 181, 186, 188, 196, 200, 201, 203, 209, 213, 218, 219, 238, 239, 241, 242, 244, 246], "set_dimens": 10, "unit_system": [10, 166], "set_quantity_dimens": [10, 162], "set_global_dimens": 10, "set_scale_factor": 10, "set_quantity_scale_factor": [10, 162], "set_global_relative_scale_factor": [10, 166], "get_dimensional_expr": 10, "unitsystem": [10, 167], "dimension": [10, 29, 31, 33, 51, 61, 62, 63, 64, 65, 82, 85, 93, 99, 126, 133, 135, 145, 161, 163, 174, 175, 179, 180, 186, 188, 189, 192, 193, 211, 212, 214, 215, 219, 225, 246, 270], "_collect_factor_and_dimens": 10, "motiv": [10, 12, 20], "emptyset": [10, 16, 29, 30, 79, 193, 212, 238, 270], "is_empti": [10, 16, 41], "unknown": [10, 13, 16, 17, 23, 49, 50, 93, 144, 191, 208, 209, 210, 211, 212, 231, 270], "empti": [10, 16, 25, 29, 30, 31, 32, 40, 44, 48, 49, 61, 64, 65, 66, 79, 80, 85, 89, 106, 123, 154, 167, 184, 188, 189, 193, 199, 200, 201, 203, 209, 211, 212, 224, 226, 231, 234, 264], "individu": [10, 16, 49, 55, 60, 65, 66, 78, 80, 82, 85, 98, 124, 131, 149, 153, 178, 201, 209, 224, 265], "denest": [10, 49, 189, 204, 211, 231], "particl": [10, 103, 105, 106, 111, 114, 115, 120, 121, 123, 126, 127, 135, 138, 145, 146, 157, 159, 162, 164, 176, 219], "rigidbodi": [10, 103, 106, 110, 113, 117, 118, 119, 120, 124, 126], "potential_energi": [10, 106, 119, 120, 124], "energi": [10, 100, 103, 106, 108, 111, 119, 120, 135, 160, 164, 174, 219, 244, 254], "setter": [10, 111, 126], "getter": [10, 49, 111, 126], "set_": 10, "set_condit": 10, "17749": 10, "side": [10, 11, 14, 16, 31, 40, 41, 49, 61, 65, 76, 85, 89, 92, 98, 106, 110, 123, 124, 127, 147, 148, 164, 169, 178, 180, 186, 188, 191, 193, 210, 212, 213, 217, 224, 226, 247, 259], "unpack": [10, 49, 80, 85, 231, 232], "intermedi": [10, 31, 32, 72, 80, 111, 113, 117, 143, 153, 161, 162, 169, 172, 176, 212, 226, 266], "emul": [10, 205, 212, 214, 232], "is_deriv": [10, 49], "as_finite_differ": [10, 29, 49, 259], "17881": 10, "get_matrix": [10, 219], "__getitem__": [10, 49, 80, 218], "__iter__": [10, 41, 49, 205], "_components_data_full_destroi": 10, "__pow__": [10, 80, 184, 190], "flaw": 10, "replace_with_arrai": [10, 219, 220], "cach": [10, 16, 54, 74, 180, 189, 193, 222, 227, 228, 249], "safe": [10, 89, 183, 189, 211, 217, 259], "squar": [10, 11, 16, 23, 26, 31, 40, 49, 50, 55, 65, 66, 74, 76, 80, 81, 85, 88, 89, 92, 98, 100, 121, 122, 145, 161, 169, 178, 182, 184, 185, 186, 188, 189, 190, 193, 201, 204, 206, 209, 212, 213, 263], "jordan": [10, 74, 80, 85, 191, 211, 212], "band": [10, 80, 88], "eigenvalu": [10, 80, 85, 111, 113, 153, 156, 263], "elif": [10, 16, 17, 49, 56], "inspect": [10, 16, 85, 188, 199, 230, 232, 256], "getsourc": [10, 232, 236], "sum": [10, 14, 16, 31, 38, 41, 48, 49, 52, 54, 57, 62, 64, 72, 74, 76, 78, 79, 80, 82, 85, 89, 108, 121, 138, 142, 145, 153, 156, 158, 159, 178, 180, 181, 183, 184, 188, 189, 190, 193, 195, 196, 198, 200, 202, 203, 205, 206, 209, 211, 212, 213, 214, 215, 217, 219, 228, 231, 249, 269], "meter": [10, 92, 93, 130, 133, 162, 164, 165, 166], "si": [10, 57, 73, 74, 132, 161, 162, 164, 165, 166, 193], "cg": [10, 138, 156], "aris": [10, 16, 17, 49, 54, 74, 76, 156, 177, 183, 188], "scale": [10, 58, 59, 60, 64, 65, 66, 77, 92, 139, 160, 162, 164, 166, 167, 173, 177, 179, 196, 213, 244, 246], "kilomet": [10, 165, 166], "1000": [10, 11, 31, 33, 49, 50, 53, 82, 89, 126, 164, 165, 166, 178, 192, 193, 202], "dimensionsystem": [10, 161], "14318": 10, "duplic": [10, 11, 40, 43, 50, 55, 57, 85, 89, 201, 209, 231, 262], "flatten": [10, 30, 49, 183, 215, 220, 231, 232], "neither": [10, 16, 17, 27, 49, 133, 154, 179, 189, 200, 201, 202, 209, 219, 232, 238, 246, 269], "polymorph": 10, "anymor": [10, 179], "temporarili": [10, 49], "point3d": [10, 62, 63, 64, 132], "p1": [10, 32, 40, 41, 45, 48, 59, 61, 62, 63, 64, 65, 98, 103, 105, 114, 126, 128, 172, 179, 183, 184, 186, 190, 202, 213, 214], "p2": [10, 17, 40, 41, 48, 59, 61, 62, 63, 64, 65, 98, 103, 105, 126, 172, 179, 183, 184, 186, 190, 202, 213], "throughout": [74, 79, 186, 196, 212, 261], "elsewher": [16, 54, 78, 113, 182, 224], "termnam": [], "antideriv": [55, 57, 76, 209, 259], "frac": [14, 16, 29, 48, 49, 50, 51, 54, 56, 57, 74, 76, 85, 89, 91, 98, 114, 124, 162, 173, 174, 176, 177, 178, 182, 186, 189, 193, 195, 196, 200, 203, 206, 209, 210, 212, 213, 214, 231, 244, 246, 259, 263, 264, 268, 269], "indefinit": [23, 55, 73, 74, 76, 85, 184, 186, 187, 189, 198, 259], "integr": [11, 13, 19, 21, 23, 29, 41, 48, 49, 51, 54, 55, 56, 67, 68, 69, 72, 78, 80, 85, 88, 89, 98, 100, 106, 111, 120, 126, 145, 154, 157, 160, 163, 168, 170, 174, 178, 180, 183, 184, 185, 186, 189, 190, 193, 195, 196, 203, 209, 210, 213, 226, 234, 238, 240, 241, 244, 245, 249, 260, 263, 268], "primit": [40, 49, 50, 57, 89, 153, 157, 180, 181, 183, 184, 186, 188, 189, 192, 193, 206, 259], "terminologi": [19, 219], "tupl": [23, 25, 26, 29, 30, 31, 32, 40, 41, 48, 50, 51, 55, 56, 57, 58, 59, 60, 62, 64, 65, 66, 71, 74, 76, 80, 85, 88, 89, 91, 92, 93, 96, 103, 106, 108, 110, 121, 122, 124, 126, 128, 143, 144, 145, 148, 153, 156, 157, 158, 159, 169, 172, 177, 179, 180, 182, 183, 184, 185, 186, 190, 191, 193, 194, 195, 199, 201, 205, 206, 209, 210, 211, 212, 213, 214, 218, 219, 224, 225, 226, 227, 231, 232, 234, 238, 241, 259, 264, 265, 268], "subexpress": [31, 49, 80, 102, 104, 188, 189, 193, 200, 204, 212, 226, 232, 249, 258], "togeth": [11, 14, 31, 40, 49, 53, 78, 85, 89, 120, 145, 156, 164, 177, 180, 184, 186, 188, 189, 192, 193, 205, 209, 211, 213, 224, 225, 231, 263, 269], "walk": [31, 33, 151, 154, 203], "extract": [29, 49, 76, 80, 82, 85, 89, 99, 113, 120, 168, 177, 186, 188, 189, 211, 212, 213, 224, 226, 231], "rebuilt": 264, "atom": [31, 41, 76, 79, 80, 100, 160, 183, 190, 193, 211, 212, 218], "queri": [16, 17, 24, 27, 28, 29, 31, 49, 61, 189, 205, 213, 249], "is_real": [16, 49, 51, 55, 56, 85, 171, 193, 218], "restrict": [16, 31, 38, 49, 50, 57, 85, 92, 93, 159, 180, 183, 188, 190, 208], "never": [16, 49, 55, 76, 161, 189, 190, 193, 201, 211, 213, 222, 241, 261, 262], "is_": [18, 49], "leav": [16, 31, 49, 76, 85, 89, 107, 120, 143, 159, 200, 228, 258, 264, 269], "recurs": [11, 13, 16, 29, 49, 54, 74, 76, 79, 80, 89, 113, 179, 186, 189, 190, 193, 194, 197, 198, 200, 205, 211, 212, 217, 222, 224, 228, 229, 231, 260, 269], "canonic": [36, 49, 202, 219], "excess": [], "discourag": [16, 49, 205], "expens": [49, 123, 202, 209, 210, 211, 227, 265], "matrix": [13, 14, 16, 19, 23, 26, 31, 38, 41, 49, 50, 51, 57, 64, 74, 76, 78, 80, 83, 84, 87, 88, 90, 91, 98, 99, 101, 103, 105, 106, 107, 110, 111, 113, 114, 115, 117, 118, 119, 121, 122, 126, 127, 128, 131, 132, 134, 142, 143, 148, 153, 154, 156, 158, 159, 161, 164, 168, 169, 177, 178, 180, 182, 186, 188, 191, 193, 194, 201, 203, 205, 206, 211, 212, 214, 215, 217, 218, 219, 220, 225, 226, 231, 232, 234, 238, 239, 240, 242, 246, 252, 260, 263, 264, 269, 270], "sympifi": [11, 16, 17, 31, 53, 59, 79, 124, 132, 157, 159, 169, 170, 183, 184, 249, 258, 264], "bound": [27, 31, 32, 48, 49, 58, 59, 60, 62, 64, 65, 76, 89, 157, 184, 186, 188, 189, 193, 199, 209, 211, 212, 213, 218, 228, 234, 238], "dummi": [31, 45, 48, 55, 74, 76, 85, 111, 126, 154, 159, 183, 184, 188, 189, 190, 199, 200, 201, 203, 205, 209, 212, 217, 219, 222, 226, 231, 232], "ration": [16, 24, 26, 29, 31, 48, 53, 54, 55, 57, 59, 62, 64, 66, 70, 74, 76, 77, 82, 85, 89, 91, 98, 128, 161, 178, 181, 185, 186, 187, 188, 190, 193, 197, 198, 202, 203, 205, 206, 207, 208, 211, 212, 213, 231, 238, 260, 261, 264, 268], "unequ": [11, 92, 193], "accident": [], "clash": [22, 49, 85], "contrast": [48, 49, 114, 183, 203, 209, 263], "_eval_": [], "_eval_deriv": [49, 57], "overrid": [11, 31, 49, 58, 59, 65, 91, 157, 193, 218, 225, 226, 231, 232], "pre": [30, 31, 49, 178, 179, 194, 202, 205, 211, 212, 224, 242, 246, 264], "dispatch": [25, 26, 27, 49, 50, 154, 193, 212, 228], "shorthand": [11, 16, 49, 79, 153, 188, 201, 222], "stand": [48, 49, 126, 181, 183, 184, 190], "reserv": [16, 111, 219, 226, 265], "smaller": [31, 40, 41, 49, 50, 57, 65, 76, 82, 89, 121, 181, 183, 186, 189, 196, 202, 203, 211, 231, 258, 269], "children": [49, 50, 183, 228], "leaf": [183, 193, 202, 264], "strictli": [11, 13, 15, 16, 27, 29, 49, 57, 85, 89, 98, 186, 205, 211], "dag": [], "map": [16, 29, 30, 31, 39, 40, 41, 49, 50, 61, 65, 72, 74, 76, 79, 80, 89, 96, 106, 114, 137, 148, 149, 154, 169, 177, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 200, 205, 209, 210, 211, 212, 213, 217, 218, 225, 228, 231, 232, 234, 238], "colloqui": 19, "lambda": [11, 25, 26, 29, 31, 40, 41, 50, 51, 55, 76, 80, 81, 82, 85, 88, 89, 91, 111, 122, 123, 126, 127, 144, 179, 186, 188, 189, 193, 194, 201, 202, 205, 209, 211, 212, 213, 214, 222, 231, 232, 238, 239, 242, 258, 265], "zeta": [11, 48, 49, 53, 54, 56, 184, 188, 193, 200, 213], "hyper": [49, 54, 57, 68, 71, 193, 195, 203, 205, 211, 213, 269], "primepi": 89, "divisor_sigma": 89, "undefin": [25, 26, 29, 49, 55, 56, 57, 76, 82, 91, 103, 177, 188, 199, 200, 203, 232, 259, 270], "interchang": [45, 48, 74, 209], "memori": [31, 49, 89, 189, 214, 225, 228], "maintain": [11, 49, 50, 89, 93, 193, 201, 202, 209, 212, 228], "mental": [], "hidden": 168, "state": [14, 16, 40, 47, 49, 57, 89, 92, 98, 100, 106, 107, 110, 113, 114, 127, 131, 135, 136, 138, 139, 140, 142, 143, 144, 148, 151, 153, 154, 155, 156, 158, 159, 189, 193, 202, 203, 205, 213, 228, 254, 265], "hashabl": [46, 74, 231], "repl": 219, "execut": [16, 21, 31, 77, 80, 126, 179, 193, 209, 212, 222, 224, 226, 227, 232, 234, 237, 248, 263, 268], "idiom": [235, 261, 262], "anti": [23, 27, 45, 55, 76, 80, 131, 136, 219], "frown": [], "upon": [16, 31, 49, 89, 110, 113, 121, 122, 123, 126, 153, 159, 174, 176, 177, 201, 209, 218, 225, 244, 269], "lowercas": [11, 209, 224, 259], "is_integ": [16, 49, 171, 193, 218], "capit": [48, 50, 98, 209], "wherea": [14, 16, 27, 31, 50, 59, 65, 74, 79, 98, 164, 180, 183, 189, 193, 211, 212, 231, 269], "is_capit": [], "unneed": [], "achiev": [11, 49, 53, 57, 82, 89, 111, 126, 192, 200, 203, 205, 212, 227, 242], "isinst": [13, 16, 31, 49, 80, 82, 98, 183, 184, 193, 194, 205, 214, 217, 226, 264], "ship": 90, "session": [22, 31, 49, 61, 76, 173, 177, 183, 229, 256, 261, 268], "sort": [25, 26, 30, 31, 38, 41, 45, 74, 76, 79, 85, 88, 89, 99, 102, 106, 143, 159, 164, 168, 179, 186, 189, 190, 200, 205, 206, 209, 210, 211, 217, 219, 224, 226, 231, 241, 249, 261, 263, 264], "numberkind": [13, 80, 201], "matrixkind": [13, 49, 84, 201], "booleankind": [], "ring": [52, 72, 85, 86, 176, 181, 182, 185, 186, 188, 189, 190, 191, 192, 193, 231], "classif": [12, 15, 49, 209, 210], "lamda": [82, 193, 201, 213, 265], "\u03bb": 265, "lambdifi": [31, 57, 113, 193, 211, 225, 230, 249, 256, 260], "matrixexpr": [80, 82, 83], "mutabl": [11, 32, 49, 81, 82, 83, 92, 184, 193, 194, 205, 214, 265], "dens": [80, 82, 84, 85, 182, 185, 188, 189, 214, 252, 264], "underli": [31, 41, 47, 49, 78, 85, 96, 111, 154, 167, 211, 212, 213], "quit": [14, 57, 85, 89, 113, 176, 179, 190, 192, 203, 211, 246, 261, 264], "rung": [29, 71], "kutta": 71, "condit": [16, 17, 31, 40, 49, 51, 55, 57, 67, 68, 71, 72, 73, 75, 76, 79, 85, 89, 91, 92, 93, 98, 104, 107, 113, 120, 123, 126, 128, 172, 178, 190, 193, 196, 203, 206, 208, 209, 211, 212, 213, 218, 251, 269], "loss": [31, 74, 159, 225, 243], "stabil": [40, 45, 47, 53, 98, 123, 217], "focus": 186, "is_numb": [16, 49, 56, 57, 76], "infin": [16, 27, 48, 54, 55, 56, 57, 62, 74, 76, 85, 132, 184, 186, 189, 193, 198, 199, 200, 201, 205, 208, 209, 213], "resembl": [51, 57, 76, 218], "zoo": [16, 27, 49, 54, 55, 57, 76, 200, 202, 205], "data": [14, 31, 40, 49, 50, 57, 76, 85, 90, 96, 106, 138, 179, 180, 183, 184, 186, 189, 190, 193, 205, 218, 219, 224, 226, 228, 231, 235], "effici": [14, 16, 29, 31, 33, 40, 45, 49, 52, 53, 54, 65, 66, 82, 85, 89, 90, 98, 106, 126, 178, 181, 182, 183, 184, 186, 189, 190, 191, 192, 205, 206, 211, 225, 232, 258, 264, 265, 269], "act": [30, 39, 40, 41, 45, 49, 57, 65, 78, 79, 85, 92, 103, 105, 110, 111, 115, 122, 131, 143, 148, 151, 152, 201, 212, 214, 242, 246, 258], "pprint": [11, 29, 30, 51, 57, 76, 85, 89, 98, 131, 178, 193, 194, 201, 205, 209, 210, 212, 213, 231, 268], "inequ": [16, 17, 19, 49, 179, 186, 201, 203, 207], "neq": [49, 55, 57, 74, 76, 80, 164, 177, 178, 186, 189, 206, 209, 211, 269], "ne": [16, 50, 55, 62, 74, 89, 181, 183, 186, 203, 209, 213], "hold": [11, 26, 30, 40, 45, 49, 50, 51, 55, 57, 71, 74, 85, 88, 91, 98, 100, 105, 107, 108, 124, 155, 189, 203, 205, 209, 213, 226, 269], "singleton": [41, 79, 197, 212, 249, 251, 264], "gotcha": [12, 18, 49, 120, 177, 232, 262, 270], "somehow": [], "simpler": [17, 49, 53, 57, 73, 74, 117, 177, 186, 202, 203, 205, 209, 211, 212, 269], "adject": 213, "heurist": [16, 41, 74, 76, 80, 186, 187, 200, 202, 205, 207, 211, 212, 224, 259, 269], "appar": [11, 49, 234, 269], "commut": [16, 23, 26, 30, 40, 41, 45, 49, 51, 72, 76, 85, 136, 143, 146, 147, 148, 158, 159, 164, 171, 177, 181, 184, 185, 186, 187, 189, 193, 200, 201, 203, 209, 219, 264], "law": [30, 120, 162, 177, 181], "child": [105, 183, 228], "xreplac": [49, 80, 85, 169], "knowledg": [48, 49, 50, 188, 209, 264, 267], "round": [29, 31, 49, 53, 54, 55, 85, 132, 188, 189, 200, 202, 213], "analyt": [21, 54, 57, 74, 85, 120, 209, 254, 259], "implicitli": [16, 17, 41, 49, 76, 180, 183, 211], "independ": [11, 27, 29, 31, 40, 48, 49, 51, 57, 66, 74, 76, 78, 85, 98, 106, 107, 111, 113, 114, 121, 123, 157, 164, 174, 179, 181, 183, 188, 189, 195, 196, 203, 205, 206, 209, 210, 211, 212, 213, 219, 224, 225, 244, 263, 264], "nativ": [49, 98, 184, 189, 224], "parsabl": [], "iter": [29, 31, 38, 40, 41, 44, 45, 49, 50, 51, 52, 54, 57, 65, 79, 89, 103, 104, 106, 107, 110, 123, 127, 144, 159, 172, 179, 180, 181, 182, 184, 186, 189, 193, 194, 195, 196, 199, 205, 206, 209, 211, 212, 213, 214, 217, 225, 226, 227, 228, 230, 232, 238, 242, 256], "fuzzi": [16, 18], "noncomput": [], "philosoph": [], "OR": [29, 52, 79, 186], "One": [11, 13, 16, 29, 30, 31, 39, 41, 48, 54, 55, 56, 57, 68, 71, 73, 74, 76, 79, 85, 89, 92, 93, 111, 124, 126, 135, 164, 184, 186, 187, 189, 192, 195, 201, 205, 211, 212, 213, 214, 219, 232, 244, 258, 259, 261, 264, 265, 269], "care": [11, 17, 40, 49, 57, 76, 85, 92, 102, 111, 123, 169, 177, 183, 188, 205, 206, 209, 211, 212, 217, 220, 225, 258, 261, 263], "falsi": [], "is_posit": [16, 17, 49, 171, 184], "unevaluatedexpr": [193, 264], "surpris": [16, 212], "north": [], "riemann": [51, 54, 55, 56, 74, 180, 205, 219], "sphere": [131, 238, 247], "behav": [11, 27, 29, 49, 50, 55, 57, 89, 189, 201, 205, 211, 214, 220, 265], "mapl": [11, 76, 209, 256, 263], "mathematica": [11, 31, 41, 91, 256, 263, 265], "faq": 11, "introductori": [11, 14, 20, 21, 126, 183, 184, 189], "remaind": [11, 48, 49, 50, 89, 181, 183, 184, 187, 189, 209], "familiar": [11, 76, 111, 124, 143, 190, 259, 261, 267], "java": 11, "minut": [11, 102, 113, 168], "subtract": [11, 31, 41, 49, 53, 64, 89, 98, 105, 161, 181, 182, 183, 184, 186, 188, 189, 264, 269], "proper": [11, 40, 49, 76, 89, 102, 111, 168, 183, 184, 188, 193, 201, 209, 214, 225, 226, 244, 265], "trigsimp": [11, 23, 49, 85, 105, 111, 118, 169, 202, 241], "fill": [11, 15, 40, 50, 80, 82, 85, 88, 159, 179, 224, 227, 231, 234, 265], "alter": [11, 32, 40, 49, 169, 183, 193, 195, 212], "afterward": [11, 31, 49, 108, 114], "quantiti": [11, 41, 49, 54, 57, 61, 66, 93, 102, 106, 118, 124, 138, 161, 163, 167, 174, 176, 177, 188, 205, 213, 241, 245, 246, 254], "simultan": [11, 49, 62, 80, 89, 179, 202], "var": [11, 29, 31, 48, 53, 54, 72, 76, 79, 85, 98, 169, 179, 188, 192, 193, 205, 206, 232, 270], "rate": [11, 113, 176, 213, 244, 259], "short_lif": 11, "haven": 11, "160": [11, 92, 187], "bodi": [11, 31, 74, 91, 101, 102, 105, 106, 108, 110, 111, 113, 114, 115, 117, 120, 121, 126, 127, 162, 168, 169, 172, 176, 177, 238, 239, 245], "ctimesd": 11, "circular": [11, 16, 96, 131, 186], "relationship": [11, 16, 31, 49, 54, 56, 76, 89, 143, 169, 174, 177, 183, 211], "runtimeerror": [11, 29, 201, 212, 231], "compileflag": [11, 224], "glob": [11, 224], "exceed": [11, 113], "stdin": [11, 227, 229], "nameerror": [11, 77, 227, 261], "__future__": [11, 14, 261, 268], "divis": [11, 49, 85, 89, 161, 180, 183, 184, 185, 186, 189, 191, 193, 209, 211, 224, 232, 261, 264, 268], "cl": [11, 16, 31, 40, 49, 56, 76, 80, 159, 172, 184, 188, 209, 218, 227, 231, 243, 259, 268, 270], "dir": [11, 49, 92, 195, 200, 231], "__builtins__": 11, "__file__": [11, 235], "__name__": [11, 193, 235], "__package__": 11, "_greek": 11, "_latin": 11, "chi": [11, 57, 74, 131, 193, 203, 213, 219], "eta": [11, 57, 74, 188, 193, 209, 210, 213], "iota": [11, 193], "kappa": [11, 193, 213], "mu": [11, 57, 74, 89, 99, 101, 130, 193, 213, 219], "omega": [11, 31, 32, 40, 74, 89, 103, 108, 110, 124, 127, 133, 135, 160, 169, 172, 173, 176, 178, 193, 200, 213], "omicron": [11, 193], "phi": [11, 40, 49, 50, 54, 57, 74, 78, 85, 89, 100, 126, 133, 142, 144, 178, 180, 188, 193, 209, 238, 247], "psi": [11, 57, 74, 131, 142, 143, 149, 157, 188, 193, 219], "rho": [11, 51, 74, 85, 89, 153, 193, 213, 219, 247], "sigma": [11, 41, 72, 74, 80, 85, 193, 196, 213], "tau": [11, 31, 74, 76, 85, 188, 193, 209], "theta": [11, 49, 51, 55, 57, 74, 77, 85, 91, 100, 110, 127, 131, 169, 177, 178, 184, 188, 193, 196, 201, 212, 213, 238, 239, 242, 244, 247], "upsilon": [11, 193], "xi": [11, 51, 74, 193, 209, 210, 211], "lastli": [11, 76, 93, 127, 209], "unit": [11, 23, 26, 30, 49, 50, 54, 62, 63, 64, 76, 85, 89, 92, 96, 98, 100, 101, 111, 124, 126, 135, 160, 161, 162, 166, 168, 169, 174, 177, 179, 181, 184, 186, 188, 189, 191, 193, 201, 203, 206, 212, 214, 238, 239, 241, 246, 247, 254], "mnemon": [11, 202, 231], "osineq": 11, "notic": [11, 40, 41, 47, 49, 85, 147, 168, 183, 203, 219, 220, 231, 232, 261, 263, 264, 269], "reimport": 11, "restor": [11, 183, 205], "__": [11, 57, 76, 193, 213, 218], "press": [11, 30, 32, 33, 41, 50, 76, 80, 178, 187, 206, 211], "autocomplet": 11, "lose": [11, 180], "abil": [11, 16, 29, 85, 120, 188, 192, 209, 212, 263, 269], "past": [11, 55, 89, 192, 193, 268], "f1": [11, 40, 74, 76, 85, 98, 103, 111, 118, 126, 179, 184, 186, 189, 193, 195, 211], "f2": [11, 49, 74, 85, 98, 103, 111, 118, 126, 162, 179, 186, 189, 193, 195, 211], "6": [11, 12, 14, 23, 25, 26, 29, 31, 32, 33, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 71, 72, 74, 76, 78, 79, 80, 82, 83, 85, 86, 88, 89, 91, 92, 94, 96, 98, 99, 100, 113, 117, 118, 119, 128, 132, 138, 156, 168, 169, 177, 178, 179, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 195, 198, 199, 200, 201, 202, 205, 206, 210, 211, 212, 213, 214, 224, 225, 228, 231, 232, 238, 240, 242, 247, 259, 265, 269, 270], "accuraci": [11, 14, 29, 49, 189, 249, 265], "2000000000000002": 11, "py3k": 11, "20000000000000": 11, "sympyifi": 11, "worri": [11, 49, 264], "reus": [11, 31, 159, 263], "142857142857143": 11, "receiv": [11, 49, 50, 89, 103, 154, 188, 218], "fraction": [11, 49, 50, 53, 55, 65, 76, 85, 89, 104, 165, 183, 184, 185, 186, 187, 190, 193, 195, 206, 209, 211, 260], "interpret": [11, 17, 18, 31, 40, 48, 49, 54, 57, 62, 65, 76, 80, 82, 85, 89, 91, 102, 164, 179, 181, 188, 189, 193, 200, 206, 211, 212, 213, 218, 224, 225, 228, 234, 265], "100": [11, 31, 33, 38, 48, 49, 50, 53, 57, 65, 72, 79, 80, 85, 89, 92, 179, 183, 188, 190, 192, 193, 200, 211, 212, 231, 258], "000000000000": 11, "00": [11, 49, 89, 143, 153, 206, 231], "null": [11, 49, 85], "34": [11, 31, 41, 54, 62, 85, 89, 141, 187, 192, 199, 205, 206], "3400000000000": 11, "250": [11, 89, 206], "143": [11, 138, 178], "next": [11, 14, 16, 22, 31, 32, 33, 38, 40, 41, 43, 44, 49, 50, 55, 74, 76, 79, 85, 89, 102, 103, 106, 114, 115, 117, 119, 120, 127, 176, 177, 180, 184, 188, 189, 193, 201, 203, 206, 209, 228, 229, 231, 262, 263, 264], "binari": [11, 17, 27, 31, 33, 44, 49, 50, 76, 79, 89, 90, 153, 165, 180, 183, 189, 206, 225, 228, 231], "decim": [11, 31, 49, 52, 53, 89, 91, 96, 183, 189, 263], "far": [11, 30, 49, 63, 76, 180, 183, 193, 203, 232, 258, 259, 261], "142857": 11, "25000000000000000000": 11, "14285278320312500000": 11, "realiz": [11, 34, 40, 51, 79, 89, 114, 180, 181, 186, 213], "pad": [11, 31, 50, 51, 52, 64, 89], "inexact": [11, 49, 184], "low": [11, 16, 17, 31, 49, 50, 57, 89, 183, 186, 191, 193, 205, 225, 226, 231], "higher": [11, 14, 29, 31, 49, 51, 53, 57, 60, 85, 172, 178, 180, 183, 186, 189, 195, 196, 200, 202, 205, 209, 211, 214, 232, 259], "engin": [11, 125, 126, 175, 209, 268], "increas": [11, 29, 30, 41, 47, 48, 49, 52, 53, 57, 80, 89, 90, 102, 112, 143, 168, 169, 171, 176, 177, 183, 186, 188, 189, 195, 198, 202, 209, 213, 229, 231], "2000061035": 11, "highest": [11, 31, 43, 78, 102, 180, 189, 196, 206, 209], "hopefulli": [11, 15, 74], "unsimplifi": [11, 202], "12345678901234567890": 11, "big_trig_ident": 11, "ab": [11, 28, 31, 32, 48, 49, 50, 53, 54, 56, 57, 61, 72, 74, 79, 80, 85, 100, 126, 159, 181, 184, 188, 189, 193, 206, 208, 211, 212, 213, 219, 228, 231, 234, 243, 269], "gave": [11, 49, 231], "gain": [11, 50, 98, 121, 122, 126], "impress": 11, "91": [11, 32, 187, 192, 199, 213], "compar": [11, 16, 29, 31, 41, 46, 49, 55, 66, 79, 85, 89, 90, 113, 138, 162, 166, 183, 186, 189, 190, 193, 198, 200, 205, 209, 212, 214, 218, 224, 231, 261, 264, 269], "4e": [11, 211], "nearli": [11, 89, 202], "snippet": [11, 31], "expr_modifi": 11, "__main__": [11, 31, 265], "declar": [11, 16, 31, 62, 74, 85, 91, 99, 111, 113, 126, 138, 182, 193, 200, 203, 208, 209, 210, 213, 226], "asid": [11, 79, 209, 210, 263], "2x": [11, 49, 57, 74, 91, 205, 206, 212, 213, 258, 261, 269], "syntaxerror": [11, 91], "asin": [11, 56, 57, 63, 190, 193, 203, 205, 209, 213, 269], "arcsin": [11, 55, 190, 193, 213], "arcco": [11, 55, 193], "root": [11, 16, 19, 29, 31, 48, 49, 50, 56, 57, 71, 72, 73, 74, 76, 78, 81, 85, 89, 126, 164, 178, 180, 181, 184, 185, 188, 190, 192, 193, 203, 204, 209, 211, 212, 213, 224, 228, 231, 263, 265, 268, 270], "expon": [11, 28, 31, 36, 49, 50, 55, 56, 57, 74, 76, 82, 89, 96, 98, 165, 181, 182, 183, 185, 189, 190, 193, 202, 205, 209, 212, 217, 228, 269], "half": [11, 31, 50, 54, 55, 57, 59, 65, 76, 78, 85, 89, 91, 92, 128, 131, 156, 178, 184, 186, 188, 189, 201, 202, 203, 205, 213, 224, 231], "denomin": [11, 49, 53, 57, 76, 89, 98, 104, 181, 183, 184, 186, 188, 189, 192, 193, 202, 203, 205, 206, 209, 211, 269], "wild": [11, 205, 231], "interest": [11, 45, 49, 51, 54, 55, 65, 74, 76, 85, 89, 112, 113, 159, 164, 177, 180, 184, 188, 189, 190, 192, 200, 203, 205, 206, 211, 212, 225, 226, 242, 259, 262, 264, 265, 266, 269], "sq": [11, 206], "is_pow": [11, 31, 49, 55], "is_rat": [11, 16, 188, 231], "bracket": [11, 41, 49, 57, 157, 159, 169, 193], "notat": [11, 14, 37, 41, 42, 48, 49, 50, 54, 57, 74, 82, 85, 91, 98, 157, 168, 169, 173, 177, 180, 193, 200, 204, 205, 212, 218, 219, 231, 244, 259], "curli": [11, 111, 193], "suppli": [11, 29, 30, 31, 40, 41, 49, 51, 59, 63, 85, 89, 103, 106, 108, 113, 114, 117, 121, 122, 132, 159, 168, 172, 177, 179, 188, 190, 195, 202, 209, 225, 231, 232, 238, 239, 242], "powsimp": [11, 49, 55, 202], "deep": [11, 49, 55, 79, 80, 189, 200, 205, 213, 264], "measur": [11, 23, 55, 57, 65, 81, 102, 139, 148, 153, 161, 164, 166, 168, 169, 172, 174, 177, 189, 201, 202, 205, 213, 237, 238, 240, 241, 243, 244, 246], "count_op": [11, 202, 205], "radic": [11, 49, 50, 85, 180, 188, 189, 205, 211, 212], "join": [11, 41, 49, 50, 62, 80, 92, 93, 193, 205, 209, 214, 231, 235], "autoexpand": [11, 205], "violat": [11, 111, 178, 190, 205], "naiv": [11, 13, 40, 46, 49, 74, 80, 85, 164, 203, 211, 212, 219], "strategi": [11, 32, 49, 76, 186, 187, 200, 203, 205, 210], "radsimp": [11, 49, 204], "logcombin": [11, 204, 209, 212], "robust": [11, 46, 49, 53, 185, 205, 209], "cancel": [11, 14, 31, 49, 53, 57, 65, 74, 76, 85, 89, 98, 99, 183, 184, 186, 189, 192, 205, 211, 263], "topic": [12, 18, 20, 31, 120, 124, 175, 176, 177, 178, 180, 182, 183, 188, 212, 261, 266], "behind": [12, 20, 99, 111, 123, 163, 182, 202, 205, 209, 212, 254, 261], "decis": [12, 20, 49, 55, 76, 202, 211, 226], "opinion": [12, 20], "pitfal": [12, 177, 183, 261, 266, 269], "glossari": [], "seem": [16, 73, 74, 111, 164, 180, 205, 209, 269], "unwieldi": [], "arbitrarili": [29, 49, 62, 89, 186, 188, 200, 203, 209, 210, 213], "six": [93, 193, 206, 212, 213], "bias": [], "toward": [31, 49, 57, 180, 200, 212], "enter": [41, 49, 50, 54, 62, 89, 91, 92, 106, 110, 113, 121, 193, 203, 211, 224, 264, 268], "attempt": [14, 17, 31, 40, 45, 47, 49, 53, 54, 61, 74, 76, 85, 89, 102, 104, 154, 183, 188, 195, 200, 202, 205, 206, 209, 211, 212, 213, 224, 261, 269], "unambigu": [193, 209, 234], "univari": [29, 48, 49, 55, 72, 76, 180, 181, 183, 184, 185, 187, 188, 189, 190, 195, 208, 211, 213], "linear": [19, 30, 31, 41, 48, 49, 50, 52, 53, 57, 62, 69, 72, 74, 76, 78, 80, 82, 84, 92, 95, 98, 105, 106, 108, 113, 114, 115, 120, 121, 125, 126, 131, 153, 156, 157, 172, 179, 180, 184, 185, 186, 188, 189, 191, 199, 201, 203, 210, 211, 212, 231, 252, 270], "undetermin": [49, 85, 189, 195, 209, 211], "nonlinear": [19, 48, 126, 189, 211, 212], "sol": [85, 206, 209, 210, 211], "insuffici": 80, "elimin": [14, 31, 45, 49, 79, 81, 85, 102, 184, 191, 192, 194, 196, 204, 209, 211, 212, 219, 226, 265], "nsolv": [126, 211], "z_eq": [], "zsol": [], "906425478894557": [], "sol0": [], "90642547889456": [], "reduce_inequ": 208, "rh": [31, 39, 41, 49, 80, 81, 85, 106, 111, 117, 118, 119, 182, 191, 193, 195, 209, 211, 212, 243], "classifi": [13, 85, 183, 209, 210, 212, 213], "distinguish": [13, 16, 17, 30, 40, 53, 78, 111, 158, 164, 180], "former": [13, 31, 49, 54, 111, 186, 188, 189, 206, 231], "retriev": [13, 47, 80, 189, 205, 219], "guarante": [13, 16, 31, 40, 41, 49, 61, 74, 76, 85, 183, 186, 188, 189, 209, 211, 212, 229, 234, 265, 269], "catch": [13, 49, 209, 224, 265], "theori": [13, 26, 32, 38, 39, 40, 41, 47, 49, 50, 54, 57, 78, 86, 89, 106, 111, 123, 125, 138, 156, 159, 169, 172, 182, 186, 187, 188, 192, 206, 228, 238, 255, 263], "is_subset": [13, 201], "valueerror": [13, 16, 24, 26, 29, 31, 32, 41, 49, 50, 58, 59, 62, 64, 65, 76, 80, 82, 85, 88, 89, 92, 96, 98, 133, 172, 174, 178, 180, 182, 186, 188, 201, 209, 211, 212, 231, 234, 244], "odd": [13, 16, 24, 26, 28, 37, 41, 49, 50, 54, 55, 57, 79, 88, 89, 99, 188, 193, 211], "appliedpred": [13, 24, 25, 26], "analysi": [14, 31, 32, 40, 49, 50, 55, 95, 113, 123, 124, 127, 163, 180, 189, 203, 206, 213], "vari": [14, 29, 31, 49, 63, 65, 96, 102, 106, 124, 157, 177, 200, 211, 231, 244], "hope": [14, 40, 102, 180], "research": [14, 41, 190, 205], "establish": [14, 45, 74, 105, 115, 203], "envis": 14, "along": [14, 31, 40, 49, 50, 51, 55, 57, 58, 59, 63, 64, 67, 69, 72, 74, 80, 82, 85, 92, 93, 101, 102, 105, 106, 113, 114, 117, 118, 119, 121, 122, 123, 126, 128, 156, 168, 169, 174, 177, 179, 182, 183, 188, 189, 209, 212, 240, 244, 246], "small": [14, 31, 32, 40, 41, 49, 53, 54, 76, 79, 85, 89, 98, 114, 118, 126, 156, 178, 179, 186, 187, 188, 205, 206, 211, 231, 258, 261, 263], "x_": [14, 31, 39, 49, 50, 54, 91, 184, 186, 189, 195, 206, 209, 214], "taylor": [14, 49, 55, 111, 123, 126, 184, 186, 189, 190, 200, 209], "let": [14, 16, 17, 29, 31, 40, 45, 49, 50, 59, 67, 72, 74, 78, 82, 85, 86, 89, 91, 103, 111, 126, 164, 169, 176, 180, 181, 182, 186, 188, 189, 190, 193, 200, 203, 205, 206, 209, 211, 212, 219, 222, 225, 229, 232, 242, 243, 247, 258, 261, 263, 264, 269], "df": [14, 51, 209], "c_": [14, 19, 50, 72, 74, 177, 181, 209], "grid": [14, 29, 30, 96, 179], "f_": [14, 49, 54, 57, 76, 121, 122, 123, 186, 192, 193, 203, 209], "constraint": [14, 85, 93, 98, 106, 107, 110, 111, 113, 114, 116, 120, 121, 122, 123, 126, 190], "formul": [14, 114, 120, 121, 122, 159, 177], "assess": 14, "brute": [14, 202, 206], "frequent": [14, 40, 188, 200, 212], "cover": [14, 89, 91, 102, 111, 168, 176, 219, 226, 259, 261], "treatment": [14, 74, 189], "shall": [14, 40, 74, 111, 126, 200, 203, 264], "job": [14, 41, 139, 190, 193], "truncat": [14, 41, 49, 85, 89, 93, 164, 179, 190, 192, 195, 196], "approx": [14, 19, 49, 76], "lowest": [14, 31, 40, 45, 89, 180, 195, 212], "2h": 14, "print_funct": 14, "x0": [14, 29, 31, 39, 49, 57, 68, 70, 72, 73, 89, 131, 183, 194, 195, 200, 205, 209, 211, 213, 231, 259], "x_0": [14, 39, 40, 50, 71, 72, 73, 186, 195, 206, 209, 213, 259], "fi": 14, "fip1": 14, "fip2": 14, "c_0": [14, 50, 72], "c_1": [14, 50, 72, 74, 200, 203, 209], "c_2": [14, 74, 200, 209], "2f": [14, 270], "c_i": [14, 74, 200, 203, 209], "nth": [14, 49, 54, 57, 78, 89, 184, 189, 190, 199, 205, 209, 213], "degre": [14, 32, 40, 47, 48, 54, 57, 65, 76, 80, 85, 92, 96, 98, 105, 106, 111, 112, 114, 120, 127, 131, 177, 180, 181, 184, 186, 188, 189, 192, 196, 199, 202, 203, 205, 206, 209, 211, 213, 238], "x_i": [14, 39, 57, 76, 85, 181, 184, 186, 189, 190, 193, 212], "m11": [14, 213], "m12": [14, 213], "m13": 14, "m21": [14, 213], "m22": [14, 213], "m23": 14, "m31": 14, "m32": 14, "m33": [14, 89], "3x3": [14, 64, 85, 242], "invert": [14, 26, 49, 50, 80, 82, 85, 98, 114, 161, 181, 183, 184, 188, 189, 209, 211, 212, 219, 265], "inv": [14, 41, 81, 85, 106, 113, 117, 118, 126, 148, 182, 209], "fim1": 14, "eight": [14, 193], "dfdxcheck": 14, "c3": [14, 52, 78, 80, 82, 89, 209, 213, 243, 270], "c5": [14, 209], "120": [14, 48, 49, 54, 55, 71, 89, 92, 93, 190, 192, 193, 195, 209, 259], "c7": [14, 40], "5040": [14, 54, 71, 189, 190], "quickli": [14, 40, 41, 49, 50, 53, 89, 186, 189, 202, 212, 228], "tediou": [14, 76], "certainli": [14, 61, 91, 228], "fine": [14, 49, 53, 77, 173, 183, 193, 205], "devis": 14, "xn": [14, 184], "x_n": [14, 32, 39, 50, 71, 85, 181, 184, 186, 189, 206, 212], "fn": [14, 76, 85, 180, 189], "fnm1": 14, "fnm2": 14, "dth": 14, "Of": [14, 16, 48, 74, 85, 209, 212, 231, 269], "cours": [14, 16, 33, 40, 48, 57, 74, 76, 85, 86, 89, 174, 182, 183, 187, 188, 200, 202, 203, 244, 269], "etc": [14, 16, 17, 26, 29, 31, 45, 49, 50, 54, 55, 67, 78, 79, 84, 89, 111, 130, 139, 143, 156, 159, 163, 171, 174, 176, 177, 179, 180, 181, 183, 186, 188, 193, 194, 201, 202, 203, 205, 209, 212, 213, 217, 225, 226, 231, 242, 246], "discrit": 14, "bengt": [14, 29], "fornberg": [14, 29], "weight": [14, 49, 57, 64, 66, 76, 78, 85, 143, 205, 249, 259], "gap": [15, 40, 89, 111, 190], "matur": [15, 16, 211, 212], "finit": [12, 15, 16, 26, 31, 35, 36, 37, 40, 48, 49, 50, 52, 53, 76, 78, 79, 145, 169, 178, 181, 184, 185, 187, 189, 190, 193, 195, 196, 199, 201, 206, 208, 209, 212, 231, 238, 239, 249, 260, 263, 269], "concret": [16, 30, 41, 49, 54, 55, 76, 78, 85, 89, 111, 164, 184, 188, 193, 249], "obviou": [16, 17, 40, 48, 180, 183, 192, 206, 263], "situat": [16, 53, 74, 177, 209, 211, 213, 229, 261], "refus": [16, 269], "roughli": [16, 49, 50, 90, 112, 209, 232], "possibli": [16, 31, 41, 47, 49, 74, 76, 89, 162, 163, 186, 200, 201, 226, 259, 265], "infinit": [16, 26, 48, 49, 50, 53, 54, 55, 62, 63, 76, 85, 89, 98, 116, 145, 164, 180, 188, 193, 194, 195, 198, 199, 200, 201, 205, 206, 207, 208, 211, 218, 231, 269, 270], "is_neg": [16, 184], "interprett": 16, "unknow": 16, "resolv": [16, 17, 49, 202, 205], "undecid": [16, 85, 183, 212, 265], "conclud": [16, 57, 72, 113, 174, 200, 211, 246], "particularli": [16, 53, 76, 183, 184, 203, 269, 270], "mix": [16, 22, 48, 55, 80, 85, 91, 168, 183, 184, 189, 193, 212, 215, 217, 219, 232], "ideal": [16, 31, 86, 108, 111, 120, 169, 176, 182, 184, 185, 186, 187, 188, 189, 190, 205, 212, 238], "slow": [16, 45, 49, 53, 76, 90, 102, 113, 131, 168, 177, 183, 184, 193, 194, 195, 196, 205, 209, 211, 212, 224, 225, 269], "indetermin": [16, 17, 49, 85, 186, 198, 211], "contradict": 16, "infer": [16, 25, 26, 41, 49, 76, 183, 192, 198, 203, 209, 225, 251], "prepar": [16, 106, 191], "presum": [16, 74, 183, 203, 226], "singletonregistri": [16, 49], "x1": [16, 39, 49, 54, 126, 131, 183, 184, 194, 195, 205, 209, 211, 213, 231], "x2": [16, 39, 49, 54, 126, 131, 183, 195, 209, 211, 213], "posifi": [16, 204], "_x": [16, 85, 124, 173, 176, 177, 184, 190, 205, 209, 225], "rep": [16, 40, 45, 49, 143, 180, 182, 183, 184, 187, 188, 189, 202, 205, 234], "feel": [16, 21, 126, 127, 205, 209], "among": [16, 30, 31, 32, 33, 40, 41, 50, 77, 90, 189, 209, 214, 217, 219, 241], "behaviour": [16, 74, 79, 103, 186, 190, 196, 199], "symbolc": 16, "implicit": [16, 31, 47, 49, 91, 110, 127, 179, 209, 211, 215, 218, 225, 226, 238, 240, 247, 261], "tailor": 16, "assumptions0": [16, 49], "extended_neg": [16, 49], "extended_nonneg": [16, 49], "extended_nonposit": [16, 49], "extended_nonzero": [16, 49, 193], "extended_posit": [16, 49], "extended_r": [16, 27, 49, 193, 208, 212], "hermitian": [16, 26, 49, 80, 81, 85, 142, 148, 159, 193], "irrat": [16, 26, 29, 49, 89, 183, 189, 193, 201, 263], "noninteg": [16, 27, 49, 183, 193], "nonneg": [16, 26, 49, 50, 51, 54, 57, 82, 126, 181, 183, 206, 213, 269], "nonposit": [16, 26, 49, 126], "nonzero": [16, 26, 28, 48, 49, 64, 85, 100, 181, 182, 183, 184, 193, 196, 212], "transcendent": [16, 26, 49, 57, 76, 183, 188, 193, 211, 212, 265, 270], "field": [16, 23, 27, 31, 49, 50, 51, 57, 67, 76, 131, 132, 171, 175, 180, 181, 182, 184, 185, 187, 189, 190, 191, 206, 211, 224, 238, 240, 242, 243, 245, 247], "antihermitian": [16, 26, 49], "mathbb": [16, 27, 32, 40, 48, 49, 50, 55, 57, 74, 80, 85, 123, 178, 180, 181, 183, 184, 186, 188, 189, 192, 200, 201, 203, 206, 212, 213, 269], "ii": [16, 54, 55, 74, 76, 89, 189, 193, 201, 209, 212], "cup": [16, 189, 201, 212], "pm": [16, 48, 74, 76, 181, 192, 200, 206, 209], "yi": 16, "composit": [16, 26, 30, 38, 40, 41, 49, 50, 67, 69, 76, 89, 92, 184, 186, 189, 192, 205, 212, 227], "2k": [16, 49, 74, 89, 206], "pariti": [16, 41], "product": [16, 23, 34, 37, 40, 41, 45, 47, 48, 49, 50, 51, 53, 54, 57, 59, 62, 64, 65, 72, 74, 76, 78, 79, 80, 82, 85, 89, 90, 98, 99, 100, 102, 113, 124, 126, 134, 138, 139, 142, 144, 145, 146, 148, 151, 153, 154, 156, 157, 159, 164, 165, 168, 169, 171, 175, 176, 177, 178, 180, 181, 182, 184, 186, 188, 189, 190, 193, 194, 195, 198, 201, 202, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 225, 228, 231, 238, 241, 245], "le": [16, 32, 45, 57, 74, 80, 89, 119, 186, 203, 213], "commutative_properti": [16, 49], "skew": [16, 72, 89, 213], "hermitian_matrix": 16, "complex_numb": [16, 27, 49], "algebraic_numb": [16, 27, 49], "transcendental_numb": [16, 49], "extended_real_number_lin": 16, "real_numb": [16, 27], "imaginary_numb": [16, 27, 49], "rational_numb": [16, 27], "irrational_numb": [16, 27, 49], "parity_": [16, 49], "prime_numb": [16, 49, 89], "composite_numb": [16, 49], "positive_real_numb": 16, "negative_numb": [16, 49], "inconsist": [16, 24, 26, 48, 164, 169, 172, 176, 205, 209, 212], "inconsistentassumpt": 16, "deal": [16, 31, 48, 49, 53, 61, 69, 74, 76, 95, 102, 106, 107, 111, 174, 176, 177, 181, 186, 189, 206, 207, 211, 222, 232, 234, 241, 246, 261, 263, 269], "is_zero_matrix": [16, 80, 182], "generalis": [16, 57, 74, 180], "gaussian": [16, 57, 76, 85, 89, 129, 185, 186, 189, 206, 211, 213, 254, 265], "notion": [16, 30, 164, 167, 180, 212, 241, 246], "chain": [16, 31, 40, 45, 49, 57, 66, 90, 176, 188, 213], "superset": [16, 29, 38, 44, 52, 126, 183, 201, 211], "vanilla": 16, "attach": [16, 43, 74, 90, 92, 106, 177, 225, 227, 232], "is_commut": [16, 76, 148, 157, 231], "is_complex": [16, 49], "is_finit": [16, 49], "permit": [16, 41, 51, 55, 79, 89, 179], "formal": [16, 30, 48, 49, 57, 74, 79, 128, 164, 183, 185, 186, 197, 200], "littl": [16, 30, 41, 59, 85, 89, 90, 113, 164, 187, 189, 193, 203, 205, 213, 228, 241], "n1": [16, 31, 40, 49, 50, 111, 126, 128, 132, 168, 206, 213, 238], "n2": [16, 31, 40, 49, 50, 126, 128, 132, 206, 213], "misunderstand": 16, "is_nonneg": [16, 184], "intent": [16, 31, 48, 49, 91, 226], "meaning": [16, 24, 26, 30, 50], "alon": [16, 50, 77, 186, 209, 211, 218, 231, 263, 264], "tempt": [16, 49, 89], "meet": [16, 50, 200], "criteria": [16, 49, 264], "noncommut": [16, 49, 72, 264], "finiteset": [16, 29, 30, 212, 213, 270], "s1": [16, 40, 48, 62, 65, 72, 98, 170, 180, 189, 196, 206, 231, 240], "s2": [16, 40, 41, 48, 62, 65, 98, 170, 180, 189, 196, 200, 206, 231, 240], "bool": [16, 18, 29, 31, 45, 47, 49, 50, 52, 55, 76, 77, 79, 80, 82, 85, 89, 91, 107, 143, 171, 173, 179, 188, 189, 191, 193, 194, 195, 200, 201, 205, 208, 211, 213, 225, 226, 231, 232, 238, 240, 261], "plai": [16, 48, 113, 121, 206, 261, 263, 264], "role": [16, 55, 191], "connect": [16, 43, 50, 51, 64, 65, 85, 90, 92, 103, 105, 113, 115, 180, 181, 182, 191, 209, 213, 231, 238], "is_finite_set": 16, "zero_matrix": 16, "setsymbol": 16, "is_compar": [16, 49], "capitalis": 16, "4142135623731": [16, 193, 211], "predict": [16, 159, 205, 231], "expreal": 16, "fuzzy_and": [16, 17], "fuzzy_or": [16, 17], "is_extended_nonneg": 16, "classmethod": [16, 23, 25, 26, 31, 33, 38, 40, 41, 43, 44, 49, 55, 56, 57, 64, 80, 85, 98, 145, 156, 157, 159, 182, 184, 188, 189, 193, 201, 219, 224], "is_extended_r": 16, "is_infinit": 16, "is_extended_neg": 16, "is_extended_posit": [16, 17], "_eval_is_finit": 16, "is_extended_nonposit": 16, "_eval_is_algebra": 16, "is_nonzero": [16, 64], "_eval_is_integ": 16, "_eval_is_zero": 16, "__new__": [16, 31, 40, 49, 264], "verifi": [16, 21, 29, 40, 46, 50, 51, 111, 180, 186, 192, 209, 211, 212, 214, 215, 245, 269], "importantli": [16, 190, 228], "reject": [16, 17, 89, 206, 234], "_eval_is_": 16, "is_algebra": [16, 49, 184], "interfer": [16, 193], "determinist": [16, 40, 76, 89, 186, 187], "reach": [16, 89, 98, 188, 189, 209], "claus": [16, 79], "flow": [16, 188], "inner": [16, 48, 74, 85, 142, 145, 146, 151, 153, 154, 157, 159, 169, 172, 182, 188, 195, 238], "optimis": [16, 209], "stage": [16, 30, 48, 89, 200, 269], "briefli": [16, 181, 186], "managedproperti": [16, 49], "metaclass": [16, 49], "default_assumpt": 16, "_ask": 16, "_eval_i": 16, "enumer": [16, 20, 33, 36, 38, 41, 44, 52, 56, 74, 79, 89, 188, 189, 203, 228, 231], "randomis": [16, 221, 256], "unresolv": 16, "factrul": 16, "_assume_rul": 16, "preprocess": [16, 76, 191], "defined_fact": 16, "full_impl": 16, "defaultdict": [16, 49, 231], "precomput": [16, 54, 89, 232], "static": [16, 23, 31, 40, 41, 43, 49, 55, 62, 63, 64, 65, 82, 93, 113, 120, 179, 193, 199, 201, 213, 225], "knowabl": 16, "stdfactkb": 16, "_eval_is_r": [16, 49, 56, 189], "_assumpt": [16, 49], "amongst": [16, 211], "indirectli": 16, "manifest": [16, 181], "jointli": 16, "fundament": [16, 29, 32, 39, 67, 74, 76, 85, 164, 183, 188, 206, 209, 213, 265], "theoret": [16, 30, 32, 40, 50, 187, 188, 203, 261], "isposit": 17, "xpo": 17, "xneg": 17, "strictgreaterthan": 17, "analogu": [17, 27, 48, 63, 183, 184], "piecewis": [17, 31, 48, 56, 57, 76, 92, 157, 193, 195, 196, 211, 212, 213, 232, 259], "nonetyp": [17, 31], "quirk": 17, "both_posit": 17, "falsei": 17, "both_positive_bett": 17, "negat": [17, 27, 49, 55, 79, 98, 169, 182, 184, 186, 189], "fuzzy_not": 17, "both_positive_best": 17, "silent": [17, 53, 89, 225], "carefulli": [17, 49, 169, 186, 195], "truth": [17, 24, 25, 26, 27, 28, 49, 80, 205, 251], "bitwis": [17, 52, 79], "footnot": [17, 164, 264, 265, 268], "combinatori": [33, 41, 48, 49, 56, 57, 195, 204, 231, 233, 269], "dig": [31, 264], "th": [23, 32, 40, 41, 47, 50, 51, 53, 54, 55, 57, 78, 79, 85, 89, 106, 184, 186, 188, 189, 195, 198, 203, 206, 209, 211, 213, 214, 219], "handler": [18, 24, 25, 26, 27, 28, 85], "spectrum": [], "matter": [29, 38, 41, 48, 49, 54, 74, 76, 124, 200, 231, 263, 264], "use_unicod": [29, 30, 31, 53, 57, 76, 77, 85, 93, 98, 131, 173, 178, 180, 181, 192, 193, 194, 212, 213, 259, 263, 265, 268, 269, 270], "np": [56, 72, 89, 111, 225, 232], "arang": [225, 258], "ultim": [55, 164], "cosin": [49, 55, 57, 64, 76, 103, 105, 169, 177, 189, 190, 196, 202, 213, 238, 269], "todai": 180, "operatornam": [54, 55, 57, 74, 76, 178, 181, 189, 193, 196, 201, 203, 211], "modern": [31, 180, 187, 193], "recal": [49, 85, 186, 188, 203, 261, 263, 264, 270], "redefin": [41, 49, 121, 123, 181, 232], "antipattern": 262, "stai": 188, "trig": [49, 76, 189, 193, 202, 205, 269], "wouldn": [], "cheap": [49, 89], "as_two_term": 49, "split": [31, 49, 50, 53, 74, 76, 91, 186, 188, 191, 192, 193, 213, 219, 224, 231, 236, 264, 269], "hadn": [], "wors": [79, 205], "expand_trig": 258, "mid": [32, 50, 53, 93, 201, 206], "troubl": 57, "bigger": [31, 49, 54, 203, 209, 269], "deduc": [31, 74, 79, 203, 263], "disallow": [49, 189, 194, 205, 227], "great": [128, 190, 193, 206, 232], "simplest": [30, 79, 85, 89, 90, 178, 179, 190, 194, 202, 205, 209, 259, 269], "\u03c0": [53, 131, 193, 212, 259, 263, 269, 270], "as_independ": [49, 212], "coeff": [49, 51, 79, 126, 184, 188, 189, 199, 205, 209, 211, 219, 269], "apart": [23, 40, 45, 49, 53, 55, 76, 174, 181, 184, 186, 189, 192, 195, 206, 212, 219, 242, 244, 264], "is_even": [37, 40, 41], "nonreal": 211, "cosh": [49, 56, 57, 68, 74, 190, 193, 194, 203, 205, 211, 265, 269], "5919532755215": [], "_eval_is_nonneg": [], "exercis": [40, 228, 262, 269], "_eval_is_posit": [], "as_add": 49, "pi_": [], "fuzzy_": [], "deduct": 31, "subtl": 202, "nontrivi": [40, 49, 89], "_eval_evalf": 189, "prec": [49, 59, 65, 89, 96, 178, 184, 189, 190, 205, 211], "dp": [31, 49, 52, 57, 89, 183, 184, 211, 227], "53": [50, 52, 85, 128, 181, 183, 184], "459697694131860": [], "hook": [90, 193], "_eval_rewrit": 49, "rewritten": [49, 54, 55, 57, 76, 111, 156, 200, 205, 209, 211, 269], "caller": [], "ve": 113, "nonintegr": [], "iff": [27, 41, 50, 79, 85, 177, 180, 188, 203, 206, 224], "isint": [], "xy": [29, 30, 63, 85, 108, 177, 179, 180, 186, 193, 205, 212, 247, 264, 269], "happi": [], "demand": 22, "_eval_expand_": [], "expand_": [], "predefin": [51, 126, 183, 193, 194, 205, 212, 219, 238, 242, 250], "expand_log": [31, 205], "_eval_expand_trig": [], "sophist": [90, 211], "x_1": [32, 39, 40, 50, 54, 71, 85, 154, 181, 184, 186, 189, 195, 206, 212], "ldot": [32, 39, 40, 48, 49, 50, 54, 57, 74, 89, 93, 164, 180, 181, 184, 186, 188, 193, 196, 200, 203, 206, 211, 214, 269], "x_k": [50, 186], "dy": [31, 51, 66, 85, 92, 101, 126, 189, 193, 206, 209, 210, 259], "dz": [92, 101, 203], "argumentindexerror": [], "varion": [], "middl": [57, 65, 74, 85, 93, 139, 179, 203, 269], "iverson": [], "printmethod": 193, "latexprint": 256, "_latex": 193, "_print": 193, "_m": 57, "_n": [50, 54, 57, 76, 203, 212], "arcversin": [], "aversin": [], "im": [28, 49, 56, 74, 83, 180, 193, 194, 201, 209, 265], "sinh": [29, 49, 53, 56, 57, 68, 74, 190, 193, 194, 203, 269], "expand_complex": [], "analog": [42, 48, 50, 54, 124, 176, 177, 180, 181, 182, 186, 198, 214, 231], "vers": [], "geometr": [51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 85, 128, 177, 180, 187, 213, 255, 265], "angl": [23, 55, 57, 58, 59, 60, 62, 63, 64, 65, 100, 105, 110, 111, 113, 114, 115, 123, 128, 131, 132, 133, 156, 164, 169, 176, 177, 178, 193, 202, 212, 238, 239, 242, 269], "horizont": [30, 59, 62, 64, 80, 131, 179, 182, 193], "distanc": [30, 33, 41, 59, 62, 63, 64, 65, 92, 93, 101, 102, 105, 114, 115, 128, 132, 162, 172, 174, 246], "rightmost": 159, "scientificamerican": [], "uniti": [55, 57, 74, 154, 188], "secret": 50, "teacher": [], "taught": 76, "nr": [], "sake": [54, 206], "simplic": [203, 205, 209, 211], "divisor": [27, 40, 49, 50, 85, 89, 180, 181, 183, 184, 186, 187, 188, 189, 192], "hardwar": 31, "regard": [32, 50, 57, 77, 127, 159, 180, 181, 195, 211, 212], "c99codeprint": [31, 193], "cxx11codeprint": 193, "cfunction": 250, "e2": [29, 49, 52, 59, 66, 76, 85, 89, 96, 111, 183, 188, 200, 209, 212, 213, 231], "93accumulate_oper": [], "fused_multipli": [], "93add": [], "ccode": [31, 193, 218, 226], "cxxcode": [31, 193], "_ccode": 193, "_y": [124, 173, 176, 177], "_z": [76, 124, 176, 177, 213], "_cxxcode": 193, "std": [193, 213], "28318530717959": [], "trigonometricfunct": [], "inversetrigonometricfunct": [], "reciprocaltrigonometricfunct": [], "bypass": 209, "fragil": [], "tend": [22, 31, 49, 186, 188, 198, 200, 203, 262, 269], "prone": [31, 49], "move": [40, 41, 49, 50, 63, 65, 92, 105, 113, 114, 120, 147, 172, 176, 177, 204, 205, 214, 223, 244], "task": [18, 20, 55, 120, 126, 183, 188, 259, 266], "deeper": [18, 217, 264], "explor": [18, 121, 122, 179, 188, 228, 269], "diophantin": [19, 89, 186, 207], "739085133215161": [19, 211], "9y": 19, "3x": [19, 49, 91, 186, 212, 261], "cc": [19, 50, 65, 178, 181, 183, 185, 189, 265], "ax": [23, 50, 53, 59, 62, 74, 81, 85, 92, 96, 105, 131, 156, 169, 177, 178, 179, 182, 190, 206, 209, 212, 214, 215, 218, 238, 239, 241, 244, 246, 269], "bx": [74, 213, 219], "4ac": 206, "2a": 213, "4xy": [19, 174, 246], "8y": 19, "7y": [19, 206], "yield": [29, 31, 40, 49, 50, 57, 73, 74, 89, 92, 98, 104, 153, 181, 186, 188, 189, 194, 195, 200, 201, 202, 205, 206, 211, 228, 231, 265], "rearrang": [99, 106, 121, 122, 143, 209], "eqn": [29, 212], "solutions_set": [], "solution_set": [], "256": [31, 40, 89, 189, 193], "techniqu": [32, 44, 74, 76, 193, 195, 205, 209, 212, 265], "solution_outside_2_3": [], "interv": [27, 29, 40, 49, 53, 55, 57, 58, 59, 62, 65, 74, 76, 79, 89, 145, 154, 184, 186, 188, 189, 196, 199, 208, 212, 213, 255, 270], "calculu": [26, 49, 54, 76, 85, 126, 174, 175, 202, 213, 243, 244, 245, 248, 249, 260, 262, 267], "critic": [29, 132, 176, 188, 212], "minima": 212, "critical_point": [], "point1": [170, 240], "point2": [170, 240], "curvatur": [128, 132], "solution_list": [], "membership": [47, 188, 201], "candid": [49, 85, 89, 186, 205], "solution_set_arg": [], "quadrat": [49, 50, 76, 89, 180, 184, 188, 189, 206, 211, 213], "rootof": [55, 189], "reveal": [31, 89, 212, 264], "five": [30, 38, 74, 193, 206], "abel": 85, "ruffini": 85, "theorem": [37, 50, 57, 59, 65, 75, 76, 80, 85, 89, 101, 102, 113, 159, 168, 176, 180, 183, 186, 200, 203, 206, 212, 245, 255], "expression_expand": [], "symbolic_expand": [], "nois": [], "neglig": [], "compon": [30, 31, 45, 49, 51, 64, 76, 82, 85, 99, 108, 120, 124, 131, 156, 161, 168, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 191, 213, 215, 218, 219, 228, 231, 238, 240, 243, 244], "18482169793536e": [], "55872552179222e": [], "fifth": [], "ill": 162, "wilkinson": 80, "crootof": [49, 189, 209, 211], "expression_complex": [], "symbolic_complex": [], "caution": [41, 49, 55, 205], "all_root": [78, 89, 189], "expression_complex_poli": [], "solvabl": [40, 206, 209, 212, 270], "groebnerbasi": [181, 189, 192], "lambert": [55, 76, 190], "decompos": [40, 41, 47, 49, 51, 55, 60, 85, 89, 143, 152, 153, 155, 184, 189, 192, 213], "reflect": [33, 37, 41, 49, 59, 60, 65, 78, 128, 131, 132, 169], "lack": [31, 51, 53, 108, 193, 259], "765": [], "352": [], "181": [], "08": 113, "total": [32, 38, 40, 49, 54, 65, 78, 79, 80, 82, 113, 114, 121, 128, 132, 138, 143, 156, 165, 178, 184, 186, 189, 202, 205, 209, 217, 219, 247], "scroll": [], "56": [52, 76, 89, 189], "1307": [], "432": [62, 188], "434607": [], "144": [54, 76, 178], "0509758447494279": [], "313552108895239": [], "14751999969868": [], "estim": [29, 48, 49, 53, 74, 259], "preserv": [30, 31, 40, 49, 85, 157, 184, 189, 194, 195, 205], "77245385090552": [], "4142135623730951": [], "varieti": [31, 32, 41, 49, 90, 93, 124, 180, 187, 189, 213, 231], "exclud": [31, 48, 49, 76, 85, 104, 126, 181, 184, 186, 189, 199, 209, 211, 224, 227, 231], "risk": [], "parse_latex": 91, "central": [40, 46, 57, 59, 65, 103, 108, 124, 179, 188, 206, 213], "pypi": 21, "continuum": [21, 254], "qtconsol": [21, 268], "nicer": [21, 49, 118], "setupegg": 21, "enthought": 21, "canopi": 21, "activepython": 21, "spack": 21, "freshli": 21, "starter": 21, "sy": [21, 31, 51, 111, 126, 193, 224, 235, 243, 261], "wherev": [21, 111, 205, 212, 241], "visit": [21, 33, 40, 49, 54, 266], "chat": 21, "gitter": [21, 265], "excel": [21, 53, 188, 267], "ticket": 21, "export": [22, 193], "latin": 22, "slightli": [22, 31, 45, 89, 91, 113, 179, 180, 184, 186, 189, 193, 203, 205], "clunki": 22, "collid": [22, 219], "win": 22, "throwawai": 22, "surviv": 22, "foo": [22, 29, 31, 49, 154, 173, 231, 234], "report": [22, 29, 40, 62, 80, 89, 190, 201, 212, 224, 265, 270], "stick": 22, "_clash1": [22, 49], "_clash2": [22, 49], "multi": [22, 49, 50, 112, 120, 126, 139, 143, 153, 179, 193, 212], "_clash": [22, 49], "union": [22, 27, 29, 31, 38, 40, 47, 79, 91, 180, 188, 193, 199, 200, 208, 212, 213, 231], "sympif": [22, 49], "real_field": 23, "instanti": [23, 30, 31, 41, 49, 57, 62, 64, 65, 82, 85, 149, 157, 169, 179, 180, 184, 188, 213, 238, 241], "q1": [23, 85, 102, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 127, 168, 169, 171, 172, 173, 176, 177, 183, 238, 239], "q2": [23, 102, 111, 113, 114, 115, 117, 118, 119, 121, 122, 127, 168, 169, 171, 172, 173, 176, 177, 183, 238, 239], "r1": [23, 59, 62, 78, 92, 93, 132, 169, 174, 189, 238], "euclideanspac": 23, "realnormedalgebra": 23, "r2": [23, 51, 62, 78, 80, 92, 93, 132, 169, 189, 193, 205, 238], "q3": [23, 102, 113, 115, 117, 118, 119, 121, 169, 171, 172, 177, 238, 239], "axi": [23, 42, 54, 55, 59, 60, 62, 63, 65, 71, 74, 76, 82, 85, 92, 96, 101, 105, 111, 113, 114, 117, 118, 119, 123, 126, 127, 128, 131, 132, 156, 169, 171, 172, 174, 176, 177, 179, 184, 212, 238, 239, 242, 244, 247], "bi": [23, 49, 55, 57, 76, 177, 200, 209], "cj": 23, "dk": [23, 92, 188], "atan2": [23, 28, 51, 56, 133, 193, 238], "atan": [23, 28, 51, 53, 56, 60, 65, 73, 76, 114, 127, 128, 190, 193, 195], "arc_coplanar": 23, "arc": [23, 55, 269], "orient": [23, 61, 65, 80, 111, 113, 114, 117, 124, 126, 169, 172, 174, 176, 177, 186, 231, 238, 245, 246], "coplanar": [23, 63, 177], "parallel": [23, 59, 62, 63, 65, 76, 95, 98, 101, 176, 177, 186, 243, 247], "vector_coplanar": 23, "is_pur": 23, "mathbf": [23, 82, 120, 121, 122, 124, 164, 168, 169, 173, 174, 176, 177, 193, 203, 214, 241, 242, 244, 246, 247], "versor": 23, "0i": 23, "0j": [23, 183], "0k": 23, "vector_part": 23, "from_axis_angl": 23, "rotat": [23, 37, 40, 42, 49, 58, 59, 60, 62, 64, 65, 80, 85, 92, 93, 105, 113, 115, 117, 119, 124, 127, 143, 156, 169, 172, 174, 176, 177, 178, 179, 231, 238, 239, 242, 244, 246], "radian": [23, 55, 58, 59, 60, 62, 63, 64, 85, 96, 111, 132, 133, 169], "from_rotation_matrix": 23, "orthogon": [23, 26, 56, 64, 78, 85, 157, 169, 177, 185, 238, 239, 245], "det": [23, 85, 86, 126, 177, 182, 265], "index_vector": 23, "mod": [23, 50, 55, 79, 85, 86, 89, 155, 180, 182, 183, 184, 186, 188, 189, 193, 195, 203, 206, 249], "magnitud": [23, 31, 48, 49, 53, 57, 90, 92, 93, 96, 114, 126, 157, 166, 169, 174, 177, 179, 238, 244, 246], "norm": [23, 85, 157, 169, 184, 186, 188, 189], "scalar_part": 23, "is_zero_quaternion": 23, "mensor": 23, "60": [23, 35, 40, 42, 48, 49, 54, 57, 76, 85, 89, 92, 93, 192, 193, 206, 209, 231], "pth": 23, "668": 23, "224": [23, 162, 187], "336": 23, "448": 23, "pow_cos_sin": 23, "900": 23, "1800": [23, 50], "2700": [23, 92], "3600": [23, 54], "rotate_point": 23, "pin": [23, 92, 93, 105], "to_axis_angl": 23, "to_rotation_matrix": 23, "assumptionkei": 24, "proposit": [24, 26, 79], "is_tru": [24, 26, 27], "assumptionscontext": [24, 25, 26], "global_assumpt": [24, 25, 26], "discern": [24, 26], "refin": [24, 26, 49, 80, 180, 184, 188, 189, 205, 226], "progress": [24, 26, 89, 226], "inherit": [24, 49, 56, 79, 82, 83, 105, 148, 157, 178, 193, 213, 218, 226, 227], "askhandl": 24, "mere": [25, 26, 31, 53, 154], "thin": [25, 85, 116, 128], "undefinedpred": [25, 26], "sexi": [25, 26], "sexyprimepred": [25, 26], "sexyprim": [25, 26], "int1": [25, 26], "int2": [25, 26], "assump": [25, 26], "r3": [25, 78, 92, 93, 205], "predicate_": [25, 26], "mathematical_log": [25, 26], "r4": [25, 78, 92], "sexy_prim": [25, 26], "resolut": [25, 26, 206], "askpredicatehandl": [25, 26], "r5": [26, 205], "r6": 26, "tautolog": 26, "symmetr": [26, 28, 32, 37, 40, 41, 45, 65, 80, 81, 82, 85, 89, 168, 178, 184, 186, 189, 192, 201, 203, 219, 231], "unitari": [26, 76, 89, 143, 148], "triangular": [26, 80, 81, 85, 182, 188, 211, 213, 247], "diagon": [26, 54, 80, 81, 82, 85, 88, 110, 131, 182, 215, 216], "rank": [26, 31, 32, 33, 38, 40, 41, 43, 44, 45, 64, 78, 85, 86, 169, 171, 180, 182, 184, 186, 188, 214, 218, 219, 265], "singular": [26, 31, 41, 49, 53, 55, 56, 71, 72, 74, 76, 85, 92, 94, 123, 169, 180, 187, 200, 209, 212, 238, 249, 259], "notabl": [26, 31, 52, 57, 74, 90, 183], "truth_maintenance_system": 26, "istruepred": 27, "gt": [27, 31, 213, 231], "istruehandl": 27, "commutativepred": 27, "commutativehandl": 27, "finitepred": 27, "nor": [27, 29, 49, 79, 89, 133, 179, 189, 200, 202, 209, 219, 238], "nan": [27, 28, 55, 57, 104, 205, 213, 259], "finitehandl": 27, "r7": 27, "infinitepred": 27, "infinitehandl": 27, "symmetricpred": 27, "transpos": [27, 30, 80, 82, 85, 98, 126, 142, 169, 177, 182, 188, 206, 214, 219, 220, 265], "symmetrichandl": 27, "r8": 27, "symmetric_matrix": 27, "invertiblepred": 27, "fullrank": [27, 31], "invertiblehandl": 27, "r9": 27, "invertible_matrix": 27, "orthogonalpred": 27, "tm": [27, 132], "mm": [27, 30, 89, 106, 113, 117, 118, 157, 182], "orthogonalhandl": 27, "r10": 27, "orthogonal_matrix": 27, "unitarypred": 27, "unitaryhandl": 27, "r11": 27, "unitary_matrix": 27, "positivedefinitepred": 27, "tmz": 27, "column": [27, 30, 31, 32, 77, 79, 80, 82, 85, 86, 88, 98, 106, 110, 113, 124, 154, 161, 169, 173, 178, 182, 188, 193, 209, 212, 218, 238], "positive_definit": 27, "positivedefinitehandl": 27, "r12": 27, "definite_matrix": 27, "uppertriangularpred": 27, "m_": [27, 122, 186], "ij": [27, 159, 164, 213], "zeromatrix": [27, 82], "upper_triangular": [27, 80], "uppertriangularhandl": 27, "r13": 27, "uppertriangularmatrix": 27, "lowertriangularpred": 27, "lower_triangular": [27, 80], "lowertriangularhandl": 27, "r14": 27, "lowertriangularmatrix": 27, "diagonalpred": 27, "diagonalhandl": 27, "r15": 27, "diagonal_matrix": 27, "fullrankpred": 27, "row": [27, 30, 31, 32, 38, 41, 49, 54, 80, 81, 82, 85, 86, 88, 89, 98, 110, 111, 113, 124, 126, 127, 154, 169, 177, 182, 188, 193, 203, 212, 213, 218, 232, 238, 239], "linearli": [27, 31, 57, 73, 85, 186, 209, 211, 219], "fullrankhandl": 27, "squarepred": 27, "squarehandl": 27, "r16": 27, "square_matrix": 27, "integerelementspred": 27, "integer_el": 27, "integerelementshandl": 27, "realelementspred": 27, "real_el": 27, "realelementshandl": 27, "complexelementspred": 27, "complex_el": 27, "complexelementshandl": 27, "singularpred": 27, "singularhandl": 27, "fore": 27, "r17": 27, "singularmatrix": 27, "normalpred": 27, "normalhandl": 27, "r18": 27, "normal_matrix": 27, "triangularpred": 27, "triangularhandl": 27, "r19": 27, "triangular_matrix": 27, "unittriangularpred": 27, "unit_triangular": 27, "unittriangularhandl": 27, "evenpred": 27, "evenhandl": 27, "oddpred": 27, "oddhandl": 27, "primehandl": 27, "subject": [27, 59, 65, 93, 102, 127, 188], "compositepred": 27, "compositehandl": 27, "positivepred": 27, "positivehandl": 27, "negativepred": 27, "negativehandl": 27, "zeropred": 27, "zerohandl": 27, "nonzeropred": 27, "nonzerohandl": 27, "nonpositivepred": 27, "nonpositivehandl": 27, "nonnegativepred": 27, "nonnegativehandl": 27, "integerpred": 27, "integerhandl": 27, "r20": 27, "rationalpred": 27, "rationalhandl": 27, "r21": 27, "irrationalpred": 27, "ratio": [27, 39, 40, 48, 49, 53, 54, 57, 59, 62, 63, 64, 65, 81, 89, 98, 132, 164, 193, 202, 205, 211], "irrationalhandl": 27, "r22": 27, "realpred": 27, "disjoint": [27, 30, 38, 41, 189, 201, 231], "realhandl": 27, "r23": 27, "extendedrealpred": 27, "extendedrealhandl": 27, "hermitianpred": 27, "hermitianhandl": 27, "r24": 27, "hermitianoper": [27, 148], "complexpred": 27, "complexhandl": 27, "r25": 27, "imaginarypred": 27, "imaginaryhandl": 27, "r26": 27, "antihermitianpred": 27, "antihermitianhandl": 27, "r27": 27, "algebraicpred": 27, "askalgebraicpredicatehandl": 27, "r28": 27, "algebraichandl": 27, "transcendentalpred": 27, "transcedent": 27, "refine_pow": 28, "refine_ab": 28, "refine_arg": 28, "refine_atan2": 28, "refine_im": 28, "refine_matrixel": 28, "refine_r": 28, "refine_sign": 28, "lagrang": [29, 49, 116, 120, 189, 206], "lagrangian": [29, 106, 114, 119, 120, 122, 123], "euler_equ": 29, "r29": 29, "93lagrange_equ": 29, "decreas": [29, 31, 41, 186], "monoton": [29, 31, 66], "is_decreas": 29, "lopen": [29, 49, 201, 208, 213], "ropen": [29, 55, 201, 213], "is_increas": 29, "72": [29, 49, 62, 85, 89, 92, 178, 192], "is_monoton": 29, "is_strictly_decreas": 29, "is_strictly_increas": 29, "monotonicity_help": 29, "held": [29, 50, 123, 217, 269], "r30": 29, "mathematical_singular": 29, "interpol": [29, 58, 126, 186, 189], "finite_diff_weight": [29, 49, 259], "apply_finite_diff": [29, 49, 259], "differentiate_finit": [29, 49, 259], "finite_diff": [29, 49], "x_list": [29, 259], "y_list": [29, 259], "cube": [29, 31, 33, 40, 42, 55, 76, 186, 187, 206, 212, 247], "xlist": 29, "55271367880050e": 29, "indexedbas": [29, 31, 48, 49, 193, 211, 217, 218, 225], "idx": [29, 31, 193, 217, 218, 225], "zip": [29, 39, 50, 79, 89, 189, 199, 206, 209, 228, 231], "region": [29, 57, 66, 76, 179, 201, 209, 212, 213, 238, 240, 247], "bewar": [29, 57], "phenomenon": [29, 164, 186, 196, 264], "90": [29, 40, 47, 57, 80, 85, 91, 92, 102, 111, 127, 193, 195, 205, 213, 226], "finitediff": 29, "wrt": [29, 31, 49, 51, 57, 66, 85, 111, 126, 169, 170, 186, 189, 238, 239, 240, 244], "len": [29, 37, 38, 39, 40, 41, 45, 47, 49, 50, 54, 57, 64, 74, 79, 114, 128, 132, 143, 153, 189, 205, 209, 218, 231], "nearest": [29, 188], "furthest": [29, 50], "sublist": [29, 45, 50, 76, 156, 259], "fd": [29, 31, 159], "0th": [29, 41, 50, 57], "1st": [29, 41, 89, 98, 209, 210, 234, 259], "classic": [29, 55, 57, 85, 145, 161, 169, 177, 180, 254], "forward": [29, 31, 80, 98, 113, 120, 152, 176, 205, 224], "pai": 29, "attent": [29, 40, 55], "gridpoint": 29, "plan": [29, 102, 184, 207, 268], "mycoeff": 29, "3rd": [29, 41, 55, 89, 126, 189, 211, 214, 231], "2nd": [29, 41, 50, 89, 98, 126, 209, 214, 231], "cost": [29, 31, 89, 114, 212, 263], "poorer": 29, "grand": 29, "r31": 29, "51": [29, 85, 89], "184": [29, 209], "1988": [29, 138, 156, 186, 187], "699": 29, "706": [29, 85], "1090": [29, 189], "s0025": [29, 89], "5718": [29, 89], "0935077": 29, "continuous_domain": [29, 208], "tan": [29, 49, 54, 56, 76, 91, 104, 117, 118, 119, 123, 190, 192, 193, 200, 202, 209, 212, 269], "function_rang": 29, "is_convex": [29, 65], "sym": [29, 39, 40, 45, 49, 54, 169, 193, 196, 201, 205, 206, 211, 213, 219, 231, 269], "convex": [29, 65, 66, 76], "unspecifi": [29, 49, 64, 259], "multivari": [29, 49, 57, 180, 181, 183, 184, 185, 187, 189, 190, 200, 205, 211, 212, 213, 269], "concav": [29, 128], "r32": 29, "convex_funct": 29, "r33": 29, "ifp": 29, "illinoi": 29, "edu": [29, 33, 40, 41, 50, 52, 54, 76, 85, 89, 187, 192, 202, 205, 206, 209, 213, 238], "angelia": 29, "l3_convfunc": 29, "r34": 29, "logarithmically_convex_funct": 29, "r35": 29, "logarithmically_concave_funct": 29, "r36": 29, "concave_funct": 29, "lcim": 29, "mixtur": [29, 31, 66, 180, 226], "incommensur": 29, "not_empty_in": [29, 212], "finset_intersect": 29, "finite_set": [29, 201], "tracker": [29, 201, 212, 265], "aperiod": 29, "smallest": [29, 43, 55, 62, 64, 71, 79, 85, 89, 156, 169, 184, 229, 231], "verif": [29, 182, 211], "reliabl": [29, 49, 209, 229, 259], "henc": [29, 31, 39, 40, 49, 51, 55, 57, 61, 74, 77, 79, 89, 174, 179, 180, 181, 186, 193, 203, 206, 210, 212, 224, 228, 242, 243, 244, 264, 269], "stationary_point": 29, "stationari": [29, 213], "tikz": 30, "joyofcat": 30, "adamek": 30, "herrlich": 30, "strecker": 30, "joi": 30, "cat": [30, 168], "book": [30, 40, 50, 55, 106, 111, 124, 125, 144, 187, 192, 193, 262], "katmat": 30, "uni": [30, 76, 231], "bremen": 30, "de": [30, 50, 89, 164, 178, 179, 190, 195, 206, 207, 209, 231], "acc": [30, 126, 172, 176], "embryon": 30, "morphism": [30, 180], "codomain": [30, 180, 188], "arrow": [30, 78, 92, 179, 193], "namedmorph": 30, "prohibit": [30, 41, 42, 169], "identitymorph": 30, "compositemorph": 30, "compos": [30, 49, 50, 114, 123, 161, 163, 164, 176, 180, 184, 188, 189, 190, 193, 195, 205], "circ": [30, 49, 60, 66, 74, 82], "new_nam": 30, "forget": [30, 269], "id_a": 30, "id_b": 30, "commutative_diagram": 30, "quadrupl": [30, 189], "mbox": 30, "hom": 30, "id": [30, 45, 55], "rightarrow": [30, 41, 45, 50, 54, 55, 57, 71, 72, 74, 76, 79, 80, 89, 179, 188, 200, 212, 231, 259], "monoid": 30, "pare1970": 30, "accompani": 30, "premis": 30, "conclus": [30, 49], "carri": [30, 31, 49, 151, 157, 164, 180, 183, 186, 188, 190, 191, 232], "premises_kei": 30, "et": [30, 76, 138, 186, 189, 190, 202, 205], "pareigi": 30, "functor": 30, "1970": [30, 85], "is_subdiagram": 30, "subdiagram": 30, "d1": [30, 45, 169, 180, 200, 213, 238], "subdiagram_from_object": 30, "veryuniqu": 30, "diagram_draw": 30, "diagramgrid": 30, "analys": [30, 96, 98, 126, 213], "drawn": [30, 40, 78, 179, 183, 191], "moprhism": 30, "strive": 30, "nevertheless": 30, "laid": [30, 111, 156], "width": [30, 31, 77, 173, 179, 189, 193, 224], "height": [30, 31, 65, 82, 128, 179, 180, 193, 200, 247], "emploi": [30, 48, 53, 76, 89, 189, 192, 207, 209, 213], "lai": 30, "layout": 30, "sequenti": [30, 33, 50, 55, 238, 239], "test_draw": 30, "lemma": [30, 40, 74, 181], "fivelemma": 30, "five_lemma": 30, "arrowstringdescript": 30, "curving_amount": 30, "looping_start": 30, "looping_end": 30, "horizontal_direct": 30, "vertical_direct": 30, "label_posit": 30, "pic": 30, "princip": [30, 50, 55, 57, 74, 76, 86, 100, 113, 132, 180, 181, 182, 183, 184, 186, 188, 189, 190], "offset": [30, 31, 49, 54, 57, 218], "cell": 30, "vertic": [30, 33, 42, 43, 59, 60, 62, 64, 65, 66, 76, 78, 80, 85, 93, 110, 115, 131, 139, 178, 179, 182, 188, 193, 201, 231, 247], "disregard": 30, "unexplain": 30, "astr": 30, "dr": [30, 51, 193, 209], "12mm": 30, "loop": [30, 31, 89, 98, 169, 179, 190, 193, 209, 228, 231, 264], "correspondingli": 30, "label_displac": 30, "arrow_styl": 30, "dash": 30, "xypicdiagramdraw": 30, "formatt": 30, "utilis": 30, "xypic": 30, "drawer": 30, "xymatrix": 30, "ld": 30, "arrow_formatt": 30, "therebi": 30, "default_arrow_formatt": 30, "farther": 30, "centr": [30, 46, 179], "default_formatt": 30, "45": [30, 49, 54, 65, 85, 89, 189, 190, 206], "_3mm": 30, "default_curving_amount": 30, "cm": [30, 126, 213], "_1cm": 30, "default_curving_step": 30, "h1": [30, 108], "1cm": 30, "rr": [30, 49, 67, 182, 183, 185, 189, 190], "h_": [30, 40, 45, 57, 76], "_2cm": 30, "mask": [30, 193], "diagram_format": 30, "proceed": [30, 32, 74, 76, 125, 187, 203], "xypic_draw_diagram": 30, "shortcut": [30, 49, 81, 177, 193, 201, 205, 269], "insert": [30, 32, 80, 91, 92, 154, 159, 193, 213, 234], "preview_diagram": 30, "png": [30, 77, 85, 92, 93, 96, 173, 179, 193, 196], "brief": [31, 212, 224, 246], "fab": [31, 193], "cse_main": [31, 194, 205], "cse": [31, 90, 102, 148, 194, 226, 232], "meat": 31, "lightweight": [31, 188, 263], "pycod": [31, 193], "lambdarepr": [31, 193, 232], "aesara_funct": [31, 90, 193], "float80": [31, 193], "assign_to": [31, 193], "type_alias": [31, 193], "0l": [31, 193], "powl": [31, 193], "c99": [31, 193, 226], "expm1": [31, 193], "ternari": [31, 49, 193, 206], "thrown": [31, 193], "fcode": [31, 193], "contract": [31, 51, 99, 159, 193, 202, 215, 216, 217, 218, 219, 220], "len_i": [31, 193], "mat_1": 31, "mat_2": 31, "jscode": [31, 193], "user_funct": [31, 193], "argument_test": [31, 193], "cfunction_str": [31, 193], "octav": [31, 126, 226, 256], "custom_funct": [31, 193], "existing_octave_fcn": [31, 193], "is_matrix": [31, 193], "my_mat_fcn": [31, 193], "my_fcn": [31, 193], "mat": [31, 82, 128, 153, 193], "octave_cod": [31, 193], "summat": [31, 48, 49, 53, 54, 57, 159, 187, 193, 196, 205, 213, 214, 217, 218, 219, 225], "mathematica_cod": [31, 193], "g1": [31, 34, 39, 40, 74, 85, 98], "g2": [31, 34, 39, 40, 74, 78, 85, 98], "gamma_1": [31, 101], "gamma_2": [31, 101], "\u03b3\u2081": 31, "\u03b3\u2082": 31, "\u03b2": [31, 178], "h_i": [31, 45], "c89": [31, 193, 226], "julia_cod": [31, 193], "rust_cod": [31, 193], "powi": [31, 193], "make_routin": [31, 226], "f95": [31, 225, 226], "matlab": [31, 102, 126, 226, 256, 265], "breadth": [31, 49, 213], "c_name": [31, 226], "c_code": [31, 226], "h_name": [31, 226], "c_header": [31, 226], "volume_result": 31, "ifndef": [31, 226], "project__test__h": [31, 226], "endif": [31, 226], "preprocessor": [31, 194, 205, 226], "global_var": [31, 226], "insensit": [31, 85, 126, 193, 224, 226], "argument_sequ": [31, 226], "routin": [31, 38, 48, 49, 50, 51, 74, 79, 80, 85, 89, 131, 159, 182, 186, 189, 192, 193, 194, 205, 206, 209, 210, 211, 212, 225, 230, 231, 244], "name_expr": [31, 226], "to_fil": [31, 226], "f_name": [31, 226], "f_code": [31, 226], "choic": [31, 41, 57, 74, 76, 90, 123, 155, 164, 168, 169, 176, 184, 186, 189, 193, 205, 209, 231, 263], "hydrogen": [31, 254], "r_nl": [31, 100, 160], "my_routin": 31, "result_var": [31, 226], "result\u2085\u2081\u2084\u2082\u2083\u2084\u2081\u2086\u2088\u2081\u2083\u2089\u2087\u2087\u2081\u2089\u2084\u2082\u2088": 31, "__________": [31, 181], "\u212f": [31, 131, 178, 193, 259, 263, 265, 269, 270], "assoc_laguerr": [31, 57, 193], "fcn": [31, 226], "result_5397460570204848505": [31, 226], "out_8598435338387848786": [31, 226], "examin": [31, 50, 148, 224, 226, 269], "inputargu": [31, 226], "outputargu": [31, 226], "inoutargu": [31, 226], "disk": [31, 50, 201, 212, 232], "binary_funct": [31, 90, 225], "tensor": [31, 36, 51, 56, 85, 99, 108, 124, 138, 144, 145, 146, 156, 159, 168, 169, 193, 214, 215, 217, 218, 225, 232, 241, 242, 248, 252], "binary_func": [31, 225], "servic": [31, 213], "tempdir": [31, 225], "qho_1d": [31, 135], "psi_n": [31, 135], "y_": [31, 57, 74, 100, 178], "qho": 31, "tmp": 31, "subroutin": [31, 40, 155, 186], "autofunc": 31, "dimens": [31, 33, 50, 51, 57, 58, 60, 62, 63, 64, 66, 78, 80, 82, 85, 88, 92, 99, 114, 133, 143, 145, 148, 153, 162, 163, 166, 167, 169, 179, 182, 193, 206, 209, 211, 213, 214, 218, 219, 226, 238, 240, 242, 254], "hbar": [31, 135, 141, 154, 160, 164, 166, 178], "05457162d": 31, "14159265358979d0": 31, "0d0": [31, 193], "74126166983329d": 31, "33": [31, 49, 52, 85, 124, 132, 186, 190, 193, 213], "verbos": [31, 49, 80, 89, 193, 224, 225, 268], "mute": [31, 225], "backend": [31, 77, 90, 91, 96, 115, 173, 190, 225, 232, 255], "auxiliari": [31, 76, 106, 111, 121, 209, 225], "function_nam": [31, 225], "sympy_express": [31, 225], "mandatori": [31, 193, 225], "illustr": [31, 85, 112, 114, 164, 183, 196, 200], "psi_nl": 31, "766": 31, "incur": [31, 90], "get_numpy_arrai": 31, "tight": 31, "temp": [31, 113], "alloc": [31, 55], "fuse": 31, "wise": [31, 32, 55, 80, 182, 186, 193, 199, 225], "unabl": [31, 62, 66, 91, 211, 238, 258, 259], "fortun": [31, 90, 114, 189, 190], "reconnect": 31, "autom": [31, 55, 90, 202, 225, 263], "ideologi": [31, 212], "fashion": [31, 49, 82, 113, 121, 122, 124, 177, 180, 231], "broadcast": [31, 90, 193, 218, 225], "outperform": 31, "jensen": 31, "quantit": [31, 161], "leverag": [31, 90, 193], "ufunc": [31, 90, 225, 232], "fn_numpi": 31, "fn_fortran": 31, "linspac": [31, 72, 90, 111, 126], "xx": [31, 85, 108, 177, 231], "21306132": 31, "98101184": 31, "44626032": 31, "timeit": [31, 190], "10000": [31, 53, 89, 90, 92, 211], "18891601900395472": 31, "004707066000264604": 31, "facil": 31, "comparison": [31, 48, 49, 79, 85, 111, 180, 188, 192, 211, 224, 231], "thereof": [31, 49, 180, 186, 188], "optims_c99": 31, "log1p": [31, 193], "expm1_opt": 31, "log1p_opt": 31, "exp2_opt": 31, "log2_opt": 31, "log2const_opt": 31, "funcminusoneoptim": 31, "func_m_1": 31, "opportunist": 31, "replaceoptim": 31, "catastroph": 31, "replace_in_add": 31, "cost_funct": 31, "prioriti": [31, 72, 102, 111, 177, 232], "__call__": [31, 41, 49, 188], "exp2": [31, 193], "create_expand_pow_optim": 31, "base_req": 31, "is_symbol": [31, 80], "expand_opt": 31, "opt2": 31, "is_funct": 31, "log2": [31, 193], "matin_opt": 31, "matinv_opt": 31, "matrixsolv": [31, 193], "matrix_nod": 31, "numpyprint": 31, "doprint": [31, 193], "linalg": 31, "seriesapprox": 31, "reltol": 31, "max_ord": 31, "n_point_check": 31, "threshold": [31, 89], "largest": [31, 41, 43, 49, 55, 57, 85, 88, 89, 139, 180, 184, 211, 231], "series_approx2": 31, "1e": [31, 49, 53, 85, 96, 128, 189, 211], "series_approx3": 31, "series_approx8": 31, "sumapprox": 31, "neglect": 31, "2000": [31, 35, 76, 89, 187], "sum_approx3": 31, "sum_approx2": 31, "sum_approx1": 31, "token": [31, 74, 77, 91], "diagram": [31, 38, 78, 92, 114, 115, 120, 139, 218, 242, 255, 264], "codegenast": 31, "assignmentbas": 31, "augmentedassign": 31, "addaugmentedassign": 31, "subaugmentedassign": 31, "mulaugmentedassign": 31, "divaugmentedassign": 31, "modaugmentedassign": 31, "codeblock": [31, 91], "quotedstr": 31, "intbasetyp": 31, "_sizedinttyp": 31, "signedinttyp": 31, "unsignedinttyp": 31, "floatbasetyp": 31, "floattyp": 31, "complexbasetyp": 31, "complextyp": 31, "pointer": [31, 226, 227], "functionprototyp": 31, "functiondefinit": [31, 91], "stream": [31, 50, 194, 205, 231], "functioncal": 31, "breaktoken": 31, "continuetoken": 31, "nonetoken": 31, "float32": [31, 90, 91, 232], "float64": [31, 90, 213], "codeprint": 31, "complex_": 31, "bool_": 31, "intc": [31, 91], "intp": 31, "unsign": [31, 54, 205], "int8": 31, "int16": 31, "int32": 31, "int64": [31, 213], "uint8": 31, "uint16": 31, "uint32": 31, "uint64": 31, "x86": 31, "amd64": 31, "complex64": 31, "complex128": 31, "newton": [31, 57, 120, 162, 166, 186, 190], "aug_assign": 31, "tol": [31, 49, 184], "val": [31, 49, 61, 184, 188, 232], "whl": 31, "py_str": 31, "inf": [31, 41, 49, 85, 184, 189, 201, 209, 213], "exec": [31, 49, 77, 232], "1121416371": 31, "909672693737": 31, "867263818209": 31, "865477135298": 31, "865474033111": 31, "1g": 31, "3e": 31, "2003": [31, 178, 187, 193, 206], "source_format": [31, 193], "align": [31, 59, 85, 105, 177, 178, 193, 224], "op": [31, 49, 85, 148, 159, 172, 176, 202, 231, 232], "parametr": [31, 57, 58, 62, 85, 179, 206, 212, 238, 240, 247], "volatil": 31, "binop": 31, "exit": [31, 89, 224], "premad": 31, "break_": 31, "lift": [31, 45, 55, 57, 74, 184, 186, 189], "left_hand_sid": 31, "topological_sort": [31, 231], "postprocess": [31, 189, 194, 205], "topolog": [31, 49, 51, 182, 231], "continue_": 31, "untyp": 31, "compliant": 31, "ok": [31, 41, 193, 209], "elem": [31, 40, 180], "ijk": [31, 218], "stride": [31, 218], "lmn": 31, "cast_nocheck": 31, "alia": [31, 42, 49, 59, 65, 80, 81, 83, 87, 143, 152, 159, 180, 183, 184, 188, 192, 201, 224, 234, 269], "nbit": 31, "storag": [31, 49, 85, 153, 178, 186], "nmant": 31, "mantissa": 31, "nexp": 31, "half_precis": 31, "f16": 31, "65504": 31, "tini": [31, 49], "ep": [31, 40, 48, 184, 188, 189], "decimal_dig": 31, "cast_check": 31, "1e5": 31, "cast": [31, 82, 261], "subnorm": [31, 40], "idempot": 31, "loos": [31, 49, 204], "overflow": [31, 228], "max_expon": 31, "min_expon": 31, "for_i": 31, "for_ji": 31, "for_kji": 31, "function_arg": [31, 224], "fcall": 31, "bar": [31, 57, 148, 154, 234], "baz": 31, "return_typ": 31, "fp": [31, 32, 49, 189, 195], "from_functionprototyp": 31, "prototyp": [31, 90, 226], "value_const": 31, "pointer_const": 31, "attr_param": 31, "looking_for": 31, "as_declar": 31, "formatstr": 31, "5g": 31, "stdout": [31, 224], "stderr": 31, "oppos": [31, 232, 259], "_field": 31, "_construct_": 31, "not_in_arg": 31, "float16": 31, "inttyp": 31, "super": [31, 57, 184, 193, 238, 239], "from_expr": [31, 189], "toler": [31, 49, 53, 184, 205, 211], "42": [31, 38, 49, 52, 54, 62, 63, 65, 80, 81, 83, 85, 87, 89, 184, 206, 224], "v6": 31, "123456": [31, 49, 89], "v10": 31, "12345": [31, 53], "67894": 31, "boost_mp50": 31, "boost": 31, "multiprecis": [31, 183], "cpp_dec_float_50": 31, "r37": 31, "rtol": 31, "atol": 31, "precision_target": 31, "v18": 31, "123456789012345646": 31, "123456789012345649": 31, "Will": [31, 85, 91, 188, 193, 224], "decl1": 31, "decl2": 31, "alt": 31, "secondarili": [31, 189], "mathcin": 31, "cbrt": [31, 56, 193], "minu": [31, 48, 49, 174, 186, 193, 244], "0e": [31, 49], "fma": [31, 193], "cpu": [31, 90, 126], "hypot": [31, 193], "hypotenus": [31, 65], "log10": [31, 193], "ten": [31, 90], "plu": [31, 48, 85, 91, 126, 139, 193, 203, 232], "famili": [31, 33, 67, 76, 181], "commaoper": 31, "goto": 31, "preincrement": 31, "postdecr": 31, "decrement": [31, 204, 228], "postincr": 31, "increment": [31, 40, 41, 42, 48, 65, 89, 204, 213], "predecr": 31, "alignof": 31, "sizeof": 31, "struct": 31, "dsign": 31, "arrayconstructor": 31, "ac": [31, 41, 61, 108, 124, 136, 206, 213, 231, 234], "95": [31, 47, 89, 186, 193, 209, 211, 226], "do1": 31, "1d0": 31, "do2": 31, "extent": 31, "intent_out": 31, "dim": [31, 51, 64, 90, 161, 167, 193, 216, 219], "arr": 31, "fortranreturn": 31, "aid": [31, 113], "implieddoloop": 31, "idl": 31, "signallib": 31, "prog": [31, 138], "myprogram": 31, "mysub": 31, "subroutinecal": 31, "passs": 31, "inout": 31, "bind_c": 31, "sum_": [31, 48, 49, 50, 54, 57, 74, 76, 80, 82, 89, 190, 195, 196, 203, 209, 213], "cmplx": [31, 193], "intent_in": 31, "intrins": 31, "isign": 31, "lbound": 31, "lb": [31, 71, 228], "literal_dp": 31, "num": [31, 40, 49, 89, 98, 184, 205, 209, 228, 234], "literal_sp": 31, "reshap": [31, 80, 111, 126, 214, 220, 231], "arrayexpr": 31, "shp": 31, "metric": [31, 41, 45, 51, 99, 205, 209, 212, 219], "snr": 31, "convolution2d": 31, "use_renam": 31, "ren": 31, "thingi": 31, "newtons_method": 31, "itermax": 31, "counter": [31, 49, 55, 61, 80, 93], "raphson": 31, "criterion": [31, 40, 125, 181, 186], "netwon": 31, "algo": [31, 41], "r38": 31, "27s_method": 31, "newtons_method_funct": 31, "param": [31, 51, 85, 206], "render_as_modul": 31, "py_mod": 31, "865474033102": 31, "render_as_source_fil": 31, "printer_set": 31, "fcodeprint": [31, 193], "fpgroup": [32, 40], "studi": [32, 39, 48, 51, 85, 177, 180, 186, 189, 206, 213], "combinator": [32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 82, 89, 195, 214, 219, 228, 231, 249, 263, 269], "free_group": [32, 39, 40], "vfree_group": 32, "xfree_group": 32, "fp_group": [32, 40], "coset_enumeration_r": 32, "fall": [32, 48, 49, 54, 77, 173, 188, 193, 206, 210, 213], "famou": [32, 57, 76, 89, 206], "langl": [32, 40, 138, 178], "rangl": [32, 40, 138, 156, 178], "gen0": 32, "gen1": 32, "gen_": 32, "freegroup": 32, "x_2": [32, 39, 54, 71, 154, 181, 186, 189, 195, 206, 212], "x_3": [32, 39, 71, 154], "s_1": 32, "r_1": [32, 180, 190], "s_2": 32, "r_2": 32, "s_k": 32, "r_k": [32, 152], "s_i": [32, 45, 76, 78], "r_i": [32, 190], "reduct": [32, 85, 107, 186, 188, 204, 206], "ho05": [32, 39], "cdhw73": 32, "hav91": 32, "coset_enumeration_c": 32, "coset_enumer": 32, "relator_bas": 32, "coset_table_bas": 32, "influenc": [32, 92, 180, 181], "coset_table_max_limit": 32, "4096000": 32, "safeti": [32, 41, 83], "max_coset": 32, "cox": [32, 187, 189], "c_r": [32, 203], "50": [32, 40, 52, 53, 54, 57, 65, 85, 89, 92, 93, 132, 189, 193, 202, 211], "max_stack_s": 32, "500": [32, 53, 108], "deduction_stack": 32, "stack": [32, 66, 80, 126, 182, 188, 193, 222, 228, 265], "occurr": [32, 49, 89, 111, 169, 205, 213], "exce": [32, 89, 219], "modest": 32, "low_index_subgroup": 32, "conjugaci": [32, 40], "coset_t": [32, 40], "reidemeister_present": 32, "y_1": [32, 206, 213], "y_2": [32, 206, 213], "john": [32, 40, 57, 189, 206, 209], "cannon": 32, "lucien": 32, "dimino": [32, 40], "georg": [32, 180, 209, 231], "hava": 32, "jane": 32, "watson": [32, 205], "comp": [32, 209], "463": [32, 125], "490": [32, 41], "1973": [32, 50, 175], "derek": [32, 39], "holt": [32, 39, 40, 47], "chapman": [32, 39], "hall": [32, 39, 213], "crc": [32, 39, 41], "2005": [32, 39, 76, 89, 189], "xvi": [32, 39], "514": [32, 39, 187], "symposium": [32, 74, 186, 187, 203], "issac": [32, 76, 187, 211], "bonn": 32, "1991": [32, 187], "191": [32, 212], "199": 32, "acm": [32, 48, 74, 76, 187, 203, 209, 211], "graycod": 33, "kw_arg": [33, 43, 159, 218, 219], "hamiltonian": [33, 150], "edg": [33, 42, 43, 78, 182, 193, 212, 231, 268], "hamilton": [33, 80], "vertex": [33, 43, 60, 65, 76, 182], "000": [33, 53, 76, 79, 153, 231], "110": [33, 79, 209, 211, 225, 231], "010": [33, 79, 231], "011": [33, 79, 153, 231], "111": [33, 52, 59, 79, 89, 231], "101": [33, 79, 89, 153, 231], "001": [33, 53, 79, 128, 231], "delet": [33, 78, 80, 85, 190, 234, 269], "statist": [33, 50, 57, 213, 224, 263], "manner": [33, 50, 57, 123, 157, 174, 206, 209, 214, 231, 246], "generate_grai": 33, "0000": 33, "0001": [33, 53], "0011": [33, 44], "0010": 33, "0110": 33, "0111": [33, 153], "0101": [33, 153], "0100": 33, "1100": 33, "1101": 33, "1111": 33, "1110": 33, "1010": 33, "1011": 33, "1001": 33, "r39": 33, "nijenhui": 33, "wilf": [33, 48, 211], "1978": [33, 40, 164, 187], "r40": 33, "knuth": [33, 41, 228], "2011": [33, 41, 74, 89, 175, 202], "art": [33, 41, 180, 193, 195, 228, 255], "vol": [33, 41, 50, 54, 57, 74, 85, 99, 188, 189, 203, 228, 231], "addison": [33, 41, 89, 187], "weslei": [33, 41, 89, 187], "r41": 33, "brgc": 33, "6th": [33, 89], "unrank": [33, 38, 40, 41, 43], "r42": 33, "statweb": 33, "stanford": 33, "susan": 33, "s208": 33, "node12": 33, "tail": [33, 48, 49, 184, 213], "00010": 33, "random_bitstr": 33, "bitlist": [33, 44], "gray_to_bin": 33, "endian": 33, "bin_to_grai": 33, "get_subset_from_bitstr": 33, "bitstr": 33, "graycode_subset": 33, "group_construct": 34, "directproduct": [34, 37], "__mul__": [34, 40, 80, 85, 184, 188], "shift": [34, 40, 41, 43, 50, 57, 60, 64, 66, 79, 179, 184, 186, 189, 196, 203, 211, 213], "gn": 34, "named_group": [34, 37, 39, 40, 46, 47], "cyclicgroup": [34, 37, 40], "perm_group": [34, 39, 40, 41, 46, 47], "permutationgroup": [34, 37, 39, 40, 41, 46, 47], "group_numb": 35, "is_nilpotent_numb": 35, "r43": 35, "randprim": [35, 89], "pakianathan": 35, "shankar": 35, "monthli": [35, 50, 85], "107": [35, 187], "631": 35, "634": 35, "is_abelian_numb": 35, "r44": 35, "is_cyclic_numb": 35, "r45": 35, "polyhedron": [36, 40, 76, 231], "prufer": 36, "grai": [36, 44, 77, 128, 173, 179], "nilpot": [36, 40, 85], "abelian": [36, 37, 40, 78, 164, 180], "cyclic": [36, 37, 40, 41, 42, 52, 80, 89, 219, 231], "coset": [36, 40, 45, 188], "todd": 36, "coxet": [36, 78], "subgroup": [36, 40, 41, 45, 47, 78, 89], "bibliographi": 36, "polycycl": [36, 40], "collector": 36, "symmetricgroup": [37, 39, 40, 46, 47], "transposit": [37, 40, 41, 50, 80, 82, 215], "is_group": [37, 40], "generate_schreier_sim": [37, 40], "af": [37, 40, 46, 126], "dihedralgroup": [37, 40, 47], "alternatinggroup": [37, 40, 46], "r46": 37, "symmetric_group": 37, "generators_and_rel": 37, "dihedr": [37, 41], "d_n": [37, 78, 189], "gon": 37, "bab": 37, "generate_dimino": [37, 40], "perm": [37, 39, 40, 41, 42, 47, 54, 80, 82, 85, 214], "cyclic_form": [37, 41, 42], "r47": 37, "dihedral_group": 37, "31": [37, 49, 52, 53, 65, 89, 124, 178, 189, 206], "ex": [37, 76, 99, 110, 183, 185, 188, 189, 219, 227], "r48": 37, "armstrong": 37, "abeliangroup": [37, 40], "cyclic_ord": 37, "r49": 37, "groupprop": [37, 40], "subwiki": [37, 40], "structure_theorem_for_finitely_generated_abelian_group": 37, "multiset_partit": [38, 54, 74, 228, 231], "rg": 38, "growth": [38, 89, 186, 259], "from_rg": 38, "abcd": [38, 42, 159, 231, 234], "cbead": 38, "sort_kei": [38, 49, 209], "ti": [38, 41, 49, 89], "integerpartit": [38, 231], "summand": [38, 188], "r50": 38, "partition_": [38, 54], "28number_theori": 38, "as_dict": [38, 183, 189], "as_ferr": 38, "char": 38, "ferrer": 38, "next_lex": [38, 41], "lexic": [38, 139, 231], "prev_lex": 38, "random_integer_partit": 38, "seed": [38, 40, 49, 50, 59, 62, 63, 85, 89, 186, 213, 224, 231], "85": [38, 53, 54, 85, 89, 113, 157, 178, 213], "rgs_gener": 38, "37": [38, 50, 55, 59, 85, 89, 93, 193, 206], "52": [38, 54, 89, 92, 93, 178, 192, 206, 209, 231, 259], "151": 38, "203": [38, 54], "rgs_enum": 38, "rgs_unrank": 38, "rgs_rank": 38, "pcgroup": 39, "pcg": 39, "pc_seri": [39, 40], "polycyl": 39, "pc_present": 39, "pc_sequenc": [39, 40], "miss": [39, 40, 66, 193, 211, 226, 269], "adjac": [39, 40, 41, 49, 98, 131, 182, 231], "der": [39, 40], "relative_ord": [39, 40], "polycyclic_group": [39, 40], "gen": [39, 40, 45, 46, 47, 49, 85, 180, 183, 184, 186, 188, 189, 190, 191, 199, 205, 208, 211], "is_ident": [39, 41, 49], "poss": [39, 113, 177], "pc_group": 39, "a_j": [39, 57, 74, 164, 186, 195, 203], "notin": [39, 74, 201], "_order": 39, "minimal_uncollected_subword": 39, "subword_index": 39, "i_1": [39, 159, 189, 214], "a_1": [39, 40, 50, 57, 71, 74, 80, 85, 99, 159, 164, 181, 186, 203, 206, 209, 211, 213, 269], "i_r": 39, "a_r": [39, 203], "i_2": [39, 159, 189], "s_": [39, 45, 111, 186], "s_j": [39, 78, 186], "x3": [39, 49, 54, 183, 209, 213], "collected_word": 39, "free_to_perm": 39, "bottom": [39, 40, 49, 50, 65, 80, 85, 88, 110, 188, 193, 202, 247], "pictur": [39, 193], "x_3x_2": 39, "x_3x_1": 39, "x_2x_1": 39, "x_3x_0": 39, "x_2x_0": 39, "x_1x_0": 39, "varii": 39, "derived_seri": [39, 40], "pc_resent": 39, "k_arrai": 39, "array_form": [39, 41, 42], "v_arrai": 39, "e_1": [39, 85, 180, 186, 189], "e_n": [39, 54, 78, 85, 135, 180, 189], "exponent_vector": 39, "leading_expon": 39, "dup": [40, 184, 185], "pn": [40, 114, 123], "motion": [40, 102, 106, 107, 110, 113, 114, 115, 117, 119, 120, 121, 122, 123, 126, 127, 172, 173, 176, 177, 213], "front": [40, 49, 113, 128, 158, 184, 186, 189, 193, 205, 269], "face": [40, 42, 62, 76, 111, 186, 190, 193, 206, 247, 265], "rubik": 40, "3674160": 40, "pgroup": [40, 42], "corner": [40, 42, 80, 189, 209, 212, 232], "reset": [40, 42, 179, 186, 189, 224, 227, 229], "p10": 40, "make_perm": 40, "r51": 40, "eick": [40, 47], "brien": [40, 47], "r52": 40, "seress": 40, "r53": 40, "schreier_vector": 40, "r54": 40, "nielsen_transform": 40, "product_replacement_algorithm": 40, "r55": 40, "frank": [40, 41, 85], "celler": 40, "charl": 40, "leedham": 40, "green": [40, 179], "scott": 40, "murrai": 40, "alic": [40, 50], "niemey": 40, "r56": 40, "block_": 40, "28permutation_group_theori": 40, "r57": 40, "algorithmist": 40, "php": [40, 57, 89, 206, 213], "union_find": 40, "r58": 40, "multiply_transitive_group": 40, "r59": 40, "center_": 40, "28group_theori": 40, "centralizer_and_norm": 40, "derived_subgroup": 40, "nilpotent_group": 40, "colost": 40, "hulpk": 40, "cgt": 40, "cgtnote": 40, "__contains__": 40, "__weakref__": [40, 80], "weak": [40, 49, 80, 183, 186], "_coset_repres": 40, "hg": 40, "transvers": [40, 45, 47, 132, 133], "coset_transvers": 40, "_distinct_primes_lemma": 40, "_element": 40, "_eval_is_alt_sym_monte_carlo": 40, "05": [40, 71, 96, 175, 178], "mont": 40, "carlo": 40, "candidat": 40, "randomli": [40, 49, 50, 89, 153], "n_ep": 40, "_check_cycles_alt_sym": [40, 47], "_eval_is_alt_sym_na": 40, "only_sym": 40, "only_alt": 40, "_p_elements_group": 40, "_random_pr_init": 40, "_random_prec_n": 40, "modif": [40, 55, 85, 212, 213, 228], "69": [40, 85, 211, 228], "71": [40, 65, 85, 162], "_random_gen": 40, "append": [40, 49, 50, 85, 93, 126, 154, 179, 184, 193, 214, 226, 227, 231, 269], "accumul": [40, 224, 228], "random_pr": 40, "chosen": [40, 41, 50, 51, 62, 63, 85, 89, 92, 105, 127, 161, 164, 179, 180, 184, 186, 188, 193, 200, 203, 209, 213, 224, 238], "gh": [40, 181, 212, 219], "eventu": [40, 57, 76, 179, 180, 200, 226, 231], "_sylow_alt_sym": 40, "sylow": 40, "p_1": [40, 45, 50, 67, 89, 176, 203, 206], "p_2": [40, 50, 67, 89, 176, 203], "p_p": 40, "sylow_subgroup": 40, "is_alt_sym": [40, 47], "_union_find_merg": 40, "parent": [40, 49, 72, 105, 169, 172, 179, 183, 184, 188, 224, 228, 238, 241, 242], "not_rep": 40, "atkinson": 40, "83": [40, 192], "87": [40, 55, 85, 89], "minimal_block": 40, "_union_find_rep": 40, "r60": 40, "r66": 40, "compress": [40, 85, 88], "r62": 40, "r68": [40, 41], "_verifi": 40, "_h": [40, 212], "gens_k": 40, "rels_k": 40, "gens_h": 40, "inject": [40, 49, 180, 184, 189, 265], "homomorph": [40, 185], "rels_h": 40, "strong_present": 40, "abelian_invari": 40, "isomorph": [40, 43, 180, 183, 186, 188], "t_1": [40, 54, 206], "t_2": [40, 54, 206], "t_r": [40, 124, 219], "542": 40, "adopt": [40, 219], "schreier": [40, 45, 47], "sim": [40, 45, 47, 74], "b_1": [40, 47, 57, 71, 74, 180, 203, 206, 209, 269], "b_2": [40, 47, 57, 71, 203, 209], "dot": [40, 41, 45, 47, 50, 62, 64, 71, 80, 85, 98, 113, 114, 117, 118, 119, 121, 122, 123, 124, 126, 143, 169, 173, 175, 176, 177, 178, 180, 181, 186, 189, 193, 212, 213, 231, 238, 241, 243, 244], "b_k": [40, 47, 50, 54, 57, 195, 196], "strong": [40, 45, 46, 47, 89, 90], "89": [40, 47, 76], "55": [40, 52, 54, 85, 178, 179, 189, 206], "57": [40, 85, 89, 213], "strong_gen": [40, 46, 47], "basic_transvers": [40, 47], "basic_orbit": [40, 47], "basic_stabil": 40, "baseswap": 40, "po": [40, 74, 79, 80, 108, 124, 126, 184, 211], "strong_gens_distr": [40, 47], "swap": [40, 41, 42, 80, 85, 139, 143, 152, 213, 231], "orbit": [40, 47, 159, 160, 162], "b_": [40, 45, 47, 49, 54, 57, 74, 82, 98, 195, 203, 206, 214], "b_i": [40, 45, 47, 74, 180, 203], "la": [40, 126, 164], "vega": 40, "testutil": [40, 46, 47], "_verify_bsg": [40, 46, 47], "schreier_sim": [40, 46, 47], "bsg": [40, 45, 47, 219], "102": [40, 85], "98": [40, 50, 125, 189, 209], "pseudocod": 40, "beta_": 40, "g_": [40, 47, 48, 57, 74, 206], "foral": [40, 48, 51, 164], "zg": 40, "gz": 40, "c_g": 40, "sg": [40, 213, 219], "is_subgroup": 40, "subgroup_search": 40, "hgh": 40, "closur": [40, 46, 72, 139, 188, 201], "composition_seri": 40, "h_0": [40, 45], "h_1": [40, 45, 212], "h_2": [40, 212], "1024": [40, 193, 213], "512": [40, 57], "128": [40, 54, 57, 59, 89, 187, 193], "32": [40, 52, 55, 57, 59, 85, 89, 96, 124, 187, 189, 190, 202, 203, 206, 213, 224], "243": [40, 57, 211], "81": [40, 54, 59, 80, 85, 89, 111, 113, 178, 192], "conjugacy_class": 40, "xax": 40, "s_3": 40, "s3": [40, 48, 98, 196, 206], "feasibl": [40, 98], "resiz": [40, 41, 80, 82], "coset_factor": 40, "factor_index": 40, "_basic_orbit": 40, "u1": [40, 89, 111, 113, 114, 115, 117, 118, 121, 123, 126, 169, 171, 172, 173, 176, 209], "u2": [40, 88, 89, 111, 113, 114, 115, 117, 118, 121, 126, 169, 172, 176, 209], "_strip": [40, 47], "coset_rank": 40, "lexicograph": [40, 41, 44, 45, 49, 186, 189, 231], "coset_unrank": 40, "standardis": [40, 183], "subsect": [40, 244], "compris": [40, 50, 82, 108, 124, 127, 189, 231], "g_0": [40, 206], "g_1": [40, 189, 200, 206, 209], "g_2": [40, 78, 200, 209], "g_i": [40, 200], "g_k": 40, "tetrahedron": [40, 42], "r64": 40, "axiom": [40, 180], "doy": 40, "sc": [40, 76], "thesi": [40, 49, 200, 238], "generator_product": 40, "sn": [40, 41, 48, 71], "is_abelian": 40, "_random_prec": 40, "probabl": [40, 49, 54, 57, 61, 89, 111, 153, 157, 203, 209, 212, 213, 225, 261, 267], "transit": [40, 126, 186, 213], "82": [40, 76, 85, 213], "proport": [40, 50, 200], "226": 40, "227": 40, "is_altern": 40, "quicker": [40, 89], "taxonomi": 40, "is_cycl": 40, "p_": [40, 45, 49, 76, 164, 206, 209, 214], "p_i": [40, 45, 89], "equiv": [40, 50, 54, 89, 188, 203, 206], "pmod": [40, 49, 50, 54, 85, 203], "p_j": [40, 45], "r65": 40, "35": [40, 43, 52, 54, 62, 63, 76, 85, 89, 113, 188, 193, 206, 209, 213], "rose": 40, "is_elementari": 40, "is_nilpot": [40, 85], "lower_central_seri": 40, "is_solv": 40, "is_norm": [40, 157], "gr": 40, "is_perfect": [40, 89], "is_polycycl": 40, "is_primit": [40, 184, 189], "cardin": [40, 41, 44, 180, 201], "badli": 40, "random_stab": 40, "g3": [40, 98], "s5": 40, "is_symmetr": [40, 80], "is_transit": 40, "is_trivi": 40, "cba": [40, 214, 231], "mainli": [40, 57, 85, 90, 164, 173, 186, 203, 206, 209], "max_div": 40, "siev": [40, 89], "nonempti": 40, "gb": 40, "moreov": [40, 50, 74, 163, 174, 180, 181, 186, 194, 242], "congruenc": [40, 49, 89, 203, 206], "p_0": [40, 45, 67, 203, 206], "maxim": [40, 50, 78, 180, 184, 188, 200, 202], "intransit": 40, "normal_closur": 40, "adjoin": [40, 181], "yx": [40, 177], "73": [40, 48, 49, 62, 89, 209], "74": [40, 54, 89], "orb": 40, "78": [40, 63, 85, 89, 93, 164, 209, 213], "orbit_transvers": 40, "orbit_rep": 40, "send": [40, 49, 50, 55, 89, 180, 209, 211], "proof": [40, 43, 74, 76, 212], "79": [40, 41, 93], "pointwise_stabil": 40, "pointwis": [40, 47], "p_k": [40, 89], "p20": 40, "stab": 40, "schreier_sims_increment": [40, 47], "polycyclicgroup": 40, "eliminate_gen": 40, "gen_count": 40, "b1": [40, 45, 57, 89, 92, 93, 103, 111, 126, 169, 184, 193, 203, 206, 209, 243], "b_r": 40, "slp_dict": 40, "seq": [40, 49, 52, 85, 184, 186, 189, 199, 211, 231], "93": [40, 187], "schreier_sims_random": [40, 47], "consec_succ": 40, "consec": 40, "_succ": 40, "97": [40, 50, 89, 186], "sift": [40, 47, 231], "amend": 40, "unsuccess": [40, 47], "accordingli": [40, 181, 188], "halt": 40, "signifi": [40, 49, 189, 213], "g_t": 40, "leq": [40, 48, 50, 57, 74, 85, 89, 186, 188, 199, 200, 206, 213], "prop": [40, 188], "init_subgroup": 40, "supergroup": 40, "sought": [40, 89, 144, 154, 205, 212], "prune": 40, "prop_even": 40, "lengthi": 40, "114": [40, 89], "117": [40, 57], "terribl": 40, "crucial": [40, 48, 183], "len1": 40, "len2": 40, "len3": 40, "transitivity_degre": 40, "fold": [40, 49, 55, 193, 200, 205], "a_2": [40, 50, 71, 85, 186, 203, 206, 209, 213, 269], "a_k": [40, 50, 190, 196, 211], "arrang": [41, 98, 106, 124, 126, 202, 206, 219], "r69": 41, "reorder": [41, 48, 159, 189, 209, 213, 231], "pretty_print": [41, 77, 108, 113, 117, 118, 119, 121, 122, 124, 127, 169, 171, 172, 173, 176, 177, 193], "understood": [41, 89, 164, 180, 184], "economi": 41, "indexerror": [41, 85, 189], "autos": [41, 88], "watch": 41, "print_cycl": 41, "econom": [41, 76, 231], "retain": [41, 49, 55, 57, 76, 91, 189, 194, 202, 205], "biject": [41, 43, 50, 80, 180], "full_cyclic_form": 41, "rmul": 41, "unrank_lex": 41, "r73": 41, "zo42": 41, "from_sequ": 41, "a1": [41, 45, 49, 77, 80, 89, 93, 111, 126, 133, 209, 213, 214, 243, 269], "a2": [41, 45, 49, 78, 80, 89, 93, 111, 126, 133, 182, 213, 214, 243, 269], "a3": [41, 45, 49, 78, 80, 126, 243, 269], "perfectli": [41, 48, 49, 50, 186, 189, 192], "skiena": 41, "ma": [41, 48, 115], "1990": [41, 74, 203, 238], "r70": 41, "wendi": 41, "myrvold": 41, "ruskei": 41, "2001": [41, 89, 187], "lett": 41, "septemb": [41, 228], "281": 41, "284": [41, 89], "1016": 41, "s0020": 41, "0190": 41, "01": [41, 49, 53, 111, 153, 187, 205, 231], "00141": 41, "r71": 41, "kreher": 41, "stinson": 41, "1999": [41, 85, 187, 192, 209], "r72": 41, "graham": [41, 54, 55, 89], "patashnik": 41, "foundat": [41, 187, 188], "1994": [41, 186, 187, 189], "product_and_invers": 41, "r74": 41, "lehmer_cod": 41, "appliedpermut": 41, "magic": [41, 205, 224, 261], "attatch": 41, "_array_form": 41, "ascent": 41, "ie": [41, 206], "descent": 41, "fg": [41, 51, 209, 212], "gf": [41, 50, 180, 182, 183, 185, 186, 188], "r75": 41, "commutes_with": [41, 219], "cycle_structur": 41, "from_inversion_vector": 41, "get_adjacency_dist": 41, "n_adj": 41, "reev": 41, "colin": 41, "landscap": 41, "annal": 41, "86": [41, 85, 125, 192, 202], "473": 41, "josephu": 41, "get_precedence_matrix": 41, "get_precedence_dist": 41, "get_adjacency_matrix": 41, "get_positional_dist": 41, "subscript": [41, 184, 193, 203, 206, 231], "inversion_vector": 41, "lesser": [41, 189], "lie": [41, 51, 63, 64, 65, 189, 207, 213, 248, 255], "lehmer": 41, "ith": [41, 78, 89, 184, 190, 212, 213], "variat": [41, 49, 186, 200, 209, 230], "r76": 41, "eng": 41, "chula": 41, "piak": 41, "algo2008": 41, "htm": [41, 57, 76, 206], "is_singleton": 41, "is_odd": 41, "shuffl": [41, 85, 269], "012345": 41, "345": 41, "253": 41, "2531": 41, "25314": 41, "253140": 41, "r77": 41, "flavius_josephu": 41, "r78": 41, "josephus_problem": 41, "r79": 41, "wou": 41, "burtonl": 41, "trim": [41, 123], "unmov": 41, "mul_inv": 41, "next_nonlex": 41, "nonlex": 41, "rank_nonlex": 41, "unrank_nonlex": 41, "next_trotterjohnson": [41, 231], "trotter": 41, "johnson": [41, 85], "generate_bel": [41, 231], "rank_trotterjohnson": 41, "unrank_trotterjohnson": 41, "_af_par": 41, "pseudo": [41, 85, 89, 184, 186, 189], "inv_perm": 41, "enforc": [41, 113], "rmul_with_af": 41, "ascend": [41, 231], "r80": 41, "transposition_": 41, "28mathemat": [41, 49, 201], "flexibl": [41, 49, 111, 126, 176, 179, 183, 212, 259], "investig": [41, 74, 178, 180, 203, 231, 261], "cn": [41, 193, 268], "2n": [41, 48, 54, 57, 76, 80, 99, 122, 178, 196, 203], "dn": [41, 213], "klein": 41, "s4": [41, 98], "polyhedr": 42, "psg": 42, "platon": 42, "solid": [42, 63, 179, 247], "tetrahedr": 42, "octahedr": 42, "icosahedr": 42, "r81": 42, "polyhedralgroup": 42, "polyhedra": [42, 75], "shadow": 42, "h5": 42, "heinz": 43, "caylei": [43, 80], "r82": 43, "labeledtre": 43, "tree_repr": 43, "prufer_rank": 43, "prev": 43, "36": [43, 50, 54, 65, 76, 80, 85, 89, 93, 189, 193, 206, 209, 213, 247], "prufer_repr": 43, "record": [43, 49, 188, 224], "to_pruf": 43, "778": 43, "779": 43, "777": [43, 52], "1296": 43, "to_tre": 43, "r83": 43, "hamberg": 43, "erlend": 43, "2010": [43, 210, 231], "06": [43, 49, 113, 178, 213], "compact": [43, 49, 95, 126, 157, 173, 189, 193, 211, 228], "next_binari": 44, "prev_binari": 44, "bitlist_from_subset": 44, "subset_from_bitlist": 44, "superset_s": 44, "iterate_binari": 44, "iterate_graycod": 44, "prev_grai": 44, "next_grai": 44, "next_lexicograph": 44, "prev_lexicograph": 44, "rank_binari": 44, "unrank_binari": 44, "rank_grai": 44, "unrank_grai": 44, "rank_lexicograph": 44, "43": [44, 85, 89, 92, 93, 213, 269], "super_set": 44, "subset_indic": 44, "ksubset": 44, "itertool": [44, 231], "tensor_can": [45, 219], "msym": 45, "contravari": [45, 85, 219, 220], "covari": [45, 51, 85, 213, 219, 220], "d0": 45, "base_i": 45, "gens_i": 45, "n_i": [45, 186, 211], "sym_i": 45, "failur": [45, 53, 66, 74, 89, 213, 224, 269], "canonicalize_na": 45, "exchang": [45, 50, 85, 178, 182, 231], "anticommut": [45, 146, 148, 158, 159, 219], "canonical_fre": 45, "slot": [45, 143, 214, 218, 219, 264], "residu": [45, 50, 89, 186, 197, 203], "tensor_gen": 45, "list_free_indic": 45, "double_coset_can_rep": 45, "reintroduc": 45, "a_": [45, 49, 50, 57, 74, 78, 80, 82, 98, 99, 124, 195, 203, 206, 209, 211, 213, 214], "antisymmetr": [45, 51, 80, 159, 219], "d2": [45, 169, 180, 200, 213, 231, 238], "ord": [45, 50, 85], "t_c": 45, "get_symmetric_group_sg": [45, 219], "bsgs_direct_product": 45, "base2a": 45, "gens2a": 45, "t0": 45, "t1": [45, 65, 66, 89, 103, 108, 206, 213], "a_m": [45, 209], "a_n": [45, 50, 57, 74, 78, 164, 181, 186, 196, 206, 209, 269], "_a": [45, 57, 159, 189], "_b": [45, 57, 159], "base_f": 45, "gens_f": 45, "base1": 45, "gens1": 45, "base_a": 45, "gens_a": 45, "sgen": 45, "s_transvers": 45, "butler": [45, 219], "portug": [45, 219], "grow": [45, 49, 74, 85, 89, 183, 186], "computation": [45, 106, 107], "absenc": [45, 79], "observ": [45, 71, 74, 148, 177, 180, 203, 206, 209, 213, 246, 269], "opposit": [45, 65, 79, 80, 103, 105, 181, 184, 201, 205, 212, 220, 231, 238, 239, 269], "ind": [45, 195, 219], "d3": [45, 200], "a0": [45, 209, 269], "a4": [45, 49, 78, 126, 269], "a5": [45, 49], "leftrightarrow": 45, "_af_rmul": 45, "t_": [45, 54], "b0": [45, 57, 184, 203, 209], "d_": [45, 203], "p0": [45, 59, 188, 209], "dbase": 45, "recomput": [45, 189], "d_i": [45, 74, 164], "s_0": 45, "d_0": [45, 50], "b_0": [45, 50, 54, 203, 206, 209], "b_j": [45, 47, 57, 74, 203], "sx": 45, "trace": [45, 80, 82, 99, 126, 186, 193, 213, 214, 215, 217, 231, 265], "h_n": [45, 57, 76, 212], "tab1": 45, "get_transvers": 45, "antisym": 45, "base2": 45, "gens2": 45, "_cmp_perm_list": 46, "ls1": 46, "ls2": 46, "_naive_list_centr": 46, "_verify_centr": 46, "_verify_normal_closur": 46, "_base_ord": 47, "base_ord": 47, "backtrack": 47, "108": [47, 89, 93], "132": [47, 54, 169], "r84": 47, "_distribute_gens_by_bas": 47, "_strong_gens_from_distr": 47, "_orbits_transversals_from_bsg": 47, "_handle_precomputed_bsg": 47, "transversals_onli": 47, "slp": 47, "_remove_gen": 47, "new_gen": 47, "r85": 47, "r86": 47, "recurr": [48, 54, 71, 85, 188, 199, 205, 207, 209, 213, 233], "annihil": [48, 67, 68, 72, 135, 159, 211], "is_hypergeometr": 48, "binomi": [48, 53, 56, 57, 89, 189, 193, 198, 205, 209, 213, 231, 269], "rf": [48, 54, 189], "ff": [48, 50, 54, 178, 181, 182, 183, 188, 189], "speci": [48, 49], "rise": [48, 54, 57, 178, 205, 209, 213, 241], "hypersimp": [48, 204], "quotient": [48, 49, 52, 55, 89, 180, 181, 183, 185, 186, 189, 203, 205, 209], "dummy_vari": 48, "karr": 48, "quad": [48, 49, 51, 53, 57, 76, 80], "exclus": [48, 49, 79, 85, 186, 261], "emphas": 48, "typeset": [48, 193], "doit": [48, 49, 51, 54, 55, 57, 76, 82, 98, 136, 138, 140, 151, 153, 156, 157, 159, 169, 178, 189, 195, 200, 205, 209, 210, 213, 215, 238, 240, 241, 243, 244, 259, 264], "seemingli": [48, 212], "nonsens": [48, 57], "r87": 48, "michael": [48, 187, 192], "april": 48, "1981": [48, 187], "305": 48, "350": [48, 108], "dl": [48, 177, 187], "cfm": [48, 187], "doid": [48, 187], "322248": 48, "322255": 48, "r88": 48, "sigma_not": 48, "r89": 48, "empty_sum": 48, "euler_maclaurin": [48, 53], "eval_integr": 48, "maclaurin": [48, 53], "endpoint": [48, 49, 53, 174, 201, 244], "28333333333333": 48, "sstr": [48, 173, 193], "full_prec": [48, 193], "26629073187415": 48, "0175000000000000": 48, "soon": [48, 49, 111, 164, 190], "eval_zeta_funct": 48, "is_absolutely_converg": 48, "sequence_term": 48, "is_converg": 48, "r90": 48, "absolute_converg": 48, "analogi": [48, 186], "prod_": [48, 54, 57, 74, 89, 164, 203], "respons": [48, 49, 97, 98, 111, 179, 226], "diverg": [48, 57, 128, 238, 245], "dirichlet": [48, 57, 213], "r91": 48, "convergence_test": 48, "reverse_ord": 48, "selector": [48, 80, 205, 231], "handi": [48, 49, 85, 193, 264], "s0": [48, 72, 74, 131], "expr_with_intlimit": [48, 76], "exprwithintlimit": [48, 76], "reorder_limit": 48, "r92": 48, "walli": 48, "w2": [48, 133], "w2e": 48, "risingfactori": [48, 56, 57, 193, 195], "combsimp": [48, 49, 54], "pe": 48, "gammasimp": [48, 49, 205], "rewrit": [48, 49, 51, 54, 55, 57, 74, 76, 79, 92, 98, 156, 189, 200, 201, 202, 205, 209, 210, 211, 212, 213, 249, 250, 263, 265], "r93": 48, "r94": 48, "capital_pi_not": 48, "r95": 48, "empty_product": 48, "r96": 48, "infinite_product": 48, "r97": 48, "expr_with_limit": [48, 76], "exprwithlimit": [48, 76], "change_index": 48, "trafo": 48, "newvar": 48, "mapsto": [48, 74, 80, 188], "p3": [48, 59, 61, 62, 64, 65, 98, 179, 183, 202, 213], "has_empty_sequ": [48, 76], "has_reversed_limit": [48, 76], "has_finite_limit": [48, 76], "____": [48, 53, 76, 131, 181, 194, 213, 231, 270], "___": [48, 53, 76, 77, 85, 181, 205, 213, 218, 231, 268], "rubric": [48, 49], "_____": [48, 213], "gosper": 48, "gosper_norm": 48, "monic": [48, 180, 181, 184, 186, 188, 189, 192], "gcd": [48, 49, 50, 85, 89, 155, 183, 184, 185, 187, 188, 189, 193, 205, 206], "gosper_term": 48, "s_n": [48, 189], "f_k": [48, 121, 186], "g_n": [48, 54, 189], "f_n": [48, 54, 57, 180, 186, 189, 209], "gosper_sum": 48, "r98": 48, "marko": 48, "petkovsek": [48, 211], "herbert": 48, "doron": 48, "zeilberg": [48, 211], "ak": [48, 195], "peter": [48, 54, 89, 125, 175, 231], "ltd": 48, "welleslei": 48, "usa": [48, 187], "1997": [48, 74, 89, 187, 203], "convert_xor": [49, 91], "09": [49, 96], "2e": 49, "xor": [49, 52, 79, 91, 193, 261], "sympifyerror": 49, "coerc": [49, 123, 186], "cooper": 49, "sage": [49, 89, 178, 263], "shouldn": [49, 190], "unsanit": [49, 232, 258], "bitcount": 49, "improperli": 49, "unbound": [49, 218], "23903": [], "fallback": [49, 77, 159, 173, 183, 193, 211], "ast": [49, 193, 250], "00000000000000": [49, 53, 160, 193, 213], "mylist1": 49, "mylist": 49, "mylist2": 49, "xxx": [49, 76, 85, 231, 233], "autosimplif": [49, 202, 205], "kern": 49, "r101": 49, "7649": 49, "r100": 49, "r104": 49, "r102": 49, "r103": 49, "r105": 49, "r106": 49, "r107": 49, "r99": 49, "recreat": 49, "isfinit": 49, "__cacheit": 49, "maxsiz": 49, "noqa": [49, 77, 184, 227], "f811": 49, "sympy_use_cach": 49, "cot": [49, 56, 57, 91, 190, 193, 202], "_arg": [49, 55], "as_mut": [49, 81, 82], "as_content_primit": [49, 85, 181, 189], "stub": 49, "as_dummi": [49, 76], "_0": [49, 74, 80, 85, 189, 232], "_r": [49, 159, 203, 212], "bound_symbol": [49, 76], "besid": [49, 186, 211], "typeinfo": 49, "truli": [49, 57, 164], "piec": [49, 53, 203, 226], "scan": 49, "appliedundef": 49, "canonical_vari": 49, "class_kei": 49, "sorted_class": 49, "dummy_eq": 49, "eg": [49, 111, 166, 212], "fromit": 49, "has_fre": 49, "has_xfre": [], "exp_polar": [49, 56, 57, 203], "dif": 49, "_prec": 49, "q_": [49, 173, 206, 209], "r_": [49, 100, 160, 190], "repl_dict": 49, "rcall": [49, 51], "simul": [49, 111, 126, 192], "abus": [49, 219], "succe": [49, 74, 79, 89, 149, 188, 200], "newtyp": 49, "intuit": [49, 164, 197, 209], "is_mul": 49, "is_add": [49, 212], "mysin": [49, 232, 258], "_eval_rewrite_as_": 49, "_eval_rewrite_as_co": 49, "tie": [49, 231], "delai": [49, 96, 123, 202, 224, 259], "unsort": [49, 102, 168], "333333333333333333333": 49, "333333333333333314830": 49, "wildcard": [49, 205], "registri": 49, "metaprogram": 49, "address": [49, 193, 212], "mostli": [49, 55, 76, 85, 126, 154, 176, 180, 192, 193, 203, 211, 268], "__truediv__": [49, 184], "class_nam": 49, "mysingleton": 49, "_eval_is_g": 49, "_eval_is_eq": 49, "args_cnc": 49, "cset": 49, "split_1": 49, "suppress": [49, 91, 222, 229], "as_coeff_add": 49, "dep": [49, 209], "as_coeff_expon": 49, "as_coeffici": 49, "zz": [49, 54, 71, 72, 76, 82, 85, 86, 89, 108, 177, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 208], "coeff_monomi": [49, 189], "polytool": [49, 189, 212], "monomi": [49, 76, 79, 89, 181, 183, 184, 185, 186, 192, 193, 269], "as_coefficients_dict": 49, "inquiri": 49, "121": [49, 54, 89, 98, 169, 211], "84": [49, 53, 89], "separatevar": [49, 204, 209], "n3": [49, 111], "as_leading_term": [49, 200], "logx": [49, 200], "cdir": 49, "_eval_as_leading_term": 49, "as_numer_denom": [49, 211], "as_ordered_factor": 49, "as_ordered_term": 49, "as_powers_dict": 49, "lost": 49, "as_real_imag": [49, 55, 80, 194], "as_term": 49, "aseri": 49, "hir": 49, "asymptot": [49, 74, 98, 259], "hierarch": 49, "normalis": [49, 195], "induc": [49, 80, 188, 202, 231], "gruntz": [49, 195], "majorli": 49, "mrv": [49, 200], "overal": [49, 166, 179, 211], "rapidli": [49, 53, 74, 200], "till": [49, 92, 93, 111, 209], "r108": 49, "dominik": [49, 195], "proc": [49, 211], "1993": [49, 187], "symp": 49, "239": 49, "244": [49, 186], "r109": 49, "p90": 49, "r110": 49, "asymptotic_expans": 49, "_first": [49, 55], "distribute_order_term": [49, 205], "compute_leading_term": 49, "could_extract_minus_sign": 49, "signsimp": [49, 118, 205], "failing_express": 49, "modulu": [49, 50, 52, 57, 59, 65, 80, 89, 92, 93, 180, 184, 186, 188, 189, 192, 212], "power_bas": [49, 80], "power_exp": [49, 80], "multinomi": [49, 80, 89, 213], "expr_free_symbol": 49, "extract_addit": 49, "extract_multipl": 49, "extract_branch_factor": 49, "allow_half": 49, "fourier_seri": [49, 196], "geto": 49, "getn": 49, "is_algebraic_expr": 49, "is_rational_funct": 49, "r111": 49, "algebraic_express": 49, "is_const": 49, "constanc": 49, "agre": [49, 50, 57, 64, 74, 203], "test_expr": 49, "prove": [49, 74, 76, 85, 180, 200, 209, 243], "failing_numb": 49, "is_meromorph": 49, "meromorph": [49, 57], "multivalu": [49, 55], "cut": [49, 54, 55, 57, 65, 74, 180, 203, 228, 234, 269], "hit": [49, 264], "is_polynomi": 49, "rational_funct": 49, "leadterm": 49, "xlim": [49, 179], "lseri": 49, "exaxmpl": 49, "nseri": 49, "_eval_nseri": 49, "innermost": 49, "disadvantag": 49, "met": [49, 206, 212, 227, 269], "nsimplifi": [49, 53, 204], "ratsimp": [49, 204], "removeo": [49, 126, 193, 259], "chop": [49, 53, 57, 80, 85, 211, 258], "123": [49, 54, 59, 79, 156, 169, 231, 238, 239], "lazi": [49, 82, 189], "smooth": [49, 53, 89, 195], "taylor_term": [49, 55], "previous_term": [49, 55], "dummy_index": 49, "temporari": [49, 225], "_dummy_10": 49, "contigu": [49, 203, 226], "x4": [49, 54, 183], "x5": [49, 54, 183], "x6": [49, 183], "x7": [49, 183], "x8": [49, 183], "x9": [49, 183], "x50": 49, "x51": 49, "y0": [49, 68, 70, 72, 209], "y1": [49, 126], "y2": [49, 126, 183], "y3": [49, 183], "y4": 49, "xa": [49, 181, 186], "xb": [49, 234], "xc": [49, 158, 234], "disambigu": 49, "x01": 49, "x02": 49, "x11": 49, "x12": 49, "escap": [49, 91, 179, 193, 234], "newli": [49, 74, 203], "undefinedfunct": [49, 171, 193, 225, 232], "f821": [49, 227], "cofactor": [49, 85, 184, 186, 189], "lcm": [49, 89, 184, 185, 186, 189, 193], "50000000000000": [49, 53], "100000000000000000000": 49, "1e20": 49, "00000000000000e": 49, "23456789123456789": 49, "23456789123457": 49, "00100": 49, "sent": [49, 76, 205], "789": [49, 89], "123_456": 49, "123456789": 49, "12e": 49, "012": 49, "60e2": 49, "6000": 49, "600e": 49, "125": [49, 53, 76, 89, 184, 199, 206], "099609": 49, "12500": 49, "12500000000000000000": 49, "closest": [49, 62], "5404319552844595": 49, "54": [49, 56, 85, 93, 186, 192, 231], "29999999999999998890": 49, "30000000000000000000": 49, "_mpf_": [49, 183], "4915": 49, "70": [49, 50, 66, 76, 85, 89, 192, 193, 206, 213, 234], "307": 49, "mpf": [49, 183, 184], "is_float": 49, "unprejud": 49, "3602879701896397": 49, "18014398509481984": [49, 205], "limit_denomin": 49, "320": 49, "75": [49, 52, 213, 238], "use_tri": [49, 89], "use_rho": [49, 89], "use_pm1": [49, 89], "factorint": [49, 89, 188, 189, 228], "trial": [49, 89, 186, 198, 202, 209, 213], "max_denomin": 49, "1000000": [49, 89], "141592653589793": 49, "311": [49, 89], "discard": [49, 188, 193, 212], "99999999999999999999": 49, "hookrightarrow": 49, "minpoli": [49, 183, 184, 188], "dmp": [49, 180, 184, 185, 189], "complexrootof": [49, 85, 184, 189, 209], "anp": [49, 183, 184, 188, 189], "to_list": [49, 182, 184], "minpoly_of_el": 49, "414213562": 49, "scratch": [49, 164], "6x": [49, 186], "to_number_field": [49, 188], "to_root": 49, "primitive_el": [49, 183, 184, 188], "knew": [49, 269], "golden": [49, 53, 89], "5th": [49, 126, 186, 188], "cyclotom": [49, 184, 185, 186, 187, 188, 189], "cyclotomic_poli": [49, 188, 189], "61803398874989": 49, "2i": 49, "a6": 49, "a6_wrong": 49, "309016994374947": 49, "951056516295154": 49, "field_el": 49, "is_alias": 49, "is_primitive_el": 49, "native_coeff": 49, "to_algebraic_integ": 49, "to_primitive_el": 49, "Its": [49, 55, 65, 126, 157, 186, 193, 201], "a_prim": 49, "number_cl": 49, "greatest": [49, 54, 59, 89, 181, 183, 184, 186, 187, 189, 192], "euclid": [49, 186, 187], "r112": 49, "euclidean_algorithm": 49, "r113": 49, "r114": 49, "1_": 49, "28number": 49, "r115": 49, "88": [49, 85, 89], "921_": 49, "r116": 49, "one_half": 49, "holder": 49, "ieee": [49, 50], "754": 49, "r117": 49, "affin": [49, 50, 64, 180], "compactif": 49, "r118": 49, "tild": [49, 55, 214], "phase": [49, 76, 96, 128, 131, 133, 143, 144, 212], "718281828": 49, "napier": 49, "r119": 49, "e_": [49, 54, 85], "28mathematical_const": 49, "r120": 49, "imaginary_unit": [49, 193], "141592654": 49, "circumfer": [49, 59], "diamet": [49, 59], "area": [49, 59, 61, 65, 66, 92, 93, 245], "is_irr": 49, "r121": 49, "mascheroni": [49, 57], "5772157": 49, "recur": 49, "harmon": [49, 56, 89, 100, 138, 178, 193, 254], "lim": [49, 200, 259], "limits_": [49, 178, 195, 263], "ln": [49, 55, 76, 193, 195, 209, 213, 269], "r122": 49, "93mascheroni_const": 49, "91596559": 49, "r123": 49, "27s_constant": 49, "r124": 49, "golden_ratio": 49, "tribonacci": [49, 56], "fibonacci": [49, 53, 56, 89], "predetermin": [49, 224], "8392867552141611326": 49, "r125": 49, "generalizations_of_fibonacci_numb": [49, 54], "tribonacci_numb": [49, 54], "modulo": [49, 50, 86, 89, 155, 180, 182, 183, 184, 186, 188, 189, 190, 192, 193, 196, 205], "r126": 49, "modular_multiplicative_invers": 49, "r127": 49, "extended_euclidean_algorithm": 49, "oscil": [49, 254], "conform": [49, 212, 217, 218], "r128": 49, "r129": 49, "zero_to_the_power_of_zero": 49, "r130": 49, "indeterminate_form": 49, "as_base_exp": [49, 55, 56, 231], "floor": [49, 56, 89, 183, 184, 193, 213], "geq": [49, 50, 57, 85, 189, 206, 213, 269], "factor_": [49, 50, 89, 189, 206], "perfect_pow": [49, 89], "infix": 49, "matmul": [49, 82, 182], "as_coef_mul": 49, "undesir": [49, 102, 111, 123, 181, 184, 203], "4596": 49, "compound": [49, 115, 157, 197, 251], "5728": 49, "suspect": [49, 89], "5706": 49, "moot": 49, "off": [49, 59, 74, 80, 88, 90, 113, 143, 180, 189, 193, 209, 224, 235, 238, 263], "nb": 49, "sensit": [49, 98, 126, 179, 186, 205, 224], "assocop": 49, "matadd": [49, 82, 193], "as_coef_add": 49, "extract_leading_ord": 49, "commutative_part": 49, "noncommutative_part": 49, "order_symbol": 49, "subprocess": [49, 193, 224, 225], "dividend": [49, 184], "rop": 49, "validrelationoper": 49, "rel_op": 49, "fourth": [49, 50, 181, 209, 259], "my_equ": 49, "my_inequ": 49, "reversedsign": 49, "_eval_eq": 49, "respond": 49, "boolalg": [49, 79], "client": [49, 228], "counterpart": [49, 50, 209, 259], "litter": 49, "oddbal": 49, "minor": [49, 59, 85, 193, 224], "caveat": [49, 189, 249, 256, 261], "succinctli": 49, "coupl": [49, 85, 123, 138, 153, 156], "annoy": 49, "succinct": 49, "occasion": 49, "r131": 49, "operar": 49, "circuit": [49, 143, 146], "greaterthanobject": 49, "__bool__": 49, "335": 49, "march": 49, "2012": 49, "r132": 49, "r133": 49, "r134": 49, "mdarg": 49, "fgh": 49, "vsin": 49, "vdiff": 49, "narg": [49, 56, 186], "naturals0": [49, 193, 212, 213], "evalul": 49, "fairli": [49, 57, 74, 113, 120, 168, 180], "conserv": [49, 106, 122, 170, 240, 245, 246], "136": [49, 85], "indirect": [49, 51, 57, 89, 159, 209], "implic": [18, 49, 79, 186], "fx": [49, 51, 179, 209, 210], "fxx": 49, "insconsist": 49, "presenc": [49, 55, 79, 110, 114, 123, 209, 217], "nonvanish": 49, "_diff_wrt": 49, "_sort_variable_count": 49, "vc": 49, "vsort": 49, "collaps": [49, 153, 205], "vsort0": 49, "vi": 49, "dfx": 49, "equidist": 49, "sq2": 49, "xl": 49, "d2fdxdy": 49, "doit_numer": 49, "z0": [49, 200], "unifi": [49, 127, 182, 184, 185, 186, 188, 189, 201], "zeroth": [49, 188], "idiff": [49, 66], "r135": 49, "legaci": [49, 76, 85, 213], "v5_2": 49, "infunct": 49, "algebraiccomput": 49, "f_real": [49, 56], "f_real_inherit": [49, 56], "is_singular": [49, 56, 72], "holomorph": [49, 56, 74], "superfici": 49, "unexpect": [49, 224], "ss": [49, 184], "denom": [49, 183, 184, 188, 205], "_eval_expand_bas": 49, "_eval_expand_complex": 49, "shut": [49, 189], "unwant": [49, 211, 231], "alphabet": [49, 50, 98, 164, 181, 206, 226], "expand_hint": 49, "_eval_expand_hint": 49, "liabl": [49, 79], "metahint": 49, "myclass": 49, "_eval_expand_doubl": 49, "hyperexpand": [49, 57, 71, 74, 203], "div": [49, 181, 183, 184, 189, 193, 205, 264], "horner": [49, 126, 186, 189], "untouch": 49, "dkei": 49, "mixin": [49, 231], "maxn": [49, 53, 80], "subresult": [49, 184, 187, 189], "000100000000000000": 49, "maxprec": 49, "quadratur": [49, 53, 76, 209], "tanh": [49, 53, 56, 76, 190, 193, 205, 269], "oscillatori": [49, 53, 198], "osc": [49, 53], "advers": 49, "1e16": 49, "291": 49, "builtin": [49, 184, 193, 201, 234, 268], "speedup": [49, 85, 90, 186, 190, 232], "framework": [49, 111, 218, 224, 226, 232], "slice": [49, 79, 80, 85, 91, 184, 189, 199, 201, 205, 214, 231], "parametris": [49, 201], "element_kind": [49, 80, 201], "tuple_count": 49, "setkind": [49, 80, 251], "isprimit": 49, "_gcd_term": 49, "terms_gcd": [49, 184, 189], "entiti": [49, 59, 62, 63, 65, 66, 74, 111, 124, 174, 212, 246, 255, 265], "arguement": 49, "broad": [49, 264], "lex": [49, 77, 173, 181, 183, 184, 186, 189, 190, 192, 193, 205], "grlex": [49, 77, 173, 184, 189, 192, 193], "grevlex": [49, 77, 173, 181, 186, 189, 192, 193], "rev": 49, "unaffect": [49, 212], "_node": 49, "fastest": [49, 54, 76, 89, 90, 190], "undecor": 49, "ineffici": [49, 85, 183], "breaker": 49, "hash": [49, 184, 186, 194, 205, 209, 224, 226], "collis": [49, 88], "wast": [49, 86, 182], "rng": 49, "getstat": 49, "intention": 49, "tn": 49, "td": [49, 193, 268], "randrang": 49, "999": [49, 53], "238": [49, 89], "randint": [49, 85, 186], "ri": [49, 193], "rv": [49, 202, 213, 231], "nonbas": 49, "postord": 49, "descend": [49, 180, 188, 226], "subtre": [49, 193, 228], "educ": [50, 85], "cryptograph": 50, "encrypt": 50, "hide": [50, 193], "cipher": 50, "vigener": 50, "hill": [50, 57, 106, 125, 169, 175, 238], "bifid": 50, "rsa": 50, "kid": 50, "feedback": [50, 95, 98, 262], "elgam": 50, "plaintext": [50, 193], "ciphertext": 50, "monoalphabet": 50, "polyalphabet": 50, "crypto": 50, "az": [50, 206], "uppercas": [50, 203], "hello": [50, 231], "world": [50, 114, 123, 231], "helloworld": 50, "check_and_join": 50, "padded_kei": 50, "puppi": 50, "opqrstuvwxi": 50, "puyoqrstvwx": 50, "artist": 50, "aphras": 50, "ara": 50, "hp": 50, "cycle_list": 50, "encipher_shift": 50, "msg": [50, 76], "decipher_shift": 50, "gonavybeatarmi": 50, "ct": [50, 78, 186], "hpobwzcfbubsnz": 50, "deciph": 50, "l1": [50, 59, 61, 62, 105, 108, 124, 184, 186, 189, 206, 213], "l2": [50, 61, 62, 105, 108, 145, 161, 184, 186, 213], "caesar": 50, "juliu": 50, "suetoniu": 50, "protect": [50, 193], "militari": 50, "nephew": 50, "augustu": 50, "reportedli": 50, "r136": 50, "caesar_ciph": 50, "r137": 50, "caesarsmethod": 50, "encipher_rot13": 50, "rot13": 50, "caeser": 50, "midwai": 50, "decipher_rot13": 50, "r138": 50, "decrypt": 50, "tbanilorngnezl": 50, "encipher_affin": 50, "_invers": 50, "cx": [50, 93], "recov": [50, 76, 164, 186, 188, 189, 206, 209], "decipher_affin": 50, "r139": 50, "affine_ciph": 50, "reciph": 50, "navi": 50, "beat": 50, "armi": 50, "trobmvenbgbalv": 50, "encipher_atbash": 50, "enciph": 50, "atbash": 50, "hebrew": 50, "decipher_atbash": 50, "tlmzebyvzgzinb": 50, "r140": 50, "encipher_substitut": 50, "oeyag": 50, "034": 50, "60n": 50, "v4b3": 50, "rm4": 50, "immateri": 50, "anyv": 50, "wherebi": 50, "r141": 50, "substitution_ciph": 50, "encipher_vigener": 50, "me": [50, 111, 126, 169, 193, 215], "mondai": 50, "qrgkkthrzqebpr": 50, "krypto": 50, "sculptur": 50, "cia": 50, "headquart": 50, "r143": 50, "decipher_vigener": 50, "alp": 50, "palimpsest": 50, "emufphzlrfaxyusdjkzldkrnshgnfivj": 50, "betweensubtleshadingandtheabsenc": 50, "blais": 50, "sixteenth": 50, "centuri": [50, 180], "diplomat": 50, "accid": [50, 232], "invent": [50, 188, 211, 263], "giovan": 50, "batista": 50, "belaso": 50, "1553": 50, "civil": [50, 92], "war": 50, "confederaci": 50, "brass": 50, "nsa": 50, "museum": 50, "fort": 50, "mead": 50, "r142": 50, "sender": 50, "assembl": [50, 74, 200], "concaten": [50, 80], "frequenc": [50, 76, 96, 98, 133, 135, 143, 160], "kasiski": 50, "discov": [50, 74, 102, 217, 265], "babbag": 50, "unbreak": 50, "ye": [50, 79, 209], "gonavybeatarmyyesyoucan": 50, "gold": 50, "auto_kei": 50, "goldbuggonavybeatarmyy": 50, "mcydwshkogamkzcelyfgayr": 50, "pt": [50, 58, 59, 60, 62, 63, 64, 65, 199], "vigenere_ciph": 50, "archiv": [50, 125, 206], "20071116100808": 50, "r144": 50, "filebox": 50, "vt": 50, "batman": 50, "goo": 50, "gl": 50, "ijr22d": 50, "decod": 50, "qrgk": 50, "kt": [50, 115], "hrzqe": 50, "bpr": 50, "meetmeonmondai": 50, "encipher_hil": 50, "z_": [50, 205], "r145": 50, "lester": 50, "1920": 50, "r146": 50, "polygraph": 50, "bare": [50, 106], "ceil": [50, 56, 89, 105, 193], "l_1": [50, 54, 99, 178, 203, 219], "l_t": 50, "c_t": 50, "l_i": [50, 178, 203], "decipher_hil": 50, "hill_ciph": 50, "june": [50, 85], "juli": [50, 206], "1929": 50, "306": 50, "312": [50, 169, 211, 238, 239], "ueqdueodoctcwq": 50, "st": [50, 76, 159], "hjeb": 50, "stqq": 50, "ispk": 50, "stzz": 50, "hd": 50, "ormv": 50, "uiki": 50, "encipher_bifid": 50, "polybiu": 50, "printabl": 50, "bifid5": 50, "decipher_bifid": 50, "encipher_bifid5": 50, "encipher_bifid6": 50, "r147": 50, "bifid_ciph": 50, "ieilhhfstsfqy": 50, "ieilh": 50, "hfst": 50, "fqyej": 50, "bmtwmg": 50, "bio": 50, "gold_bug": 50, "hg2sfuei7t": 50, "pug": 50, "heldo": 50, "wor6d": 50, "bifid5_squar": 50, "5x5": 50, "cap": [50, 53, 159, 201, 212], "tradition": [50, 57], "decipher_bifid5": 50, "round_trip": 50, "josi": 50, "osi": 50, "iosi": 50, "qiq": 50, "1901": 50, "felix": 50, "delastel": 50, "onto": [50, 62, 63, 64, 74, 78, 85, 88, 90, 188], "helen": 50, "cryptanalysi": 50, "german": 50, "fridai": 50, "ieilehfstsfxe": 50, "okai": 50, "decipher_bifid6": 50, "8am": 50, "kfkljjhf5mmmktfrgpl": 50, "meetmeonmondayat8am": 50, "bifid6_squar": 50, "6x6": 50, "rsa_public_kei": 50, "totient": [50, 89], "carmichael": [50, 89], "p_n": [50, 54, 57, 76], "multiprim": 50, "land": 50, "rad": [50, 96, 111, 188], "reduced_toti": [50, 89], "uniquenss": 50, "rsa_private_kei": 50, "e_0": 50, "canonicalz": 50, "61": [50, 54, 65, 85, 89, 195], "3233": 50, "797": 50, "1577": 50, "multipow": 50, "cryptosystem": 50, "coprim": [50, 76, 89, 155, 186, 206], "30030": 50, "becam": [50, 120], "hardest": 50, "claim": [50, 177, 203, 212], "encipher_rsa": 50, "decipher_rsa": 50, "r148": 50, "rsa_": 50, "28cryptosystem": 50, "r149": 50, "cacr": 50, "uwaterloo": 50, "techreport": 50, "2006": [50, 202], "cacr2006": 50, "r150": 50, "springer": [50, 76, 89, 186, 187, 209], "1007": 50, "2fbfb0055738": 50, "r151": 50, "itii": 50, "manuscript": 50, "1381": 50, "2753": 50, "413": 50, "1193": 50, "823": 50, "r152": 50, "r153": 50, "r154": 50, "r155": 50, "bmod": [50, 193], "vice": [50, 76, 89, 92, 149, 169, 180, 184, 241, 242, 261], "versa": [50, 76, 89, 92, 149, 169, 180, 184, 241, 242, 261], "asymmetr": [50, 65], "puk": 50, "prk": 50, "chines": [50, 89, 186], "k_1": [50, 89, 186, 203], "k_2": 50, "k_n": [50, 186], "p_3": [50, 176], "k_3": 50, "moduli": [50, 89, 186], "2048": [50, 89, 193], "overhead": [50, 90, 190], "modular": [50, 89, 155, 185, 187, 212], "crt": [50, 89, 186], "overcompens": 50, "theorit": 50, "new_msg": 50, "kid_rsa_public_kei": 50, "grade": [50, 77, 173, 189], "school": [50, 202], "bob": [50, 105], "369": 50, "58": [50, 85, 219], "kid_rsa_private_kei": 50, "encipher_kid_rsa": 50, "200": [50, 80, 85, 89, 92, 96, 238], "161": 50, "decipher_kid_rsa": 50, "pub": [50, 238], "pri": 50, "encode_mors": 50, "sep": [50, 193, 210, 224], "mors": 50, "attack": 50, "flank": 50, "r156": 50, "morse_cod": 50, "decode_mors": 50, "word_sep": 50, "mc": [50, 115], "east": 50, "r157": 50, "lfsr_sequenc": 50, "lfsr": 50, "c_k": 50, "golomb": [50, 89], "g157": 50, "autocorrel": 50, "lim_": [50, 55, 57, 74, 76, 200, 259, 263], "balanc": [50, 125, 180, 213, 224], "solomon": 50, "aegean": 50, "park": 50, "laguna": 50, "1967": [50, 187], "lfsr_autocorrel": 50, "lfsr_connection_polynomi": 50, "massei": 50, "m158": 50, "jame": [50, 186], "synthesi": 50, "bch": 50, "tran": 50, "122": [50, 52, 57], "127": [50, 89], "elgamal_public_kei": 50, "elgamal_private_kei": 50, "1031": 50, "636": 50, "212": [50, 76, 187], "mathmat": 50, "dlp": 50, "is_primitive_root": [50, 89], "encipher_elgam": 50, "c2": [50, 59, 66, 80, 82, 145, 159, 201, 209, 211, 213, 240, 243, 270], "encryp": 50, "decipher_elgam": 50, "eucliden": 50, "dh_public_kei": 50, "dh_private_kei": 50, "_p": [50, 159, 184, 186, 188, 200, 203, 211], "_g": 50, "diffi": 50, "hellman": [50, 89], "publicli": 50, "secretli": 50, "dh_shared_kei": 50, "sk": 50, "gm_public_kei": 50, "goldwass": 50, "micali": 50, "gm_private_kei": 50, "b_n": [50, 54, 78, 180, 196], "jacobi_symbol": [50, 89], "reconstruct": [50, 85, 186, 264], "residuos": 50, "entropi": [50, 213], "encipher_gm": 50, "public_kei": 50, "gm": [50, 162], "decipher_gm": 50, "encipher_railf": 50, "rail": 50, "railfenc": 50, "horel": 50, "ollwd": 50, "r160": 50, "rail_fence_ciph": 50, "decipher_railf": 50, "diffgeom": 51, "euclidean": [51, 62, 64, 169, 184, 186, 189], "r161": 51, "chart": [51, 179], "parameter": [51, 58, 59, 62, 65, 206], "r162": 51, "sussman": 51, "wisdom": 51, "farr": 51, "2013": [51, 61, 80, 267], "tranform": 51, "cartesian": [51, 92, 127, 132, 146, 149, 154, 174, 179, 180, 201, 212, 231, 241, 242, 244, 245], "polar": [51, 55, 57, 59, 65, 75, 92, 100, 129, 179, 201, 205, 212, 254], "relation_dict": 51, "car2d": 51, "pol": 51, "coordinatesymbol": 51, "jacobian": [51, 85, 123, 211], "jacobian_determin": 51, "r163": 51, "coordinate_system": 51, "base_oneform": 51, "coord_index": 51, "oneform": 51, "base_scalar": 51, "basescalarfield": 51, "base_vector": [51, 238], "coord_funct": 51, "to_si": 51, "coord": [51, 64, 66, 102, 157, 172], "immutabledensematrix": [51, 80, 81, 82, 83, 213, 232], "rn": 51, "r2_r": 51, "r2_p": 51, "jacobian_matrix": 51, "point_to_coord": 51, "coord_si": [51, 240], "imbu": 51, "difficulti": [51, 112], "arriv": [51, 186, 203, 205, 209, 213, 269], "inappropri": 51, "poin": 51, "unappropri": 51, "fy": [51, 179, 210], "ftheta": 51, "basevectorfield": 51, "point_p": 51, "point_r": 51, "s_field": 51, "dxi": 51, "v1": [51, 62, 85, 108, 126, 169, 170, 172, 213, 232, 238, 240, 241, 242, 243], "v2": [51, 62, 85, 108, 169, 170, 172, 232, 238, 240, 241, 242, 243], "v_1": [51, 188, 211], "v_2": [51, 188], "e_x": [51, 219], "e_i": [51, 180, 203, 219], "e_r": 51, "c_xy": 51, "c_xr": 51, "unfortun": [51, 53, 90, 192, 206], "e_rho": 51, "form_field": 51, "exterior": [51, 65], "dg": 51, "tensorproduct": [51, 156, 158, 214, 215], "multilinear": 51, "wedg": [51, 74], "tp1": 51, "tp": [51, 131, 158, 184], "wedgeproduct": 51, "wp1": 51, "liederiv": 51, "v_field": 51, "transport": 51, "pushforward": 51, "e_theta": 51, "basecovarderivativeop": 51, "christoffel": 51, "metric_to_christoffel_2nd": 51, "ch": [51, 85, 206], "cvd": 51, "covarderivativeop": 51, "intcurve_seri": 51, "vector_field": [51, 244], "start_point": 51, "dt": [51, 57, 114, 126, 168, 169, 171, 176, 177, 209, 269], "f_i": [51, 74, 85, 186, 190], "movement": 51, "intcurve_diffequ": 51, "init_cond": 51, "f_1": [51, 54, 57, 74, 98, 107, 110, 127, 180, 186, 189, 209], "f_0": [51, 54, 107, 186], "vectors_in_basi": 51, "kept": [51, 161, 177, 231, 264], "twoform_to_matrix": 51, "twoform": 51, "e_j": 51, "metric_to_christoffel_1st": 51, "levi": [51, 57, 213, 219], "civita": [51, 57, 219], "metric_to_riemann_compon": 51, "non_trivial_metr": 51, "dtheta": 51, "drho": 51, "metric_to_ricci_compon": 51, "ricci": 51, "fft": [52, 126], "ifft": 52, "ntt": 52, "intt": 52, "fwht": 52, "ifwht": 52, "mobius_transform": 52, "inverse_mobius_transform": 52, "convolution_fft": 52, "convolution_ntt": 52, "convolution_fwht": 52, "convolution_subset": 52, "covering_product": 52, "intersecting_product": 52, "radix": 52, "r164": 52, "coolei": 52, "93tukey_fft_algorithm": 52, "r165": 52, "fastfouriertransform": 52, "r166": 52, "r167": 52, "pz": [52, 96, 219], "643": [52, 89], "767": 52, "387": 52, "415": 52, "384": 52, "353": [52, 85], "r168": 52, "apfloat": 52, "r169": 52, "numbertheoretictransform": 52, "r170": 52, "discrete_fourier_transform_": 52, "r171": 52, "r172": 52, "r173": 52, "wht": 52, "r174": 52, "hadamard_transform": 52, "r175": 52, "fast_walsh": 52, "93hadamard_transform": 52, "r176": 52, "r177": 52, "mobiu": [52, 89], "lattic": [52, 206], "bitmask": 52, "r178": 52, "b6bius_inversion_formula": 52, "r179": 52, "csail": 52, "mit": 52, "rrw": 52, "conv": 52, "r180": 52, "arxiv": [52, 85, 100, 231], "1211": 52, "0189": 52, "r181": 52, "r182": 52, "r183": 52, "888": 52, "444": 52, "1283": 52, "19351": 52, "14219": 52, "15502": 52, "44": [52, 54, 85, 89, 202, 213], "41": [52, 59, 85, 89, 184, 206], "63": [52, 85, 89], "r184": 52, "convolution_theorem": 52, "r185": 52, "333": [52, 89], "555": 52, "222": 52, "666": 52, "15555": 52, "19404": 52, "r186": 52, "r187": 52, "68": [52, 77, 85, 89, 206], "48": [52, 59, 93, 206, 211, 213, 259], "2057": 52, "1870": 52, "r188": 52, "radioeng": 52, "cz": [52, 206], "fulltext": 52, "2002": [52, 180, 187, 190], "02_03_40_42": 52, "r189": 52, "r190": 52, "r191": 52, "AND": [52, 79, 245], "327": [52, 209], "r192": 52, "44288293815837": 53, "4429": 53, "4428829381583662470158809900606936986146216893757": 53, "28902548222223624241": 53, "091999668350375232456": 53, "14159265358979": [53, 57, 211], "333333333333333": [53, 183, 205], "1415926535": 53, "7182818284": 53, "100000": [53, 89, 96], "951": 53, "95678796130331164628399634646042209010610577945815": 53, "gmpy": [53, 183, 184, 268], "googl": [53, 178, 179, 212], "100000000000000": 53, "1000000000": 53, "125000000000000000000000000000": 53, "100000000000000005551115123126": 53, "100000000000000000000000000000": 53, "1415": 53, "uncertainti": [53, 164], "003": 53, "31417": 53, "propag": [53, 62, 130, 133], "5000": [53, 92], "50000000000000000000000000000": 53, "varphi": [53, 57, 188, 193, 209], "erron": 53, "goldenratio": [53, 194, 205], "34665576869e": 53, "208": [53, 189], "64613129282185e": 53, "60123853010113e": 53, "210": [53, 89, 206], "thousand": [53, 89, 258], "precisionexhaust": 53, "43466557686937456435688527675040625802564660517371780402481729089536555417949051890403879840079255169295922593080322634775209689623239873322471161642996440906533187938298969649928516003704476137795166849228875": 53, "binet": 53, "104": 53, "1336": 53, "portion": [53, 65, 80, 85], "meaningless": 53, "012297": 53, "9562288417661": 53, "956": 53, "29128599706266": 53, "2912859970626635404072825905956005414986193682745": 53, "14159265358979323846264338328": 53, "integrand": [53, 57, 73, 74, 76, 203], "struggl": [53, 192], "346": 53, "34635637913639": 53, "dealt": [53, 74], "504067061906928": 53, "50406706190692837199": 53, "wrap_lin": [53, 76, 77, 85, 93, 173, 180, 181, 192, 193, 209], "intgrl": 53, "extrapol": [53, 200], "richardson": [53, 200, 212], "slowli": [53, 200], "64493406684823": 53, "577215664901533": 53, "57721566490153286060651209008240243104215933593992": 53, "10000000": [53, 189], "20000000": [53, 189], "693147255559946": 53, "tune": [53, 77, 173, 193], "worthwhil": 53, "hypergeometr": [53, 54, 56, 67, 69, 73, 74, 187, 197, 204, 209, 211, 213, 249, 269], "ramanujan": [53, 54, 89], "9801": 53, "1103": 53, "26390": 53, "396": [53, 111], "141592653589793238462643383279502884197169399375105820974944592307816406286208": 53, "99862803482534211706798214808651328230664709384460955058223172535940812848111745": 53, "02841027019385211055596446229489549303819644288109756659334461284756482337867831": 53, "355": [53, 89, 187], "113": [53, 89, 206], "33333": [53, 76], "635": 53, "504": [53, 187], "130198866629986772369127970337": 53, "49": [53, 54, 89, 93, 186, 206], "___________": [53, 93, 209], "k_sym": 54, "binom": [54, 89, 213, 269], "dotsc": [54, 195], "j_1": [54, 138, 139, 156, 178, 195, 214], "j_2": [54, 138, 139, 156, 178, 195], "dotsb": [54, 195], "atop": [54, 57, 195, 203], "2j_2": [54, 195], "3j_2": [54, 195], "j_": [54, 57, 74, 76, 156, 195, 203, 263], "877": 54, "4140": 54, "21147": 54, "115975": 54, "846749014511809332450147": 54, "r193": 54, "bell_numb": 54, "r194": 54, "bellnumb": 54, "r195": 54, "bellpolynomi": 54, "6k": 54, "66": [54, 80, 85, 193], "1000001": 54, "r196": 54, "bernoulli_numb": 54, "r197": 54, "bernoulli_polynomi": 54, "r198": 54, "bernoullinumb": 54, "r199": 54, "bernoullipolynomi": 54, "_k": [54, 57, 76, 178, 188, 213], "expand_func": [54, 57], "6435": 54, "pascal": [54, 89], "4th": [54, 55, 71, 85, 89, 126], "195": 54, "r200": 54, "johndcook": 54, "binomial_coeffici": [54, 89], "c_n": [54, 57, 78, 209], "429": [54, 193], "1430": 54, "4862": 54, "39764993382373624267": 54, "020884341620842555705": 54, "r201": 54, "catalan_numb": 54, "r202": 54, "catalannumb": [54, 193], "r203": 54, "r204": 54, "geomet": [54, 180], "mathcircl": 54, "2j": [54, 186, 213], "r209": 54, "e_k": [54, 186], "1385": 54, "2702765": 54, "4096": 54, "r205": 54, "euler_numb": 54, "r206": 54, "eulernumb": 54, "r207": 54, "alternating_permut": 54, "r208": 54, "alternatingpermut": 54, "swing": 54, "derang": [54, 231], "r211": 54, "generate_derang": [54, 231], "r210": 54, "r212": 54, "double_factori": 54, "texttt": [54, 201], "r213": 54, "r214": 54, "paul": [54, 228], "235": 54, "268": 54, "1995": [54, 187, 205, 211], "f_z": [54, 174, 244], "f_2": [54, 74, 98, 107, 110, 127, 186, 203, 209], "r216": 54, "fibonacci_numb": 54, "r217": 54, "fibonaccinumb": 54, "t_0": [54, 206], "149": [54, 89], "r218": 54, "r219": 54, "tribonaccinumb": 54, "r220": 54, "oei": [54, 89], "a000073": 54, "137": [54, 85, 100], "205": [54, 74, 203], "5269": 54, "761": 54, "280": 54, "83711": 54, "27720": 54, "30247": 54, "9900": 54, "983697455232980674869851942390639915940": 54, "r221": 54, "harmonic_numb": 54, "r222": 54, "harmonicnumb": [54, 193], "r223": 54, "harmonicnumber2": 54, "l_0": [54, 99, 219, 220], "47": [54, 57, 85, 89, 100, 132, 164, 192], "76": [54, 85, 89, 186, 189], "r224": 54, "lucas_numb": 54, "r225": 54, "lucasnumb": 54, "2t": 54, "r226": 54, "genocchi_numb": 54, "r227": 54, "genocchinumb": 54, "irrelev": 54, "r228": 54, "number_theori": 54, "r229": 54, "pentagonal_number_theorem": 54, "pochhamm": [54, 193, 205], "r230": 54, "r231": 54, "pochhammer_symbol": 54, "274": 54, "225": [54, 89, 187], "511": 54, "9330": 54, "34105": 54, "42525": 54, "22827": 54, "5880": 54, "750": 54, "r232": 54, "stirling_numbers_of_the_first_kind": 54, "r233": 54, "stirling_numbers_of_the_second_kind": 54, "multiset": [54, 74, 228, 231], "babi": [54, 89, 231], "aa": [54, 178], "bb": [54, 178, 205, 231], "multiset_combin": [54, 231], "aab": [54, 231], "aabc": 54, "aaaabbbbcccc": 54, "m_1": [54, 98, 138, 156, 178, 206], "m_2": [54, 110, 127, 138, 156, 178], "m_k": 54, "r234": 54, "r235": 54, "tinyurl": 54, "cep849r": 54, "ba": [54, 231], "multiset_permut": [54, 231], "r236": 54, "aabbc": 54, "mississippi": [54, 231], "609": 54, "1521": 54, "1768": 54, "1224": [54, 89], "579": 54, "197": 54, "r237": 54, "undergradu": 54, "csse": 54, "uwa": 54, "au": 54, "cits7209": 54, "707106781186548": 55, "negativeon": [55, 264], "tangent": [55, 59, 61, 65, 76, 190, 209], "643501108793284": 55, "r238": 55, "ib": [55, 115], "complex_conjug": 55, "r242": 55, "r239": 55, "trigonometric_funct": 55, "r240": 55, "r241": 55, "elementaryfunct": 55, "trigonometryangl": 55, "r243": 55, "r244": 55, "r245": 55, "r246": 55, "r247": 55, "r248": 55, "cotang": [55, 190], "r249": 55, "r250": 55, "r251": 55, "secant": [55, 189], "r252": 55, "r253": 55, "r254": 55, "cosec": 55, "r255": 55, "r256": 55, "r257": 55, "unnorm": [55, 57], "qquad": [55, 164, 186], "jn": [55, 57, 156, 189, 193, 263], "spheric": [55, 56, 100, 138, 178, 179, 189, 238, 241, 242, 263], "r258": 55, "sinc_funct": 55, "r259": 55, "inverse_trigonometric_funct": 55, "r260": 55, "r261": 55, "r262": 55, "r263": 55, "r264": 55, "r265": 55, "r266": 55, "r267": 55, "arctan": [55, 190, 193], "r268": 55, "r269": 55, "arccot": [55, 193], "r273": 55, "r270": 55, "r271": 55, "r272": 55, "arcsec": [55, 193], "r274": 55, "r275": 55, "r276": 55, "arccsc": [55, 193], "quadrant": [55, 184, 212], "clock": [55, 202], "reurn": 55, "r277": 55, "r278": 55, "r279": 55, "arctan2": 55, "r280": 55, "hyperbolic_funct": 55, "r281": 55, "r282": 55, "arcsech": [55, 193], "imaginaryunit": [55, 193], "r283": 55, "r284": 55, "r285": 55, "arccsch": [55, 193], "567": 55, "r286": 55, "r287": 55, "ceilingfunct": 55, "r288": 55, "r289": 55, "floorfunct": 55, "r290": 55, "lfloor": [55, 184, 212, 213], "rfloor": [55, 184, 212, 213], "fractional_part": 55, "r291": 55, "fractionalpart": 55, "r292": 55, "w_k": 55, "635564016364870": 55, "34747534407696": 55, "41624341514535": 55, "lambert_w_funct": 55, "mathcal": [55, 74, 98, 124, 156, 178, 201], "cond": [55, 74, 76, 201], "piecewise_fold": 55, "folded_cond": 55, "ITE": [55, 79], "piecewise_exclus": [], "_eval_integr": [55, 76], "piecewise_integr": 55, "as_expr_set_pair": 55, "skip_nan": [], "mutual": [74, 177], "conjunct": [79, 179, 203, 224, 269], "conflict": [55, 89, 98, 111, 226], "supremum": [55, 201], "r293": 55, "directed_complete_partial_ord": 55, "r294": 55, "lattice_": 55, "28order": 55, "global_paramet": 55, "rootoftool": [55, 85, 189], "integer_nthroot": [55, 89], "r295": 55, "square_root": 55, "r296": 55, "r297": 55, "root_of_un": 55, "r298": 55, "principal_valu": [55, 76], "r299": 55, "cuberoot": 55, "powdenest": 55, "misc": [55, 80, 234, 249], "r300": 55, "r301": 55, "r302": 55, "cube_root": 55, "r303": 55, "polar_lift": [56, 57, 205], "periodic_argu": 56, "principal_branch": [56, 74], "sec": [56, 76, 96, 188, 193, 202, 269], "csc": [56, 91, 193, 202], "acot": [56, 193], "asec": [56, 193], "acsc": [56, 193], "hyperbol": [56, 57, 190, 212, 265, 269], "hyperbolicfunct": 56, "coth": [56, 193, 205], "sech": [56, 193], "csch": [56, 193], "asinh": [56, 193], "acosh": [56, 193], "atanh": [56, 190, 193, 203], "acoth": [56, 193], "asech": [56, 193], "acsch": [56, 193], "roundfunct": 56, "lambertw": [56, 190, 193, 211, 212, 270], "exprcondpair": 56, "miscellan": [56, 230, 255, 256], "identityfunct": 56, "real_root": [56, 189, 211], "bell": [56, 143, 195, 231], "bernoulli": [56, 57, 193, 211, 213], "catalan": [56, 193], "subfactori": [56, 193, 231], "factorial2": [56, 160, 193], "fallingfactori": [56, 193], "luca": [56, 89, 193, 199], "genocchi": 56, "multifactori": 56, "nc": 56, "nt": [56, 231], "fresnel": [56, 132, 193, 203], "airi": [56, 76, 209], "spline": 56, "ellipt": [56, 59, 89, 180], "mathieu": [56, 193], "delta_funct": [57, 76], "int_": [57, 73, 74, 76, 196, 259, 263], "sum_i": [57, 200], "is_simpl": 57, "tensor_funct": 57, "kroneckerdelta": [57, 82, 159, 193, 205], "r304": 57, "deltafunct": [57, 76], "h0": 57, "electron": [57, 100, 202], "signal": [57, 79, 89, 96, 98, 126, 186, 264], "improp": [57, 76], "convolut": [57, 195, 249], "r305": 57, "heavisidestepfunct": 57, "r306": 57, "iv": [57, 190], "105": [57, 89, 189, 206], "parg": 57, "singularity_funct": 57, "singularityfunct": [57, 76, 92], "macaulai": 57, "heavisidediracdelta": 57, "r307": 57, "r308": 57, "r309": 57, "r310": 57, "r311": 57, "setminu": [57, 74], "17805383034794561964694160130": 57, "65092319930185633889": 57, "8724366472624298171": 57, "r312": 57, "r313": 57, "r314": 57, "loggammafunct": 57, "r315": 57, "19093197": 57, "5173168": 57, "ni": [57, 89], "r316": 57, "polygamma_funct": 57, "r317": 57, "polygammafunct": 57, "r318": 57, "r319": 57, "polygamma2": 57, "r320": 57, "digamma_funct": 57, "r321": 57, "digammafunct": 57, "r322": 57, "r323": 57, "trigamma_funct": 57, "r324": 57, "trigammafunct": 57, "r325": 57, "int_x": 57, "_1f_1": 57, "confluent": [57, 203], "xt": 57, "expint": [57, 193], "r326": 57, "incomplete_gamma_funct": 57, "upper_incomplete_gamma_funct": 57, "r327": 57, "r328": 57, "r329": 57, "gamma2": 57, "r330": 57, "gamma3": 57, "r331": 57, "exponential_integr": 57, "relation_with_other_funct": 57, "int_0": [57, 74, 76, 259, 269], "r332": 57, "lower_incomplete_gamma_funct": 57, "r333": 57, "r334": 57, "r335": 57, "r336": 57, "multigamma": 57, "gamma_p": 57, "r337": 57, "multivariate_gamma_funct": 57, "beta_funct": 57, "eulerian": 57, "02671848900111377452242355235388489324562": 57, "2112723729365330143": 57, "7655283165378005676": 57, "r338": 57, "r339": 57, "betafunct": 57, "r340": 57, "error_funct": 57, "999999984582742099719981147840": 57, "1296959": 57, "73071763923152794095062": 57, "r341": 57, "r342": 57, "r343": 57, "r344": 57, "0000000154172579002800188521596734869": 57, "r345": 57, "r346": 57, "r347": 57, "r348": 57, "5648024145755525987042919132": 57, "995322265018952734162069256367": 57, "r349": 57, "r350": 57, "r351": 57, "r352": 57, "179143454621291692285822705344": 57, "r353": 57, "inverse_funct": 57, "r354": 57, "inverseerf": [57, 193], "r355": 57, "r356": 57, "inverseerfc": [57, 193], "r357": 57, "inverseerf2": 57, "fresnelintegr": 57, "343415678363698242195300815958": 57, "fresnelc": [57, 193, 203], "r358": 57, "fresnel_integr": 57, "r359": 57, "r360": 57, "r361": 57, "r362": 57, "wrench": 57, "jr": 57, "vicki": 57, "allei": 57, "488253406075340754500223503357": 57, "r363": 57, "r364": 57, "r365": 57, "r366": 57, "r367": 57, "ei": [57, 74, 188, 193, 203, 206, 209, 219], "background": [57, 77, 120, 173, 176, 267], "cauchi": [57, 74, 76, 184, 209, 213], "219383934395520": 57, "21938393439552": 57, "shi": [57, 74, 193, 203], "e1": [57, 59, 66, 111, 183, 188, 200, 209, 212], "li": [57, 65, 76, 89, 159, 193, 247], "r368": 57, "r369": 57, "r370": 57, "sfu": [57, 76], "cbm": [57, 76], "aand": [57, 76], "page_228": 57, "int_1": [57, 74], "zt": [57, 74], "unbranch": [57, 74], "meijerg": [57, 68, 74, 76, 193, 213, 269], "postiv": 57, "r371": 57, "r372": 57, "expintegral": [57, 193], "r373": 57, "04516378011749278484458888919": 57, "0652795784357498247001125598": 57, "08346052231061726610939702133": 57, "soldner": 57, "findroot": [57, 211], "45136923488338": 57, "r374": 57, "logarithmic_integr": 57, "r375": 57, "logarithmicintegr": 57, "r376": 57, "r377": 57, "soldnersconst": 57, "92242131492155809316615998938": 57, "r378": 57, "r379": 57, "r380": 57, "r381": 57, "trigonometric_integr": 57, "_1": [57, 85, 169, 203, 232], "somewhat": [57, 76, 111, 184], "r382": 57, "r383": 57, "r384": 57, "laurent": [57, 184, 190, 209], "j_n": [57, 156], "r385": 57, "r386": 57, "r387": 57, "r388": 57, "yn": [57, 193, 199], "r389": 57, "i_": [57, 74, 203, 213, 214], "iz": 57, "r390": 57, "k_": [57, 74, 121, 122], "r391": 57, "hankel1": [57, 193], "hankel": [57, 76], "iy_": 57, "hankel2": [57, 193], "r392": 57, "hankelh1": [57, 193], "r393": 57, "hankelh2": [57, 193], "2z": [57, 212, 213], "orthopoli": [57, 189], "spherical_bessel_fn": [57, 189], "3j": [57, 138, 178], "099419756723640344491": 57, "054525080242173562897": 57, "r394": 57, "y_n": [57, 206], "18525034196069722536": 57, "014895573969924817587": 57, "r395": 57, "jn_zero": 57, "besseljzero": 57, "sph_jn": 57, "7635": 57, "095": 57, "323": [57, 89], "515": 57, "marcumq": 57, "marcum": 57, "q_m": 57, "r396": 57, "marcum_q": 57, "r397": 57, "airybas": 57, "airyai": [57, 193, 209], "ai": [57, 89, 189, 206, 234, 269], "airyaiprim": [57, 193], "22740742820168557599192443603787379946077222541710": 57, "airybi": [57, 193, 209], "airybiprim": [57, 193], "r398": 57, "airy_funct": 57, "r399": 57, "r400": 57, "encyclopediaofmath": 57, "r401": 57, "airyfunct": 57, "41230258795639848808323405461146104203453483447240": 57, "r402": 57, "r403": 57, "r404": 57, "r405": 57, "61825902074169104140626429133247528291577794512415": 57, "r406": 57, "r407": 57, "r408": 57, "r409": 57, "27879516692116952268509756941098324140300059345163": 57, "r410": 57, "r411": 57, "r412": 57, "r413": 57, "bspline": 57, "bspline_basi": 57, "knot": 57, "cubic": [57, 180, 189, 206, 211], "bspline_basis_set": 57, "r414": 57, "interpolating_splin": 57, "131": [57, 169], "39": [57, 89, 192], "interpolating_poli": [57, 189], "zeta_funct": 57, "hurwitz": 57, "admit": [57, 209], "circumst": [57, 188, 263], "lerch": 57, "transcend": 57, "lerchphi": [57, 193], "dirichlet_eta": [57, 193], "20205690315959": 57, "polylog": [57, 193], "r415": 57, "r416": 57, "hurwitz_zeta_funct": 57, "r417": 57, "dirichlet_eta_funct": 57, "polylogarithm": 57, "sheet": [57, 202], "phi_0": 57, "ze": 57, "r418": 57, "bateman": 57, "erdelyi": 57, "1953": [57, 188], "york": [57, 74, 125, 203, 211], "mcgraw": [57, 106, 125, 169, 175, 238], "r419": 57, "r420": 57, "lerch_transcend": 57, "stieltj": [57, 193], "gamma_": [57, 99, 101], "r421": 57, "stieltjes_const": 57, "ap": [57, 61, 203], "bq": [57, 181, 182, 203], "a_p": [57, 74, 203, 269], "b_q": [57, 74, 203, 269], "_pf_q": [57, 203, 209, 269], "unicod": [57, 77, 85, 173, 193, 224, 263], "r422": 57, "r423": 57, "generalized_hypergeometric_funct": 57, "convergence_stat": 57, "radius_of_converg": 57, "radiu": [57, 59, 63, 65, 117, 119, 128, 132, 179, 212, 213, 247], "meijer": [57, 67, 69, 75, 76, 259, 269], "mellin": [57, 75, 76], "barn": 57, "b_m": [57, 74, 211], "confusingli": 57, "int_l": [57, 74, 203], "contour": [57, 59, 74, 179, 203], "__1": 57, "subvector": 57, "aother": 57, "bm": 57, "bother": [57, 264], "slater": [57, 203], "allow_hyp": [57, 205], "subsum": 57, "r424": 57, "r425": 57, "meijer_g": 57, "get_period": [57, 74], "appellf1": [57, 193], "b2": [57, 89, 92, 93, 103, 111, 126, 169, 182, 184, 193, 203, 206, 209, 243], "appel": 57, "0063339426292673": 57, "172870711": 57, "659936": 57, "15605338197184": 57, "r426": 57, "appell_seri": 57, "r427": 57, "hypergeometricfunct": 57, "elliptic_integr": 57, "elliptic_k": [57, 193], "tfrac": [57, 209, 213], "eccentr": [57, 59], "50923695405127": 57, "625146415202697": 57, "elliptic_f": [57, 193], "r428": 57, "r429": 57, "ellipticintegr": 57, "elliptick": [57, 193], "909449841483": 57, "74720545502474": 57, "r430": 57, "r431": 57, "ellipticf": 57, "elliptic_": [57, 59, 193], "55203744279187": 57, "290764986058437": 57, "991052601328069": 57, "81879421395609": 57, "r432": 57, "r433": 57, "elliptice2": 57, "r434": 57, "elliptic": [57, 193], "elliptic_pi": [57, 193], "50232379629182": 57, "760939574180767": 57, "29136443417283": 57, "32555634906645": 57, "r435": 57, "r436": 57, "ellipticpi3": 57, "r437": 57, "ellipticpi": [57, 193], "mathieu_funct": 57, "mathieubas": 57, "mathieusprim": [57, 193], "mathieuc": [57, 193], "mathieucprim": [57, 193], "r438": 57, "r439": 57, "r440": 57, "r441": 57, "mathieuandspheroidalfunct": 57, "r442": 57, "r443": 57, "r444": 57, "r445": 57, "r446": 57, "r447": 57, "r448": 57, "r449": 57, "r450": 57, "r451": 57, "r452": 57, "r453": 57, "chebyshevu": [57, 193], "chebyshevt_root": 57, "chebyshevu_root": 57, "assoc_legendr": [57, 193], "jacobi_poli": [57, 189], "gegenbauer_poli": [57, 189], "chebyshevt_poli": [57, 189], "chebyshevu_poli": [57, 189], "hermite_poli": [57, 189], "legendre_poli": [57, 189], "laguerre_poli": [57, 189], "r454": 57, "jacobi_polynomi": 57, "r455": 57, "jacobipolynomi": 57, "r456": 57, "jacobip": [57, 193], "jacobi_norm": 57, "normilz": 57, "p_m": 57, "delta_": [57, 156, 164], "r457": 57, "r458": 57, "r459": 57, "r460": 57, "gegenbauer_polynomi": 57, "r461": 57, "gegenbauerpolynomi": 57, "r462": 57, "gegenbauerc3": 57, "r463": 57, "chebyshev_polynomi": 57, "r464": 57, "chebyshevpolynomialofthefirstkind": 57, "r465": 57, "chebyshevpolynomialofthesecondkind": 57, "r466": 57, "r467": 57, "u_n": [57, 76, 186, 188], "r468": 57, "r469": 57, "r470": 57, "r471": 57, "r472": 57, "chebyshev_root": 57, "r473": 57, "legendre_polynomi": 57, "r474": 57, "legendrepolynomi": 57, "r475": 57, "legendrep": [57, 193], "r476": 57, "legendrep2": 57, "r477": 57, "associated_legendre_polynomi": 57, "r478": 57, "r479": 57, "r480": 57, "r481": 57, "hermite_polynomi": 57, "r482": 57, "hermitepolynomi": 57, "r483": 57, "hermiteh": [57, 193], "l_n": [57, 76], "r484": 57, "laguerre_polynomi": 57, "r485": 57, "laguerrepolynomi": 57, "r486": 57, "laguerrel": [57, 193], "r487": 57, "laguerrel3": 57, "r488": 57, "generalized_laguerre_polynomi": 57, "r489": 57, "associatedlaguerrepolynomi": 57, "r490": 57, "r491": 57, "spherical_harmon": 57, "ynm": [57, 178], "ynm_c": 57, "znm": 57, "r492": 57, "r493": 57, "sphericalharmon": 57, "r494": 57, "sphericalharmonici": 57, "r495": 57, "r496": 57, "r497": 57, "r498": 57, "z_n": [57, 187], "r499": 57, "r500": 57, "r501": 57, "eijk": 57, "levicivita": [57, 85], "eval_levicivita": 57, "pseudotensor": 57, "delta_rang": [57, 159], "kroneck": [57, 158, 159, 214, 219], "r502": 57, "kronecker_delta": [57, 159], "indices_contain_equal_inform": [57, 159], "fermi": [57, 159], "above_fermi": [57, 159], "below_fermi": [57, 159], "is_above_fermi": [57, 159], "is_below_fermi": [57, 159], "is_only_below_fermi": [57, 159], "is_only_above_fermi": [57, 159], "killable_index": [57, 159], "preferred_index": [57, 159], "point2d": [58, 59, 60, 61, 62, 64, 65, 66], "arbitrary_point": [58, 59, 60, 61, 62, 63, 65], "polyfunc": [58, 189], "ambient_dimens": [58, 60, 62, 64], "plot_interv": [58, 59, 62, 65], "lower_bound": [58, 59, 62, 65], "upper_bound": [58, 59, 62, 65], "counterclockwis": [58, 59, 60, 64, 93], "geometryent": [58, 59, 60, 62, 64, 65, 66], "hradiu": 59, "vradiu": 59, "geometryerror": [59, 62, 65, 66], "radii": 59, "foci": 59, "periapsi": 59, "apoapsi": 59, "focus_dist": 59, "shortest": [59, 62, 65, 176, 199, 205, 209, 231], "auxiliary_circl": 59, "xmin": [59, 60, 62, 64, 65, 179], "ymin": [59, 60, 62, 64, 65, 179], "xmax": [59, 60, 62, 64, 65, 179], "ymax": [59, 60, 62, 64, 65, 179], "rectangl": [59, 60, 62, 64, 65, 179, 189], "director_circl": 59, "perpendicular": [59, 62, 63, 65, 78, 118, 132, 177], "director": 59, "130": 59, "r503": 59, "encloses_point": [59, 60, 65], "border": [59, 65], "_slope": 59, "slope": [59, 60, 62, 65, 92, 93, 96], "eq1": [59, 209, 211, 212], "eq2": [59, 79, 209, 212], "r504": 59, "108270": 59, "r505": 59, "equation_of_a_shifted_ellips": 59, "evolut": 59, "focal": [59, 128, 132], "100500": 59, "363": [59, 89, 187], "175": [59, 85, 186, 187], "is_tang": [59, 61], "tangent_lin": 59, "normal_lin": 59, "line2d": [59, 62, 65], "quartic": [59, 189, 211], "2020": [59, 138], "polar_second_moment_of_area": [59, 65], "moment": [59, 65, 92, 93, 113, 120, 122, 168, 179, 189, 206, 213], "constitu": [59, 65, 108, 169, 199, 238], "planar": [59, 65, 93, 132], "resist": [59, 65, 92, 93, 202], "deflect": [59, 65, 92, 93], "bend": [59, 65, 92, 94], "r506": 59, "polar_moment_of_inertia": [59, 65], "random_point": [59, 62, 63], "arb": 59, "364": 59, "notimpl": [59, 188], "second_moment_of_area": [59, 65], "centroid": [59, 65, 66, 92], "i_xx": [59, 65], "i_yi": [59, 65], "i_xi": [59, 65], "ellis": 59, "r507": 59, "list_of_second_moments_of_area": 59, "section_modulu": [59, 65], "sympify": [59, 65, 92, 103, 108, 130, 133, 171], "farthest": [59, 65], "s_x": [59, 65], "s_y": [59, 65], "r508": 59, "semilatus_rectum": 59, "semi": [59, 62, 89], "latu": 59, "rectum": 59, "chord": 59, "conic": [59, 206, 238], "directrix": 59, "r509": 59, "semilatusrectum": 59, "r510": 59, "latus_rectum": 59, "collinear": [59, 61, 63, 64, 65, 179], "gx": 59, "hy": 59, "synonym": [59, 188], "p4": [59, 62, 64, 65, 179], "boundari": [60, 62, 92, 93, 172, 190, 201, 209, 213], "t2": [60, 65, 66, 89, 103, 108, 206, 213, 219], "ordering_of_class": 60, "is_similar": [60, 62, 65, 66], "uniform": [60, 179, 213], "enlarg": 60, "shrink": [60, 74], "parameter_valu": [60, 63], "pent": 60, "rpent": 60, "rcirc": 60, "entity1": 61, "entity2": 61, "zp": 61, "is_collinear": [61, 64], "segment2d": [61, 62, 65, 66], "wikipappu": 61, "bc": [61, 231, 234, 243], "subs_point": 61, "p11": 61, "p12": 61, "p13": 61, "p21": 61, "p22": 61, "p23": 61, "ll1": 61, "ll2": 61, "ll3": 61, "ll4": 61, "ll5": 61, "ll6": 61, "pp1": 61, "pp2": 61, "pp3": 61, "encyclopedia": [61, 175], "apr": 61, "s_hexagon_theorem": 61, "clockwis": [61, 76, 80, 92, 93], "overlap": [61, 66, 88, 180, 201, 234], "infanc": 61, "geometryresult": 61, "fair": [61, 213], "angle_between": [62, 63, 65, 169], "reflex": 62, "eman": 62, "readili": [62, 85], "sw": 62, "obtus": 62, "smallest_angle_between": 62, "line3d": [62, 63, 64], "is_perpendicular": [62, 63, 64, 65], "ray2d": [62, 65], "closing_angl": 62, "are_concurr": [62, 63], "concurr": [62, 63, 190], "l3": [62, 186], "l4": 62, "bisector": [62, 65], "p5": [62, 64, 65, 179], "p6": [62, 65, 179], "p7": [62, 65, 179], "segment3d": [62, 63], "direction_ratio": [62, 64], "is_parallel": [62, 63], "parallel_lin": 62, "perpendicular_lin": [62, 63], "perpendicular_seg": 62, "enpoint": 62, "reform": 62, "92": [62, 187, 209, 213], "ccw": [62, 65], "ray3d": [62, 63, 132], "xdirect": 62, "ydirect": 62, "midpoint": [62, 64, 65, 76, 179, 243], "170": [62, 213], "341": 62, "perpendicular_bisector": 62, "linearentity2d": 62, "linearentity3d": [62, 63], "direction_cosin": [62, 64], "zdirect": 62, "normal_vector": [63, 132], "proce": [63, 123, 186, 188, 203, 211], "147": 63, "321": 63, "is_coplanar": 63, "perpendicualar": 63, "parallel_plan": 63, "on_circl": 63, "off_circl": 63, "perpendicular_plan": 63, "pt1": 63, "projection_lin": 63, "on_morph": 64, "affine_rank": 64, "are_coplanar": 64, "canberra_dist": 64, "canberra": 64, "geometricent": 64, "taxicab_dist": 64, "is_concycl": 64, "concycl": 64, "fewer": [64, 65, 123, 213, 259], "is_scalar_multipl": 64, "ambient": 64, "orthogonal_direct": 64, "taxicab": 64, "_nocheck": 64, "are_collinear": 64, "4x4": [64, 88, 131, 213], "travers": [65, 89, 104, 189, 202, 218, 228, 249, 264], "unrot": 65, "circumscrib": 65, "spin": [65, 100, 113, 145, 146, 154], "perimet": [65, 245], "contact": [65, 113, 116, 117, 118, 119, 176, 217], "38": [65, 85, 89, 193, 206, 208, 213], "cut_sect": 65, "upper_polygon": 65, "lower_polygon": 65, "upper_seg": 65, "lower_seg": 65, "r511": 65, "r512": 65, "paulbourk": 65, "polygonmesh": 65, "insidepoli": 65, "first_moment_of_area": 65, "q_x": [65, 176], "q_y": [65, 176], "625": [65, 247], "3125": [65, 213], "525": 65, "3000": [65, 92], "r513": 65, "skyciv": 65, "beam": [65, 128, 131, 254], "bmd": 65, "r514": 65, "mechanicalc": 65, "poly1": 65, "poly2": 65, "interior": [65, 189, 201], "180": [65, 177, 187], "r515": 65, "r516": 65, "r517": 65, "apothem": 65, "interior_angl": 65, "exterior_angl": 65, "circumcircl": 65, "incircl": 65, "inradiu": 65, "inscrib": 65, "circumcent": 65, "circumradiu": 65, "leg": 65, "square_in_unit_circl": 65, "kite": 65, "asa": 65, "sa": [65, 189], "sss": 65, "altitud": 65, "orthocent": 65, "exradii": 65, "median": [65, 213, 255], "medial": 65, "nine_point_circl": 65, "straight": [65, 71, 96, 114, 176, 209], "eulerlin": 65, "equilater": 65, "coincid": [65, 85, 88, 105, 111, 180, 238, 242, 261], "excent": 65, "excircl": 65, "touch": [65, 113, 202], "r518": 65, "ly": [65, 85, 184], "exradiu": 65, "r519": 65, "r520": 65, "incent": 65, "is_equilater": 65, "is_isoscel": 65, "is_right": 65, "is_scalen": 65, "nine": [65, 193], "feet": 65, "real_num": 66, "hull": 66, "r521": 66, "graham_scan": 66, "r522": 66, "andrew": 66, "1979": [66, 164], "geomalgorithm": 66, "a10": 66, "_hull": 66, "t3": [66, 206], "mass": [66, 100, 101, 102, 103, 105, 106, 110, 111, 113, 114, 115, 117, 119, 120, 121, 122, 126, 127, 135, 160, 162, 163, 164, 174, 176, 224, 245, 246], "averag": [66, 76, 89, 186, 213], "qq": [67, 68, 70, 71, 72, 76, 180, 181, 182, 183, 185, 186, 188, 189, 190], "p_r": 67, "holonomic_funct": 67, "from_hyp": [68, 71], "holonomicfunct": [68, 69, 71], "from_meijerg": [68, 71], "initcond": [68, 70, 71], "expr_to_holonom": [68, 71, 72, 73], "lenic": [68, 70], "ground": [68, 113, 116, 117, 118, 119, 180, 183, 184, 186, 188, 189, 211, 268], "meijerint": [68, 70, 74, 76], "_rewrite1": [68, 74], "_convert_poly_rat_alg": [68, 70], "_create_t": [68, 70], "differentialoper": [69, 71, 148], "differentialoperatoralgebra": 69, "_create_lookup_t": [70, 74], "old_poly_r": [71, 72, 180, 183, 184], "to_expr": [71, 72, 73, 98], "to_sequ": 71, "n_0": [71, 186, 211, 212], "indici": [71, 72, 73, 209], "c_j": [71, 74, 203], "holonomicsequ": 71, "r523": 71, "hal": 71, "inria": [71, 76], "fr": [71, 76, 89, 106, 111, 113, 114, 117, 118, 121, 123, 126, 213], "00070025": 71, "r524": 71, "risc": [71, 209, 238], "jku": [71, 209, 238], "risc_2244": 71, "diplform": 71, "_recur": 71, "rk4": 71, "71828182845905": 71, "10517083333333": 71, "22140257085069": 71, "34985849706254": 71, "49182424008069": 71, "64872063859684": 71, "82211796209193": 71, "01375162659678": 71, "22553956329232": 71, "45960141378007": 71, "71827974413517": 71, "331": 71, "4641": 71, "61051": 71, "771561": 71, "9487171": 71, "14358881": 71, "357947691": 71, "5937424601": 71, "to_hyp": 71, "as_list": [71, 189], "to_meijerg": 71, "homogen": [72, 76, 85, 98, 184, 186, 189, 206, 209, 210, 213], "1_0": 72, "1_1": 72, "0_0": 72, "0_1": 72, "pyplot": [72, 126], "plt": [72, 126], "list_of_poli": 72, "weyl": [72, 78], "Ore": 72, "dxa": 72, "endomorph": [72, 188], "frobeniu": [73, 85, 89, 186, 187], "subtleti": 74, "recast": [74, 205, 211, 212], "branchpoint": 74, "crude": [74, 113, 179], "decre": 74, "biholomorph": 74, "topologi": [74, 201], "neighbourhood": 74, "evid": [74, 106, 118, 203], "peculiar": [74, 177], "_split_mul": 74, "_mytyp": 74, "inequival": 74, "_mul_as_two_part": 74, "twist": 74, "recognis": [74, 183, 203, 205], "anywai": [74, 205, 209], "analyitc": 74, "_rewrite_singl": 74, "_rewrite2": 74, "_rewrite_saxena_1": 74, "_rewrite_saxena": 74, "blogpost": 74, "remedi": 74, "exploit": [74, 225], "transpar": [74, 77, 173], "nessgrh": 74, "wordpress": [74, 206], "07": 74, "stade": 74, "c_u": 74, "d_1": [74, 164, 189, 213], "d_v": 74, "amalgam": 74, "prudnikov1990": [74, 203], "luke1969": [74, 203], "c_3": [74, 209], "c_4": 74, "visibl": [74, 179], "fulfil": [74, 178], "vee": [74, 79], "lceil": 74, "rceil": 74, "d_j": [74, 164, 203], "lambda_c": [74, 122], "lambda_": 74, "z_0": [74, 205], "z_1": 74, "a_i": [74, 164, 169, 177, 181, 186, 203], "c_5": 74, "c_6": 74, "c_7": 74, "c_8": 74, "lvert": 74, "rvert": 74, "c_9": 74, "versatil": 74, "bz": [74, 206, 219], "deform": [74, 93], "encircl": 74, "appeal": 74, "fox": 74, "obstacl": 74, "identif": [74, 212], "domin": [74, 80, 198, 200], "iT": 74, "omega_": 74, "disguis": 74, "meijerint_indefinit": 74, "meijerint_definit": 74, "meijerint_invers": 74, "kelli": [74, 203], "roach": [74, 203], "211": [74, 89, 189, 203, 209], "prudnikov": [74, 203], "yu": [74, 178, 203], "brychkov": [74, 203], "marichev": [74, 203], "gordon": [74, 138, 203], "breach": [74, 203], "_coeffexpvalueerror": 74, "_get_coeff_exp": 74, "_check_anteced": 74, "_check_antecedents_1": 74, "mt": 74, "_check_antecedents_invers": 74, "anteced": [74, 200], "_condsimp": 74, "hoc": 74, "simp": [74, 113, 169], "_dummi": 74, "_dummy_": 74, "_eval_cond": 74, "_expon": 74, "_find_splitting_point": 74, "fsp": 74, "_flip_g": 74, "_function": 74, "_guess_expans": 74, "sensibl": [74, 76], "_inflate_fox_h": 74, "_inflate_g": 74, "_int0oo": 74, "_int0oo_1": 74, "_int_invers": 74, "_is_analyt": 74, "almost": [74, 83, 91, 161, 179, 180, 184, 189, 190, 209, 213, 227, 228, 231, 263], "_meijerint_definite_2": 74, "expand_mul": 74, "trigexpand": 74, "_meijerint_definite_3": 74, "_meijerint_definite_4": 74, "only_doubl": 74, "_meijerint_indefinite_1": 74, "_mul_arg": 74, "_my_principal_branch": 74, "full_pb": 74, "nearer": 74, "superflu": 74, "opaqu": [74, 193], "fac": 74, "_rewrite_invers": 74, "costli": [74, 114, 265], "tx": [74, 267], "overview": [75, 181, 212, 245, 246], "argand": [75, 212], "lookup": [75, 76, 85, 89, 203], "laplac": [75, 76, 95, 96, 98, 213], "todo": [75, 137, 139, 143, 144, 148, 149, 151, 152, 153, 154, 155, 186, 193, 200, 218], "polytop": 75, "happili": [76, 217], "nonelementari": 76, "mellin_transform": 76, "bilater": 76, "mellintransform": 76, "integraltransform": 76, "nocond": 76, "inverse_mellin_transform": 76, "laplace_transform": [76, 98], "fourier_transform": 76, "hankel_transform": 76, "inverse_hankel_transform": 76, "suitabl": [76, 82, 91, 181, 183, 186, 188, 193, 203, 206, 209, 212, 214, 262], "inversemellintransform": 76, "attemp": 76, "laplacetransform": 76, "inverse_laplace_transform": 76, "singularit": [76, 123], "inverselaplacetransform": 76, "_fast_inverse_laplac": 76, "rootsum": [76, 189, 195], "fouriertransform": 76, "_fourier_transform": 76, "inverse_fourier_transform": 76, "sine_transform": 76, "inverse_sine_transform": 76, "cosine_transform": 76, "inverse_cosine_transform": 76, "bixk": 76, "inversefouriertransform": 76, "sinetransform": 76, "inversesinetransform": 76, "cosinetransform": 76, "inversecosinetransform": 76, "hankeltransform": 76, "ht": 76, "inversehankeltransform": 76, "_compute_transform": 76, "_as_integr": 76, "integraltransformerror": 76, "_name": 76, "_collapse_extra": 76, "needev": 76, "function_vari": 76, "transform_vari": 76, "lazard": [76, 186, 189], "rioboo": 76, "trager": 76, "horowitz": 76, "ostrogradski": 76, "ratint": 76, "rationaltool": [76, 189], "ratint_logpart": 76, "ratint_ratpart": 76, "r525": 76, "bronstein": [76, 187, 189, 195, 211], "verlag": [76, 187], "deg": [76, 96, 111, 181, 186, 188, 189], "q_i": [76, 107, 123], "_t": [76, 111, 126, 159, 168, 169, 172, 203, 213], "trigintegr": 76, "trigonometri": 76, "r526": 76, "integration_techniqu": 76, "deltaintegr": 76, "couldn": 76, "didn": [76, 85, 123], "singularityintegr": 76, "risch_integr": 76, "nonelementaryintegr": 76, "proven": [76, 89, 243, 261], "handle_first": 76, "separate_integr": 76, "rewrite_complex": 76, "forthcom": 76, "5109": 76, "outer": [76, 108, 124, 126, 142, 147, 148, 169, 172, 175, 177, 195, 201, 217, 238, 240, 241], "pop": [76, 206], "manualintegr": 76, "integral_step": 76, "student": [76, 202, 206, 213], "_i": [76, 159, 164, 190], "namedtupl": 76, "substep": 76, "sympy_gamma": 76, "app": 76, "intstep": 76, "urul": 76, "u_var": 76, "_u": [76, 159], "u_func": 76, "arctanrul": 76, "trigrul": 76, "rewriterul": 76, "addrul": 76, "powerrul": 76, "constanttimesrul": 76, "constantrul": 76, "norman": 76, "slowest": [76, 90], "retri": [76, 89], "degree_offset": 76, "unnecessary_permut": 76, "_try_heurisch": 76, "manuel": [76, 198], "poor": [76, 90], "man": [76, 187], "whittak": 76, "r527": 76, "sop": [76, 79], "cafe": 76, "pmint": 76, "r528": 76, "gedd": [76, 187], "stefanu": 76, "217": [76, 187], "r529": 76, "davenport": [76, 186, 187], "eurocam": 76, "lnc": [76, 187, 211], "157": [76, 89, 93, 187], "r530": 76, "iii": [76, 193, 209], "sigsam": 76, "bulletin": 76, "1982": [76, 178], "r531": 76, "transact": [76, 187], "1985": [76, 106, 125, 169, 238], "356": [76, 188, 211], "362": 76, "huge": [76, 89, 189, 229], "entail": 76, "delic": [76, 180], "albeit": [76, 241], "mimic": [76, 77, 173, 232], "moder": 76, "irrespect": [76, 206, 209, 234], "line_integr": 76, "as_sum": 76, "subinterv": 76, "trapezoid": [76, 85, 213], "730": 76, "809": 76, "decai": 76, "r532": 76, "riemann_sum": 76, "r533": 76, "cauchy_principal_valu": 76, "r534": 76, "cauchyprincipalvalu": 76, "int_a": 76, "uvar": 76, "ui": [76, 89, 210], "accomplish": [76, 123, 126, 244], "3aissu": 76, "3aopen": 76, "3aintegr": 76, "gauss_legendr": 76, "n_digit": 76, "legendr": [76, 89, 189, 193, 206], "r535": 76, "w_i": [76, 128, 189, 209], "7746": 76, "55556": 76, "88889": 76, "86114": 76, "33998": 76, "34785": 76, "65215": 76, "gauss_laguerr": 76, "gauss_gen_laguerr": 76, "gauss_hermit": 76, "gauss_chebyshev_t": 76, "gauss_chebyshev_u": 76, "gauss_jacobi": 76, "gauss_lobatto": 76, "gaussian_quadratur": 76, "r536": 76, "fsu": 76, "jburkardt": 76, "cpp_src": 76, "legendre_rul": 76, "laguerr": [76, 189, 193], "r537": 76, "41577": 76, "2943": 76, "2899": 76, "71109": 76, "27852": 76, "010389": 76, "22285": 76, "1889": 76, "9927": 76, "7751": 76, "8375": 76, "983": 76, "45896": 76, "417": [76, 205], "11337": 76, "010399": 76, "00026102": 76, "9855e": 76, "93laguerre_quadratur": 76, "r538": 76, "laguerre_rul": 76, "hermit": [76, 80, 85, 86, 182, 188, 189, 193, 213], "r539": 76, "2247": 76, "29541": 76, "1816": 76, "3506": 76, "3358": 76, "43608": 76, "00453": 76, "15707": 76, "72463": 76, "hermite_quadratur": 76, "r540": 76, "hermite_rul": 76, "r541": 76, "gen_hermite_rul": 76, "r542": 76, "19016": 76, "7845": 76, "5253": 76, "4493": 76, "31413": 76, "00906": 76, "97851": 76, "9904": 76, "3193": 76, "712": 76, "53087": 76, "67721": 76, "11895": 76, "0023152": 76, "r543": 76, "gen_laguerre_rul": 76, "r544": 76, "86602": 76, "0472": 76, "96593": 76, "70711": 76, "25882": 76, "5236": 76, "93gauss_quadratur": 76, "r545": 76, "chebyshev1_rul": 76, "r546": 76, "3927": 76, "7854": 76, "90097": 76, "62349": 76, "22252": 76, "084489": 76, "27433": 76, "42658": 76, "r547": 76, "chebyshev2_rul": 76, "jacobi": [76, 89, 100, 189, 193], "r548": 76, "7063": 76, "0973": 76, "33795": 76, "87174": 76, "5917": 76, "2093": 76, "050584": 76, "22169": 76, "39439": 76, "93jacobi_quadratur": 76, "r549": 76, "jacobi_rul": 76, "r550": 76, "gegenbauer_rul": 76, "lobatto": 76, "r551": 76, "3333": 76, "44721": 76, "16667": 76, "83333": 76, "93lobatto_rul": 76, "r552": 76, "page_888": 76, "intpoli": 76, "chin": 76, "al": [76, 111, 138, 186, 202, 205], "2015": [76, 212], "unit_cub": 76, "polytope_integr": 76, "eric": [76, 187], "jean": 76, "lasserr": 76, "sukumar": 76, "nonconvex": 76, "967": 76, "981": 76, "dilbert": 76, "engr": 76, "ucdavi": 76, "suku": 76, "max_degre": [76, 189], "689": [76, 93], "21875": 76, "octahedron": 76, "trivari": 76, "enable_automatic_int_sympif": 77, "enable_automatic_symbol": 77, "init_ipython_sess": 77, "argv": [77, 224], "init_python_sess": 77, "use_latex": [77, 173, 268], "quiet": 77, "str_printer": [77, 173], "latex_print": [77, 173], "pylab": 77, "stringifi": [77, 173], "sstrrepr": [77, 173, 193], "lexograph": [77, 173], "gui": [77, 173], "statu": 77, "\u03b8": [77, 105, 131, 212], "int_to_integ": 77, "decistmt": 77, "f401": 77, "0x12": 77, "num_column": [77, 173, 193, 209], "no_glob": [77, 173], "ip": [77, 147, 153, 173], "forecolor": [77, 173], "backcolor": [77, 173], "fontsiz": [77, 173, 193], "10pt": [77, 173, 193], "latex_mod": [77, 173], "print_builtin": [77, 173], "interactiveconsol": [77, 173], "preambl": [77, 173, 193], "handwritten": [77, 173], "ctan": [77, 173], "pkg": [77, 173], "dvi": [77, 173, 193], "foreground": [77, 173], "black": [77, 144, 155, 173, 193, 268], "white": [77, 173, 213], "documentclass": [77, 173, 193], "dpi": [77, 173], "u03b8": 77, "dvip": 77, "r553": 77, "r554": 77, "the_68_standard_colors_known_to_dvip": 77, "config": 77, "root_system": 78, "rootsystem": 78, "cartantyp": 78, "cartan": 78, "subalgebra": 78, "adjoint": [78, 80, 85, 136, 140], "hyperplan": 78, "k_y": 78, "r555": 78, "r556": 78, "humphrei": 78, "add_as_root": 78, "root1": 78, "root2": 78, "add_simple_root": 78, "newroot": 78, "cartan_matrix": 78, "dynkin_diagram": 78, "dynkin": 78, "root_spac": 78, "simple_root": 78, "type_a": 78, "typea": 78, "basic_root": 78, "iin": 78, "jth": [78, 212], "ijth": 78, "cartan_typ": 78, "highest_root": 78, "lie_algebra": 78, "positive_root": 78, "type_b": 78, "typeb": 78, "b4": 78, "b3": [78, 111, 126, 169, 243], "type_c": 78, "typec": 78, "c4": [78, 80, 82, 209], "type_d": 78, "d4": [78, 213], "dmension": 78, "type_": 78, "e6": 78, "type_f": 78, "typef": 78, "f_4": [78, 107], "f4": [78, 179], "type_g": 78, "typeg": 78, "weyl_group": 78, "weylgroup": 78, "semisimpl": 78, "isometri": 78, "coxeter_diagram": 78, "undirect": [78, 231], "s_is_j": 78, "delete_doubl": 78, "element_ord": 78, "weylelt": 78, "group_nam": 78, "group_ord": 78, "192": 78, "matrix_form": 78, "cartantype_gener": 78, "standard_cartan": 78, "dynkindiagram": 78, "cartanmatrix": 78, "sopform": 79, "minterm": 79, "dontcar": 79, "simplified_pair": 79, "combo": 79, "outcom": [79, 162, 213], "r557": 79, "quin": 79, "mccluskey_algorithm": 79, "posform": 79, "r558": 79, "anfform": 79, "truthvalu": 79, "anf": 79, "funciton": 79, "zhegalkin": 79, "r559": 79, "zhegalkin_polynomi": 79, "as_set": 79, "booleantru": 79, "doubt": [79, 111], "greet": 79, "booleanfals": 79, "universalset": 79, "nand": 79, "xnor": 79, "gate": [79, 139, 144, 146, 152, 153, 155], "perspect": [79, 89, 98, 164, 179, 226, 242, 246], "multiplex": 79, "disjunct": 79, "to_anf": 79, "oplu": [79, 143], "to_cnf": 79, "cnf": 79, "mccluskei": 79, "to_dnf": 79, "to_nnf": 79, "nnf": 79, "is_anf": 79, "is_cnf": 79, "is_dnf": 79, "is_nnf": 79, "gateinputcount": 79, "simplify_log": 79, "fewest": [79, 153], "bool_map": 79, "bool1": 79, "bool2": 79, "function1": 79, "function2": 79, "distribute_and_over_or": 79, "distribute_or_over_and": 79, "distribute_xor_over_and": 79, "eliminate_impl": 79, "truth_tabl": 79, "ibin": [79, 231], "integer_to_term": 79, "0001111011": [79, 231], "1101111000": [79, 231], "term_to_integ": 79, "bool_maxterm": 79, "maxterm": 79, "complement": [79, 82, 189, 212], "r560": 79, "canonical_normal_form": 79, "indexing_maxterm": 79, "bool_minterm": 79, "patter": 79, "r561": 79, "indexing_minterm": 79, "bool_monomi": 79, "enumar": 79, "anf_coeff": 79, "to_int_repr": 79, "all_model": 79, "unsatisfi": 79, "use_model": 79, "unsat": 79, "matrixbas": [80, 81, 82, 84, 182], "dirac": [80, 85, 96, 100, 101, 157, 193], "__abs__": [80, 184], "__add__": [80, 184, 188], "shapeerror": [80, 82, 85], "__len__": 80, "96": [80, 85, 213], "mismatch": 80, "matrix_multiply_elementwis": [80, 85], "applyfunc": [80, 81, 85, 118, 169, 214], "col": [80, 82, 85, 88, 98, 126, 182, 188, 265], "col_del": [80, 85, 265], "col_join": [80, 85, 113], "col_insert": [80, 265], "row_insert": [80, 265], "row_join": [80, 85, 113], "companion": [80, 82], "c0": [80, 82, 200, 209, 211], "sparsematrix": [80, 84, 85, 88, 194, 205], "diag": [80, 82, 85, 88, 126, 182, 219, 265], "immutablematrix": [80, 82, 84, 98, 169, 213, 238, 240, 265], "blockmatrix": [80, 82, 85], "sparsetool": [80, 88], "kth": [80, 89], "rowslist": [80, 182], "colslist": 80, "submatrix": [80, 85, 186, 213], "get_diag_block": [80, 82, 85], "decoupl": 80, "hstack": [80, 182], "is_anti_symmetr": 80, "is_diagon": [80, 85], "is_low": [80, 182], "is_upp": [80, 182], "matrixeigen": [80, 84], "is_diagonaliz": [80, 85], "is_hermitian": [80, 85], "is_lower_hessenberg": 80, "hessenberg": [80, 85], "superdiagon": 80, "is_upper_hessenberg": 80, "is_strongly_diagonally_domin": 80, "strongli": [80, 85, 182, 231], "m1": [80, 85, 89, 93, 130, 138, 156, 158, 162, 206, 209, 214, 219], "subdiagon": [80, 85], "is_weakly_diagonally_domin": 80, "weakli": [80, 231], "vacuou": 80, "jordan_block": [80, 85], "eigenv": [80, 85, 111, 113, 126, 153, 263, 265], "rectangular": [80, 85, 201, 212, 241], "r562": 80, "jordan_matrix": [80, 209], "dotprodsimp": 80, "blowup": 80, "multiply_elementwis": [80, 85], "hadamard": [80, 82, 85, 143, 144, 155, 193], "elementwis": [80, 82, 85, 214], "300": [80, 85, 89, 92, 174, 179, 190, 246], "bmatrix": [80, 82, 85, 114, 121, 122, 123, 124, 169, 177, 206], "a_0": [80, 85, 196, 206, 209, 214, 269], "vdot": [80, 82, 85, 164], "alpha_0": 80, "alpha_1": [80, 89, 188], "alpha_": [80, 178], "permute_col": 80, "permute_row": 80, "mulsimp": 80, "rmultipli": 80, "__rmul__": 80, "rot90": 80, "anticlockwis": 80, "row_del": [80, 85, 265], "todod": 80, "tolist": [80, 214], "vec": [80, 85, 126, 169, 178, 186, 243, 244, 246], "vech": 80, "check_symmetri": 80, "vstack": [80, 182], "w_": [80, 188], "wminu": 80, "wplu": 80, "r563": 80, "mathwork": [80, 96, 213, 265], "cleve": 80, "04": [80, 213], "r564": 80, "claredon": 80, "oxford": 80, "662": 80, "intm": 80, "undefinedkind": [80, 201], "tuplekind": [80, 201], "mutabledensematrix": [81, 182, 234], "densematrix": [81, 85], "ldldecomposit": [81, 85], "ldl": [81, 85], "choleski": [81, 85], "ludecomposit": [81, 82, 85, 265], "qrdecomposit": [81, 85], "as_immut": 81, "lower_triangular_solv": [81, 85], "upper_triangular_solv": [81, 85], "gauss_jordan_solv": [81, 85], "cholesky_solv": [81, 85], "diagonal_solv": [81, 85], "ldlsolv": [81, 85], "lusolv": [81, 85, 107, 123, 127, 211, 265], "qrsolv": [81, 85], "pinv_solv": [81, 85], "permutedim": [82, 214, 215], "arraytensorproduct": [82, 215], "from_index_summ": 82, "first_index": 82, "last_index": 82, "longrightarrow": 82, "matpow": [82, 193], "hadamardproduct": [82, 193], "hadamard_product": 82, "hadamardpow": [82, 193], "ddot": [82, 85, 114, 122, 173, 176, 193, 269], "functionmatrix": 82, "lazili": [82, 199], "342923500": 82, "permutationmatrix": [82, 85], "matrixpermut": 82, "companionmatrix": 82, "matrixset": [82, 201], "submatric": [82, 85, 182, 213], "block_collaps": 82, "dat": [82, 231], "irregular": [82, 85], "ldudecomposit": 82, "ldu": 82, "2x2": [82, 88, 128, 182, 209], "noninvertiblematrixerror": [82, 265], "udldecomposit": 82, "lu": [82, 85, 182, 187], "udl": 82, "schur": 82, "penros": [82, 85], "pinv": [82, 85], "r565": 82, "schur_compl": 82, "blockdiagmatrix": [82, 85], "diag_block": 82, "alias": [83, 184], "bridg": [83, 111, 232], "tension": 83, "matrixdetermin": 84, "matrixreduct": 84, "matrixsubspac": 84, "matrixcalculu": 84, "immutablesparsematrix": 84, "gramschmidt": 85, "m2": [85, 89, 93, 108, 130, 138, 156, 158, 162, 188, 206, 209, 214, 219], "126": [85, 89, 192], "150": [85, 98, 206], "v3": [85, 169, 172, 243], "glue": 85, "m3": [85, 138, 206, 214], "adj": 85, "qr": 85, "cheat": 85, "soln": 85, "gram": [85, 164, 166], "schmidt": 85, "out1": 85, "out2": 85, "1692": 85, "1551": 85, "423": 85, "6707": 85, "spot": [85, 127], "eigenvector": [85, 111, 153, 154, 178], "nullspac": [85, 182], "adjug": 85, "berkowitz": 85, "bareiss": 85, "cofactor_matrix": 85, "charpoli": [85, 182, 265], "_simplifi": 85, "purepoli": [85, 189], "samuelson": 85, "minor_submatrix": 85, "iszerofunc": [85, 265], "barei": 85, "det_lu": 85, "functiontyp": 85, "_iszero": [85, 265], "_is_zero_after_expand_mul": 85, "unrecogn": 85, "nonsquarematrixerror": [85, 209], "i3": [85, 99, 111, 126, 219], "perman": 85, "ryser": 85, "450": 85, "r566": 85, "prof": 85, "ben": 85, "berkelei": 85, "bernd": 85, "ban275": 85, "r567": 85, "permanent_": 85, "r568": 85, "r569": 85, "0904": 85, "3251": 85, "echelon_form": [85, 265], "with_pivot": 85, "echelon": [85, 182, 212, 265], "elementary_col_op": 85, "kn": [85, 92, 93], "col1": 85, "col2": 85, "km": [85, 89, 102, 106, 113, 114, 117, 118, 121, 123, 126, 165], "elementary_row_op": 85, "row1": 85, "row2": 85, "is_echelon": [85, 265], "rref": [85, 182], "pivot": [85, 182, 265], "normalize_last": 85, "rref_matrix": [85, 182], "rref_pivot": [85, 182], "301369863013699": 85, "712328767123288": 85, "noramlize_last": 85, "subspac": [85, 188], "columnspac": [85, 182], "rowspac": [85, 182], "orthonorm": [85, 126, 154, 177, 241], "rankcheck": 85, "r570": 85, "93schmidt_process": 85, "eigen": [85, 135], "bidiagonal_decomposit": 85, "ubv": 85, "bidiagon": 85, "hang": [85, 114, 118, 209, 210], "bidiagn": 85, "r571": 85, "golub": 85, "van": [85, 89, 187], "loan": 85, "r572": 85, "vslobodi": 85, "household": 85, "r573": 85, "r574": 85, "reals_onli": 85, "throw": [85, 91, 111, 188, 206, 212], "error_when_incomplet": 85, "eig": [85, 111, 126], "matrixerror": 85, "got": [85, 180, 183, 186, 189, 192, 224, 225, 231, 232, 261, 263, 264], "eigenvect": [85, 111, 126, 153, 265], "tidi": 85, "artifact": 85, "ret": 85, "eigenspac": 85, "rag": 85, "a_3": 85, "diagonaliz": [85, 265], "is_indefinit": 85, "semidefinit": [85, 213], "plot3d": [85, 179], "is_positive_definit": 85, "is_positive_semidefinit": 85, "hire": [85, 92, 93, 96, 179, 196], "is_negative_definit": 85, "is_negative_semidefinit": 85, "defer": [85, 235], "r575": 85, "definiteness_of_a_matrix": 85, "r576": 85, "positivedefinitematrix": 85, "r577": 85, "amer": 85, "259": 85, "264": [85, 211], "r578": 85, "r579": 85, "r580": 85, "r581": 85, "r582": 85, "r583": 85, "r584": 85, "r585": 85, "r586": 85, "r587": 85, "r588": 85, "r589": 85, "jordan_form": 85, "calc_transform": 85, "left_eigenvect": 85, "singular_valu": 85, "condition_numb": 85, "hessian": 85, "wronskian": [85, 209], "simpfunc": 85, "permutebkwd": 85, "permutefwd": 85, "lucombin": 85, "defici": [85, 89, 212], "matrixi": 85, "ludecomposition_simpl": [85, 265], "ludecompositionff": 85, "pa": [85, 106, 108, 121, 124, 127], "r590": 85, "zhou": 85, "jeffrei": [85, 205], "frontier": [85, 201], "china": 85, "67": [85, 187], "2008": [85, 178, 187, 189, 193], "row_swap": 85, "compres": 85, "permute_backward": 85, "permute_forward": 85, "u_": 85, "intiuit": 85, "lu_": 85, "_find_reasonable_pivot": 85, "lu_solv": [85, 182], "qr_solv": 85, "augument": 85, "167": 85, "158": [85, 93], "27261": 85, "30625": 85, "348": 85, "1914": 85, "6125": 85, "30589": 85, "198": 85, "1225": 85, "q_aug": 85, "r_aug": 85, "analytic_func": 85, "connected_compon": [85, 231], "connected_components_decomposit": 85, "relax": [85, 91], "3x1": 85, "1x3": 85, "conjugate_convent": 85, "dual": [85, 151, 157], "anti_symmetr": 85, "speak": [85, 188, 244], "freevar": 85, "underdetermin": [85, 211, 212], "free_var_index": 85, "tau0": [85, 212, 213], "tau1": 85, "taus_zero": 85, "sol_uniqu": 85, "r591": 85, "gaussian_elimin": 85, "try_block_diag": 85, "inverse_g": [85, 265], "inverse_lu": [85, 265], "inverse_adj": [85, 265], "inverse_ch": 85, "inverse_ldl": 85, "inverse_qr": 85, "inv_mod": 85, "cof": 85, "inverse_block": 85, "blockwis": 85, "ntop": 85, "key2bound": 85, "key2ij": 85, "reciproc": [85, 213, 269], "fro": 85, "sing": 85, "spectral": 85, "rd": [85, 111, 193], "pseudoinvers": 85, "r592": 85, "penrose_pseudoinvers": 85, "arbitrary_matrix": 85, "wn_m": 85, "_w0_0": 85, "_w1_0": 85, "_w2_0": 85, "59": [85, 209], "r593": 85, "obtaining_all_solutions_of_a_linear_system": 85, "print_nonzero": [85, 231], "symb": [85, 193], "rank_decomposit": 85, "r594": 85, "rank_factor": 85, "r595": 85, "piziak": 85, "odel": 85, "magazin": 85, "193": [85, 96], "2307": 85, "2690882": 85, "singular_value_decomposit": 85, "condens": [85, 212], "orthogn": 85, "v_aug": 85, "u_aug": 85, "s_aug": 85, "gj": 85, "solve_least_squar": 85, "strongly_connected_compon": [85, 182, 231], "62": [85, 186], "strongly_connected_components_decomposit": 85, "rowstart": 85, "rowend": 85, "rowsep": 85, "colsep": 85, "strprinter": [85, 173, 256], "upper_hessenberg_decomposit": 85, "213": 85, "134": 85, "216": [85, 186], "hessenbergdecomposit": 85, "jordan_cel": 85, "varlist": 85, "r596": 85, "hessian_matrix": 85, "vlist": 85, "r597": 85, "casoratian": 85, "kernel": [85, 180, 186, 188, 211], "vanish": [85, 159, 186, 189, 192, 209, 238], "rsolve_hyp": [85, 211], "randmatrix": 85, "percent": [85, 212], "prng": 85, "percentag": [85, 89], "46": [85, 92, 164, 192, 211, 213], "list2numpi": 85, "dtype": [85, 90, 180, 182, 183, 184, 193, 232], "matrix2numpi": 85, "symarrai": 85, "ndarrai": [85, 213, 219, 225], "prefix_i1_i2_": 85, "_2": [85, 168, 169, 209], "a_0_0": 85, "a_0_1": 85, "a_0_2": 85, "a_1_0": 85, "a_1_1": 85, "a_1_2": 85, "a_0_0_0": 85, "a_0_0_1": 85, "a_0_1_0": 85, "a_0_1_1": 85, "a_0_2_0": 85, "a_0_2_1": 85, "a_1_0_0": 85, "a_1_0_1": 85, "a_1_1_0": 85, "a_1_1_1": 85, "a_1_2_0": 85, "a_1_2_1": 85, "rot_axis1": 85, "rot_axis2": 85, "rot_axis3": 85, "a2idx": 85, "normalform": [86, 182], "hermite_normal_form": [86, 182, 188], "check_rank": [86, 182], "hnf": [86, 182, 188], "explos": [86, 182], "believ": [86, 89, 182], "dmdomainerror": [86, 182], "dmshapeerror": [86, 182], "r598": 86, "cohen": [86, 182, 187, 188], "mutablesparsematrix": 87, "_doktocsr": 88, "csr": 88, "ja": 88, "ia": 88, "_csrtodok": 88, "dok": 88, "1x1": [88, 213], "vert": [88, 174, 177, 246], "saw": [88, 183, 269], "dynam": [89, 95, 96, 98, 102, 104, 106, 107, 110, 113, 120, 121, 122, 123, 124, 125, 126, 127, 168, 169, 171, 172, 176, 177, 228, 229, 238], "eratosthen": 89, "_reset": [89, 189], "_list": 89, "extend_to_no": 89, "mobiusrang": 89, "primerang": 89, "10th": 89, "totientrang": 89, "1e11": 89, "50000": 89, "primal": [89, 180], "1299709": 89, "r599": 89, "prime_number_theorem": 89, "table_of_": 89, "cf": [89, 186], "28x": 89, "2c_x_": 89, "2f_log_x": 89, "2c_and_li": 89, "r600": 89, "approximations_for_the_nth_prime_numb": 89, "r601": 89, "27_number": 89, "arr1": 89, "arr2": 89, "prevprim": 89, "9th": 89, "nextprim": 89, "occupi": [89, 159, 219], "conjectur": [89, 186], "twin": 89, "bertrand": 89, "brocard": 89, "primori": 89, "r602": 89, "r603": 89, "utm": 89, "postul": 89, "r604": 89, "s_postul": 89, "primefactor": 89, "argu": 89, "cycle_length": 89, "nmax": 89, "brent": [89, 228], "floyd": 89, "cycle_detect": 89, "17737": 89, "20000": 89, "compositepi": 89, "831": 89, "smoothness_p": 89, "sm": [89, 111, 126, 180], "psm": 89, "govern": 89, "10431": 89, "annot": [89, 179, 193], "21477639576571": 89, "4410317": 89, "1787": 89, "4869863": 89, "2434931": 89, "multiplicity_in_factori": 89, "nfac": 89, "52818775009509558395695966887": 89, "is2pow": 89, "pollard_rho": 89, "1234": [89, 206], "max_step": 89, "pollard": [89, 209], "leader": 89, "16843009": 89, "32767": 89, "4i": 89, "3i": 89, "2489": 89, "1482": 89, "285": [89, 211], "leadup": 89, "r605": 89, "crandal": 89, "carl": [89, 228], "pomer": [89, 228], "229": 89, "231": [89, 169], "pollard_pm1": 89, "ilcm": 89, "likelihood": 89, "1009": 89, "igcd": [89, 181], "am": [89, 164, 193], "255": 89, "crack": 89, "617": 89, "1786": 89, "worst": [89, 189, 209], "scenario": [89, 213], "divisisor": 89, "realist": 89, "r606": 89, "236": 89, "r607": 89, "washington": 89, "2007": [89, 125, 228], "spring": [89, 103, 106, 111, 115], "ent": 89, "node81": 89, "r608": 89, "toronto": 89, "yuvalf": 89, "use_ecm": 89, "65537": [89, 192], "1407633717262338957430697921446883": 89, "991": 89, "202916782076162456022877024859": 89, "4200": 89, "1764": 89, "toggl": [89, 179], "12345678910111213141516": 89, "2507191691": 89, "1231026625769": 89, "factorrat": 89, "rat": 89, "987": 89, "10000000001": 89, "99009901": 89, "divisor_count": 89, "tim": [89, 231], "stackoverflow": [89, 231, 234], "1010381": 89, "proper_divisor": 89, "proper_divisor_count": 89, "udivisor": 89, "udivisor_count": 89, "r609": 89, "unitary_divisor": 89, "r610": 89, "unitarydivisor": 89, "r611": 89, "unitarydivisorfunct": 89, "antidivisor": 89, "r612": 89, "margin": [89, 98, 179, 213], "antidivisor_count": 89, "a066272": 89, "a066272a": 89, "r613": 89, "r614": 89, "27s_totient_funct": 89, "r615": 89, "totientfunct": 89, "r616": 89, "carmichael_funct": 89, "r617": 89, "carmichaelfunct": 89, "sigma_k": 89, "m_i": [89, 186], "m_ik": 89, "r618": 89, "divisor_funct": 89, "udivisor_sigma": 89, "47450": 89, "152": 89, "r619": 89, "core_t": 89, "core_2": 89, "squarefre": [89, 188], "cubefre": 89, "9424": 89, "1178": 89, "379238": 89, "square_factor": 89, "r620": 89, "free_integ": 89, "squarefree_cor": 89, "primenu": 89, "r621": 89, "primeomega": 89, "r622": 89, "mersenne_prime_expon": 89, "mersenn": 89, "4423": 89, "r623": 89, "perfectnumb": 89, "r624": 89, "perfect_numb": 89, "is_mersenne_prim": 89, "r625": 89, "mersenneprim": 89, "abund": 89, "is_abund": 89, "r626": 89, "abundantnumb": 89, "is_defici": 89, "r627": 89, "deficientnumb": 89, "is_amic": 89, "amic": 89, "220": [89, 189], "r628": 89, "amicable_numb": 89, "symmetric_residu": 89, "v_i": [89, 188, 211], "65": [89, 98, 186, 213], "639985": [89, 186], "912285": [89, 186], "954": 89, "gf_crt": [89, 186], "solve_congru": [89, 186], "programm": [89, 193], "galoistool": [89, 186], "crt1": 89, "4536": 89, "252": 89, "756": 89, "crt2": 89, "remainder_modulus_pair": 89, "mi": [89, 193], "k1": [89, 126, 157, 183, 184, 186], "k2": [89, 126, 183], "c_kn": 89, "binomial_coefficients_list": 89, "multinomial_coeffici": 89, "k_m": 89, "k_i": [89, 186, 203], "yann": 89, "laigl": 89, "chapui": 89, "permiss": [89, 178], "multinomial_coefficients_iter": 89, "_tupl": 89, "m53": 89, "partitions_": 89, "npartit": 89, "hardi": 89, "rademach": [89, 213], "r629": 89, "1958": [89, 178], "partitionfunctionp": 89, "is_euler_pseudoprim": 89, "pseudoprim": 89, "r630": 89, "euler_pseudoprim": 89, "prep": [89, 209, 210], "r631": 89, "mersenneforum": 89, "showpost": 89, "110896": 89, "mr": 89, "miller": 89, "rabin": 89, "wit": 89, "1373651": 89, "479001599": 89, "r632": 89, "135": 89, "138": 89, "93rabin_primality_test": 89, "deterministic_vari": 89, "is_lucas_prp": 89, "selfridg": 89, "377": 89, "1159": 89, "1829": 89, "3827": 89, "5459": 89, "5777": 89, "9071": 89, "9179": 89, "bailli": 89, "wagstaff": 89, "1980": [89, 231], "mpq": [89, 183, 185], "lucaspseudoprim": 89, "a217120": 89, "lucas_pseudoprim": 89, "is_strong_lucas_prp": 89, "bpsw": 89, "10877": 89, "16109": 89, "18971": 89, "a217255": 89, "psw_primality_test": 89, "is_extra_strong_lucas_prp": 89, "grantham": 89, "mo": [89, 126, 193], "jone": [89, 131], "preprint": 89, "a217719": 89, "perl": 89, "counterexampl": [89, 269], "989": 89, "3239": 89, "jon": 89, "mcom": 89, "234": 89, "01197": 89, "bisect": [89, 189, 211], "1e3": 89, "1e23": [89, 234], "near_int": 89, "strong_pseudoprim": 89, "is_gaussian_prim": 89, "r633": 89, "gaussian_prim": 89, "residue_ntheori": 89, "n_order": 89, "cong": [89, 186], "primitive_root": [89, 188], "r634": 89, "stein": [89, 209], "r635": 89, "hackman": 89, "2009": [89, 178], "sqrt_mod": 89, "sqrt_mod_it": 89, "quadratic_residu": 89, "nthroot_mod": 89, "109": [89, 187, 206], "is_nthpow_residu": 89, "r636": 89, "is_quad_residu": 89, "legendre_symbol": 89, "genfrac": 89, "nonresidu": 89, "alpha_2": [89, 188], "alpha_k": 89, "discrete_log": 89, "prime_ord": 89, "giant": [89, 212], "pohlig": 89, "r637": 89, "discretelogarithm": 89, "r638": 89, "cryptographi": [89, 248, 255], "menez": 89, "vanston": 89, "continued_fract": 89, "continued_fraction_period": 89, "continued_fraction_reduc": 89, "continued_fraction_converg": 89, "continued_fraction_iter": 89, "106": 89, "103993": 89, "33102": 89, "104348": 89, "33215": 89, "208341": 89, "66317": 89, "292": 89, "r639": 89, "discrimin": [89, 184, 186, 188, 189], "r640": 89, "periodic_continued_fract": 89, "r641": 89, "rosen": 89, "379": [89, 189], "381": 89, "januari": 89, "1992": [89, 187, 211], "233": [89, 187, 209], "718281835": 89, "287": 89, "count_digit": 89, "1111339": 89, "0xfa": 89, "c77": 89, "is_palindrom": [89, 231], "palindrom": 89, "0o121": 89, "oct": 89, "0o171": 89, "fermion": [89, 159], "r642": 89, "b6bius_funct": 89, "r643": 89, "thoma": [89, 125], "koshi": 89, "egyptian_fract": 89, "greedi": [89, 186, 202, 205], "egyptian": 89, "r644": 89, "jewett": 89, "takenouchi": 89, "3192": 89, "1118": 89, "2580": 89, "sylvest": [89, 186], "r645": 89, "seldom": 89, "blow": 89, "doubli": 89, "exhibit": [89, 178, 188, 202], "singli": 89, "tendenc": 89, "r646": 89, "1921": 89, "golumb": 89, "1962": 89, "propos": 89, "bleicher": 89, "1972": 89, "r647": 89, "420": [89, 206], "140": 89, "574": 89, "2788": 89, "6460": 89, "11590": 89, "33062": 89, "113820": 89, "greedy_algorithm_for_egyptian_fract": 89, "ic": [89, 209], "uci": 89, "eppstein": 89, "numth": 89, "egypt": 89, "ami": 89, "ektf": 89, "hu": 89, "finalpdf": 89, "ami_42_from129to134": 89, "bbp_pi": 89, "pi_hex_digit": 89, "hex": 89, "3243f6a8885a30": 89, "324": [89, 187], "r648": 89, "numberworld": 89, "subexponenti": 89, "comfort": [89, 90], "15154262241479": 89, "15423094826093": 89, "799333555511111": 89, "809709509409109": 89, "888888877777777": 89, "914148152112161": 89, "factoris": [89, 183, 184, 209], "max_curv": 89, "lenstra": 89, "repeatedli": [89, 99, 225], "ecm_one_factor": 89, "pseudorandom": [89, 231], "25645121643901801": 89, "5394769": 89, "4753701529": 89, "9804659461513846513": 89, "4641991": 89, "2112166839943": 89, "7060005655815754299976961394452809": 89, "6988699669998001": 89, "1010203040506070809": 89, "122921448543883967430908091422761898618349713604256384403202282756086473494959648313841": 89, "2709077133180915240135586837960864768806330782747": 89, "248": 89, "prime_bound": 89, "error_term": 89, "siq": 89, "modn": 89, "mulipl": 89, "r649": 89, "semanticscholar": 89, "5c52": 89, "8a975c1405bd35c65993abf5a4edb667c1db": 89, "r650": 89, "rieselprim": 89, "ziki": 89, "initializing_quadratic_siev": 89, "5915587277": 89, "3267000013": 89, "facilit": [90, 120, 130, 175, 224], "000507214304613640": 90, "microsecond": 90, "000507214304614": 90, "hundr": [90, 263], "nanosecond": 90, "84147098": [90, 232, 258], "84119981": 90, "84092844": 90, "05426074": 90, "05433146": 90, "05440211": 90, "confer": [90, 267], "nano": 90, "manufactur": 90, "asnumpi": 90, "compliat": 90, "jnp": 90, "asarrai": 90, "84147096": 90, "8411998": 90, "05426079": 90, "05433151": 90, "autowrap": [90, 218, 226, 230, 250, 256], "implemented_funct": [90, 225, 232], "effort": [90, 184, 186], "50u": 90, "1u": 90, "10n": 90, "sympy_pars": 91, "local_dict": 91, "lambda_not": 91, "repeated_decim": 91, "auto_numb": 91, "factorial_not": 91, "global_dict": 91, "standard_transform": 91, "implicit_multiplication_appl": 91, "implicit_appl": 91, "implicit_multipl": 91, "convert_equals_sign": 91, "function_exponenti": 91, "stringify_expr": 91, "eval_expr": 91, "name_dict": 91, "fullform": 91, "setdelai": 91, "datatyp": [91, 184, 193, 226], "split_symbol": 91, "split_symbols_custom": 91, "_token_splitt": 91, "can_split": 91, "unsplitt": 91, "10sin": 91, "3xyz": 91, "2111": 91, "latex2sympi": 91, "typograph": 91, "stricter": 91, "liber": [91, 102, 263], "618": 91, "latexparsingerror": 91, "sym_expr": 91, "sympyexpress": 91, "source_cod": 91, "return_expr": 91, "definiton": 91, "src2": 91, "convert_to_expr": 91, "convert_to_c": 91, "src3": 91, "convert_to_python": 91, "src_code": 91, "filenam": [91, 193, 224, 225, 226, 234], "convert_to_fortran": 91, "continuum_mechan": [92, 93], "elastic_modulu": 92, "second_mo": 92, "base_char": 92, "withstand": [92, 93], "character": [92, 93, 174, 177, 200, 213, 219, 246], "profil": 92, "shear": [92, 93], "downward": [92, 93, 188], "apply_load": [92, 93], "bc_deflect": [92, 93], "boundary_condit": 92, "solve_for_reaction_load": [92, 93], "shear_forc": [92, 93], "bending_mo": [92, 93], "applied_load": 92, "nm": [92, 93, 157, 214], "pointload": [92, 93], "ramp": [92, 93, 97], "parabol": 92, "apply_support": 92, "loc": 92, "freedom": [92, 105, 106, 112, 114, 120, 213], "roller": [92, 93], "upward": [92, 188], "r_10": 92, "r_30": 92, "4000": [92, 93], "bc_slope": [92, 93], "cross_sect": 92, "elast": [92, 93], "12000": 92, "draw": [92, 139, 193, 213, 255], "pictori": 92, "positv": 92, "ild_moment": 92, "ild_react": 92, "reaction": [92, 93], "ild_shear": 92, "axial": [92, 128], "hing": [92, 93], "cantilev": [92, 93], "inertia": [92, 93, 101, 102, 103, 110, 111, 113, 115, 117, 118, 119, 120, 126, 169, 175, 176, 177, 188], "666666666666667": [92, 93], "max_bmoment": 92, "max_deflect": 92, "max_shear_forc": 92, "plot_bending_mo": [92, 93], "gpa": 92, "400": [92, 179, 189], "13750": 92, "31250": 92, "plot_deflect": [92, 93], "00138541666666667": 92, "86458333333333e": 92, "04166666666667e": 92, "20833333333333e": 92, "51041666666667e": 92, "plot_ild_mo": 92, "solve_for_ild_mo": 92, "1kn": 92, "r_0": 92, "r_8": 92, "solve_for_ild_react": 92, "plot_ild_react": 92, "5kn": 92, "r_7": 92, "plotgrid": [92, 255], "plot_ild_shear": 92, "solve_for_ild_shear": 92, "plot_loading_result": [92, 93], "subplot": [92, 179], "plot_shear_forc": [92, 93], "plot_shear_stress": 92, "stress": 92, "6875": 92, "2500": 92, "15625": [92, 166], "plot_slop": [92, 93], "59375e": 92, "125e": 92, "08333333333333e": 92, "0001953125": 92, "point_cflexur": 92, "overhang": [92, 93], "10kn": 92, "20kn": [92, 93], "3kn": 92, "reaction_load": [92, 93], "remove_load": [92, 103], "shear_stress": 92, "beam3d": 92, "shear_modulu": 92, "apply_moment_load": 92, "solve_slope_deflect": 92, "r651": 92, "home": [92, 188, 206, 213], "aau": 92, "jc": 92, "femtesemest": 92, "beams3d": 92, "angular_deflect": [], "depict": [174, 212, 246], "angular": [100, 103, 105, 108, 113, 114, 115, 117, 119, 120, 123, 126, 128, 132, 133, 135, 138, 156, 160, 169, 172, 178], "axial_forc": 92, "axial_stress": 92, "load_vector": 92, "max_bending_mo": 92, "16000": 92, "495": 92, "10793": 92, "6400": 92, "301": [92, 203, 206], "560": 92, "2400": 92, "moment_load_vector": 92, "40000": 92, "4013": 92, "90300": 92, "1520": 92, "903": 92, "1600": [92, 93], "172": 92, "polar_mo": 92, "i1": [92, 99, 111, 126, 219], "1350": 92, "solve_for_tors": [], "torsion": 92, "torqu": [103, 106, 110, 115, 121, 122, 126], "torsional_mo": 92, "_________________": 93, "________________": [93, 209], "_______________v": 93, "_______________": 93, "equilibrium": [93, 113, 123], "20e9": 93, "25e": 93, "______________________________________________": 93, "_______________________________________________": 93, "r\u2081": 93, "r\u2082": 93, "______________________": 93, "________________________": 93, "8kn": 93, "_____________": 93, "1m": 93, "3m": 93, "2m": 93, "5m": [93, 228], "679": 93, "12kn": 93, "________________________________": 93, "____________________________________________________": 93, "o____________________________________________________": 93, "4m": 93, "concentr": [93, 213], "_____________________________________": 93, "m\u2081": 93, "m\u2082": 93, "connector": 93, "_____________________": 93, "_______________________": 93, "_____________________o_______________________": 93, "oooo": [93, 231], "r\u2083": 93, "_______i_______": 93, "flexur": 93, "rigid": [93, 103, 106, 108, 111, 113, 115, 120, 126, 169, 176], "____________": 93, "____________o________________________": 93, "a\u2081": [93, 269], "a\u2082": [93, 269], "assembli": 113, "joint": [115, 120], "add_nod": [], "node_1": [], "node_2": [], "node_3": [], "node_4": [], "add_memb": [], "member_1": [], "member_2": [], "member_3": [], "member_4": [], "member_5": [], "270": [], "360": [], "change_member_label": [], "new_label": [], "change_node_label": [], "bc_new": [], "internal_forc": [], "member_label": [], "node_label": [], "node_posit": [], "remove_memb": [], "remove_nod": [], "remove_support": [], "unstabl": [], "revolv": [], "tensil": [], "r_node_1_x": [], "r_node_1_i": [], "66666666666667": [], "r_node_2_i": [], "33333333333333": [], "66666666666666": [], "lti": [95, 96, 97], "transferfunct": [95, 96, 98], "interconnect": [95, 98], "mimo": [95, 98], "transferfunctionmatrix": [95, 98], "mimoseri": [95, 98], "mimoparallel": [95, 98], "mimofeedback": [95, 98], "control_plot": 96, "pole_zero_plot": 96, "pole_color": 96, "blue": [96, 179, 193], "pole_markers": 96, "zero_color": 96, "orang": 96, "zero_markers": 96, "show_ax": 96, "marker": [96, 179], "sisolineartimeinvari": [96, 98], "markers": 96, "tf1": [96, 98], "pole_zero_numerical_data": 96, "r652": 96, "93zero_plot": 96, "siso": [96, 98], "8660254j": 96, "bode_plot": 96, "initial_exp": 96, "final_exp": 96, "freq_unit": 96, "phase_unit": 96, "semilog": 96, "hz": 96, "hertz": 96, "bode_magnitude_plot": 96, "bode_phase_plot": 96, "bode_magnitude_numerical_data": 96, "5148378120533502e": 96, "68437": 96, "36188804005": 96, "020599914256786": 96, "0205999155219505": 96, "4117304087953": 96, "00000000260573": 96, "bode_phase_numerical_data": 96, "4472354033813751e": 96, "035581932165858e": 96, "47577": 96, "3248186011": 96, "67884": 96, "09326036123": 96, "5000000000291665e": 96, "6180885085e": 96, "08895483066e": 96, "1415085799262523": 96, "14155265358979": 96, "impulse_response_plot": 96, "lower_limit": [96, 259], "upper_limit": [96, 259], "step_response_plot": 96, "ramp_response_plot": 96, "r653": 96, "impulse_response_numerical_data": 96, "nb_of_point": [96, 179], "lineover1drangeseri": [96, 179], "amplitud": [96, 133], "06616480200395854": 96, "854500743565858": 96, "9999999799999999": 96, "7042848373025861": 96, "170748906965121e": 96, "1901263495547205e": 96, "r654": 96, "step_response_numerical_data": 96, "025413462339411542": 96, "0484508722725343": 96, "670250533855183": 96, "844291913708725": 96, "023844582399907256": 96, "042894276802320226": 96, "828770759094287e": 96, "456457160755703e": 96, "mx": [96, 139, 200], "r655": 96, "ramp_funct": 96, "ramp_response_numerical_data": 96, "12166980856813935": 96, "861246379582118": 96, "4504508011325967e": 96, "006046440489058766": 96, "12499999999568202": 96, "12499999999661349": 96, "bode": 97, "impuls": [97, 98], "den": [98, 184, 205, 209], "superscript": [98, 193], "tf2": 98, "tf3": 98, "tf4": 98, "tf5": 98, "tf6": 98, "500000000000000": 98, "tf7": 98, "tf8": 98, "tf9": 98, "tf10": 98, "tf11": 98, "tf12": 98, "r656": 98, "transfer_funct": 98, "r657": 98, "dc_gain": 98, "dc": [98, 122], "from_rational_express": 98, "zerodivisionerror": [98, 184, 222, 232], "complexinfin": 98, "tf": [98, 232], "is_biprop": 98, "is_prop": 98, "is_stabl": 98, "is_strictly_prop": 98, "sys1": 98, "sys2": 98, "feedforward": 98, "fed": 98, "sit": [98, 177], "plant": 98, "compulsori": 98, "tf_1": 98, "tf_2": 98, "tf_3": 98, "tf_4": 98, "tfm_1": 98, "num_input": 98, "num_output": 98, "tfm_2": 98, "tf_5": 98, "tf_6": 98, "tf_7": 98, "tf_8": 98, "tfm_3": 98, "tfm_4": 98, "tfm_5": 98, "tfm_6": 98, "tf_9": 98, "tf_10": 98, "tfm_7": 98, "tfm_8": 98, "tfm_9": 98, "tfm_10": 98, "tfm_11": 98, "tfm_12": 98, "elem_pol": 98, "elem_zero": 98, "from_matrix": [98, 182], "m_tf": 98, "tfm": 98, "tfm1": 98, "tfm2": 98, "g4": 98, "tfm3": 98, "mimolineartimeinvari": 98, "mat_a": 98, "mat_b": 98, "mat_c": 98, "tfm_a": 98, "tfm_b": 98, "tfm_c": 98, "expr_1": 98, "expr_2": 98, "expr_3": 98, "expr_4": 98, "plant_mat": 98, "controller_mat": 98, "neg_feedback": 98, "hep": 99, "gamma_matric": [99, 101], "gammamatrix": 99, "lorentzindex": 99, "gammamatrixhead": 99, "extract_type_ten": 99, "gamma_trac": 99, "i0": [99, 131, 219], "i2": [99, 111, 126, 219], "i4": [99, 219], "i5": 99, "kahane_simplifi": 99, "spinor": 99, "ta": [99, 202], "tb": [99, 202, 224], "tc": [99, 184, 189, 202], "joseph": [99, 187], "kahan": 99, "octob": 99, "1968": 99, "simplify_gpgp": 99, "e_nl": [100, 160], "hartre": 100, "helium": 100, "2209": 100, "e_nl_dirac": 100, "spin_up": 100, "035999037000": 100, "relativist": 100, "momentum": [100, 108, 111, 120, 126, 137, 138, 156, 160, 178, 219], "light": [100, 131, 164, 173, 180], "035999037": 100, "1012": 100, "3627": 100, "500006656595360": 100, "125002080189006": 100, "125000416028342": 100, "0555562951740285": 100, "0555558020932949": 100, "0555556377366884": 100, "psi_nlm": 100, "wave": [100, 129, 130, 131, 196, 254], "psi_": [100, 135], "nlm": 100, "radial": [100, 114, 160], "nl": [100, 160], "magnet": [100, 130, 174, 246], "azimuth": 100, "wf": [100, 113], "abs_sqrd": 100, "silver": 100, "94": [100, 187], "141": 100, "4418": 100, "mdft": 101, "mgamma": 101, "gamma_5": 101, "gamma_0": 101, "gamma_3": 101, "r658": 101, "msigma": 101, "pauli": [101, 254], "sigma_i": [101, 213], "r659": 101, "pauli_matric": [101, 134], "pat_matrix": 101, "unansw": [102, 168], "kane": [102, 111, 116, 120, 125, 126, 168, 169, 238], "q1d": [102, 111, 113, 114, 117, 118, 119, 121, 122, 123, 124, 168, 173, 177], "q2d": [102, 111, 113, 114, 117, 118, 119, 121, 122, 172, 173], "q3d": [102, 117, 118, 119, 121], "kinemat": [102, 105, 106, 110, 111, 113, 114, 115, 117, 119, 121, 123, 124, 126, 127, 169, 175, 177], "dyad": [102, 126, 241], "mprint": [102, 117, 118, 119, 120, 121], "mpprint": [102, 120, 121], "mlatex": [102, 120], "sub_dict": [102, 104, 113], "msub": [102, 120, 123], "cleaner": [102, 126, 209], "gsl": [102, 226], "lsoda": 102, "penalti": 102, "masscent": [103, 105, 108, 124, 126], "central_inertia": [103, 108, 115], "possess": [103, 124, 219], "name_of_bodi": 103, "ixx": [103, 108, 169], "body_inertia": 103, "ang_vel_in": [103, 105, 111, 117, 118, 126, 169, 176], "set_ang_vel": [103, 108, 111, 113, 117, 118, 123, 124, 126, 127, 169, 171, 172, 176], "apply_forc": [103, 115], "reaction_bodi": [103, 115], "reaction_point": 103, "oppposit": 103, "desri": 103, "force1": 103, "b_masscent": 103, "b_frame": 103, "newtonion": 103, "spring_forc": 103, "n_frame": 103, "apply_torqu": [103, 115], "torquess": 103, "torque1": 103, "b1_frame": 103, "b2_frame": 103, "clear_load": 103, "dcm": [103, 105, 111, 113, 126, 169, 176, 177, 238], "orient_axi": [103, 169, 171], "kinetic_energi": [103, 120, 124, 126], "kinet": [103, 106, 108, 120], "inerti": [103, 106, 108, 113, 114, 117, 121, 122, 124, 126], "set_vel": [103, 106, 108, 111, 113, 114, 117, 118, 119, 121, 122, 123, 124, 126, 127, 172, 176], "b_ixx": 103, "b_mass": 103, "masscenter_vel": [103, 105], "smart": [104, 123, 200, 206, 209], "sub1": [104, 193], "sub2": [104, 193], "reference_fram": [104, 169], "parent_joint_po": [105, 115], "child_joint_po": [105, 115], "parent_axi": [105, 115], "child_axi": [105, 115], "_generate_coordin": 105, "_generate_spe": 105, "_orient_fram": 105, "_set_angular_veloc": 105, "_set_linar_veloc": 105, "rotation_axi": 105, "parent_point": 105, "child_point": 105, "kde": [105, 114, 123], "revolut": 105, "\u03c9": 105, "pc": [105, 190], "pc_p_joint": 105, "pc_c_joint": 105, "p_frame": 105, "c_frame": 105, "theta_pc": 105, "omega_pc": 105, "pos_from": [105, 111, 113, 114, 126, 172, 176], "pendulum": [105, 110, 112, 115, 120, 123, 127, 176], "upper_bob": 105, "lower_bob": 105, "ceiling_joint": 105, "pendulum_joint": 105, "theta_p1": 105, "theta_p2": 105, "u_fram": 105, "l_frame": 105, "omega_p1": 105, "omega_p2": 105, "vel": [105, 111, 113, 114, 118, 126, 172, 176, 244], "prismat": 105, "slide": 105, "x_pc": 105, "v_pc": 105, "wall": [105, 115], "part1": 105, "part2": 105, "j1": [105, 115, 138, 156], "j2": [105, 115, 138, 156], "x_j1": 105, "w_frame": 105, "x_j2": 105, "p1_frame": 105, "v_j1": 105, "damper": [106, 111, 115], "form_eom": 115, "mass_matrix_ful": [106, 111, 115, 121, 122], "forcing_ful": [106, 111, 115, 121, 122], "mass_matrix": [106, 110, 113, 117, 118, 121, 122, 127], "kanesmethod": [106, 111, 113, 114, 115, 117, 118, 121, 123, 126], "lagrangesmethod": [114, 119, 120, 122, 123], "qd": [106, 113, 121, 172], "inv_method": 106, "solveabl": [], "q_ind": [106, 107, 111, 113, 114, 117, 118, 121, 123, 126], "u_ind": [106, 107, 111, 113, 114, 117, 118, 121, 123, 126], "kd_eq": [106, 111, 113, 114, 117, 118, 123, 126], "q_depend": [106, 113, 114, 121, 126], "configuration_constraint": [106, 113, 114, 121], "u_depend": [106, 113, 114, 121, 126], "velocity_constraint": [106, 113, 114, 121, 126], "acceleration_constraint": 106, "u_auxiliari": [106, 118, 121, 126], "forcelist": [106, 111, 114, 117, 118, 122, 123, 126], "levinson": [106, 125, 169, 238], "udot": [106, 113], "ud": [106, 121], "kd": [106, 113, 117, 118, 121], "fl": [106, 113, 121, 122, 126, 187], "bl": [106, 113, 121, 126], "frstar": [106, 111, 113, 114, 117, 118, 121, 123, 126], "kanes_equ": [106, 111, 113, 114, 117, 118, 121, 123, 126], "a_and_b": [106, 107, 114], "auxiliary_eq": [106, 118], "constrain": [106, 114, 122, 126], "kindiffdict": [106, 113, 117, 118, 121, 126], "new_method": [106, 114], "intens": [106, 107, 128, 131], "perm_mat": [106, 107, 123], "op_point": [106, 107, 114, 123], "beforehand": [106, 226], "to_linear": [106, 123], "recalcul": [106, 189], "hol_coneq": [106, 114, 122], "nonhol_coneq": [106, 114, 122], "nonconserv": 106, "form_lagranges_equ": [106, 114, 119, 122, 123], "qdot": [106, 113, 172], "qdoubledot": 106, "lam": [106, 107, 127], "lagranges_equ": 106, "qd_ind": [106, 123], "q_dep": [106, 121, 123], "qd_dep": [106, 123], "solve_multipli": [106, 114], "sol_typ": 106, "array_lik": 106, "f_3": [107, 110, 127, 209], "f_c": [107, 114], "f_v": [107, 114], "f_a": 107, "q_d": 107, "u_i": [107, 123, 176, 186], "u_d": [107, 126], "q_op": [107, 114], "u_op": [107, 114], "qd_op": 107, "ud_op": [107, 114], "spatial": [108, 133, 169, 193], "init_vprint": [108, 109, 124, 127, 169, 171, 172, 175, 176, 177], "locatenew": [108, 113, 114, 117, 118, 119, 123, 124, 126, 127, 170, 172, 174, 176], "parallel_axi": 108, "inertia_tupl": 108, "mv": 108, "iyi": [108, 169], "izz": [108, 169], "ixi": [108, 169], "iyz": [108, 169], "izx": 108, "yy": [108, 177, 209], "yz": [108, 177, 179], "zx": [108, 177], "pos_vec": 108, "px": [108, 149, 154, 219], "body1": 108, "body2": 108, "body3": 108, "h2": 108, "multibodi": [108, 111, 120, 125, 126, 127, 176], "vprint": [109, 168, 172, 175, 177], "vpprint": [109, 168, 175, 177], "vlatex": [109, 168, 169, 175, 177], "coord_stat": 110, "right_hand_sid": 110, "coordinate_deriv": [110, 127], "alg_con": [110, 127], "output_eqn": 110, "coord_idx": [110, 127], "speed_idx": [110, 127], "m_3": [110, 127, 138, 178], "exogen": [110, 127], "ref_fram": 110, "graviti": [110, 111, 114, 115, 117, 119, 126, 174, 246], "theta_dot": 110, "kin_explicit_rh": [110, 127], "dyn_implicit_mat": [110, 127], "dyn_implicit_rh": [110, 127], "symsystem": 110, "dae": [110, 127], "adjust": [110, 196, 200], "comb_implicit_mat": [110, 127], "comb_implicit_rh": [110, 127], "kinema": 110, "comb_explicit_rh": [110, 127], "compute_explicit_form": 110, "awhil": 110, "constant_symbol": 110, "dynamic_symbol": 110, "motiongenesi": [111, 126], "double_pendulum": 111, "motionvari": [111, 126], "newtonian": [111, 126], "simprot": [111, 126], "n_a": 111, "n_b": 111, "w_a_n": 111, "w_b_n": [111, 126], "p_o_p": 111, "p_p_r": 111, "v_o_n": [111, 126], "v2pt": [111, 126], "v_p_n": 111, "v_r_n": 111, "force_p": 111, "force_r": 111, "tfinal": 111, "integstp": 111, "some_filenam": 111, "parse_autolev": 111, "sympy_cod": 111, "include_numer": 111, "include_pydi": 111, "pydi": [111, 126, 169], "u1d": [111, 113, 114, 117, 118, 121], "u2d": [111, 113, 114, 117, 118, 121], "frame_n": 111, "frame_a": 111, "frame_b": 111, "point_o": 111, "particle_p": 111, "p_pt": 111, "particle_r": 111, "r_pt": 111, "set_po": [111, 172, 176], "v2pt_theori": [111, 113, 117, 118, 119, 123, 124, 126, 127, 172, 176], "initial_condit": [111, 126], "overwritten": 111, "e2row": 111, "eigvec": [111, 126], "eigenvec": 111, "deg2rad": 111, "0174533": 111, "wo": 111, "coef": [111, 126], "u3": [111, 113, 115, 117, 118, 121, 126, 172, 176], "strai": 111, "reassign": 111, "inher": [111, 232, 261], "rhs_x": 111, "i_b_bo": 111, "body_b": 111, "body_b_f": 111, "b_cm": 111, "b_f": 111, "scene": [111, 205, 261], "i_c_d": 111, "i_p_q": 111, "i_b_o": 111, "e3": [111, 200, 209], "i_p_o": 111, "e4": [111, 200], "p_so_o": 111, "nicheck": 111, "plug": [111, 164], "hurdl": 111, "gitlab": 111, "repo": 111, "ch4": 111, "ch5": 111, "ch6": 111, "cst": 111, "grammar": [111, 205], "roll": [112, 113, 120, 176, 213], "disc": [112, 120, 176], "bicycl": [112, 120, 125], "nonminim": [112, 120, 123], "linkag": [], "meijaard2007": [113, 125], "steer": [113, 125], "purposefulli": 113, "mechanics_print": [113, 117, 118, 119, 120, 121, 122], "yaw": 113, "ang": 113, "rear": 113, "wheel": 113, "pitch": 113, "q4": [113, 121, 171], "q5": [113, 171], "q4d": [113, 121], "q5d": 113, "u4": [113, 118, 121, 126], "u5": [113, 118], "u6": [113, 118], "u3d": [113, 117, 118], "u4d": 113, "u5d": 113, "u6d": 113, "explanatori": 113, "wfrad": 113, "wrrad": 113, "htangl": 113, "forkoffset": 113, "forklength": 113, "framelength": 113, "forkcg1": 113, "forkcg3": 113, "framecg1": 113, "framecg3": 113, "iwr11": 113, "iwr22": 113, "iwf11": 113, "iwf22": 113, "iframe11": 113, "iframe22": 113, "iframe33": 113, "iframe31": 113, "ifork11": 113, "ifork22": 113, "ifork33": 113, "ifork31": 113, "mframe": 113, "mfork": 113, "mwf": 113, "mwr": 113, "wr": 113, "tempfram": 113, "tempfork": 113, "orientnew": [113, 114, 117, 118, 119, 123, 127, 169, 171, 172, 174, 176, 177], "wr_cont": 113, "wr_mc": 113, "frame_mc": 113, "fork_mc": 113, "wf_mc": 113, "wf_cont": 113, "flip": [113, 144, 153, 213], "frame_i": 113, "fork_i": 113, "wr_i": 113, "wf_i": 113, "bodyfram": 113, "bodyfork": 113, "bodywr": 113, "bodywf": 113, "nonholonom": 113, "closer": [113, 212, 264], "slip": [113, 116, 118, 176], "replic": 113, "conlist_spe": 113, "conlist_coord": 113, "gravit": [113, 117, 162, 174, 246], "aforement": [113, 174, 206, 244], "paperradrear": 113, "paperradfront": 113, "hta": 113, "trailpap": 113, "rake": 113, "paperwb": 113, "02": 113, "paperframecgx": 113, "paperframecgz": 113, "paperforkcgx": 113, "paperforkcgz": 113, "framecgnorm": 113, "framecgpar": 113, "tempa": 113, "tempb": 113, "tempc": 113, "paperforkl": 113, "forkcgnorm": 113, "forkcgpar": 113, "upright": 113, "val_dict": 113, "0603": 113, "1405": 113, "05892": 113, "00708": 113, "00756": 113, "kdd": [113, 117, 118], "centripet": 113, "corioli": 113, "forcing_lin": 113, "mm_full": 113, "_k_kqdot": 113, "xdot": 113, "lean": [113, 117, 119], "amat": 113, "summari": [205, 224, 248], "jointsmethod": 115, "q_1": [114, 115, 123, 139, 176, 189, 206], "q_2": [114, 115, 123, 176], "q_3": [115, 176], "u_1": [114, 115, 176, 188, 209], "u_2": [114, 115, 176, 188, 209], "u_3": [115, 176], "densiti": [213, 224, 247], "link1": [], "link2": [], "link3": [], "link4": [], "joint1": [], "pinjoint": [115, 120], "joint2": [], "joint3": [], "j3": [115, 138, 156], "fh": [], "fhd": [], "_method": [], "_form_eom": [], "eom": [114, 115, 123], "theta1": 114, "dq_dict": 114, "presimplifi": 114, "inp_vec": [114, 123], "lag": [114, 119, 123], "lm": [114, 122, 123, 186, 189], "lag_eq": [114, 123], "lam_op": 114, "prismaticjoint": [115, 120], "mb": [115, 126], "ibzz": 115, "compound_pend": 115, "simple_pend": 115, "slider": 115, "rev1": 115, "rev2": 115, "w_r_n_qd": [117, 118], "dmc": [117, 118, 119], "uv": [117, 118, 159], "bodyd": [117, 118, 119], "bodylist": [117, 118], "revisit": [118, 176], "kane1985": [118, 121, 124, 125], "thorough": [118, 123, 206], "simplifc": 118, "f3": [118, 179, 193], "necessit": 118, "factor_term": [118, 189, 202, 205], "simplify_auxiliary_eq": 118, "lrh": 119, "planet": 120, "robot": 120, "fascin": 120, "trajectori": 120, "challeng": 120, "came": [120, 264], "tackl": [120, 226], "organ": 120, "amen": 120, "arduou": 120, "momenta": [120, 138], "symbolicsystem": 120, "rough": [120, 164], "inertia_of_point_mass": 120, "linear_momentum": [120, 124, 126], "angular_momentum": [120, 124, 126], "kanemethod": 120, "find_dynamicsymbol": 120, "red": 179, "parent_fram": [], "child_fram": [], "child_mass": [], "f_h": 121, "nh": 121, "ku": [121, 193], "k_d": 121, "f_d": [121, 122, 186], "dnh": 121, "f_r": [121, 123, 186], "speed_con": 121, "coord_con": 121, "u_dep": 121, "m_d": 122, "lam1": 122, "0_": 123, "blajer1994": [123, 125], "brought": [123, 213], "vel_p": 123, "a_op": 123, "b_op": 123, "m_op": 123, "a_lin": 123, "hasn": 123, "wikidyad": [124, 175], "wikidyadicproduct": [124, 175], "juxtaposit": [124, 168, 241], "hat": [124, 168, 169, 173, 174, 176, 177, 241, 242, 244, 246, 247], "otim": [124, 214], "l_p": 124, "likins1973": [124, 175], "l_b": 124, "requisit": 124, "t_p": 124, "t_b": 124, "t_t": 124, "virtu": [124, 126], "blajer": 125, "wojciech": 125, "werner": 125, "schiehlen": 125, "walter": 125, "schirm": 125, "kane1983": [125, 177], "likin": [125, 175], "david": [125, 189], "spacecraft": 125, "1983": [125, 228], "meijaard": 125, "jim": 125, "papadopoulo": 125, "ruina": 125, "schwab": 125, "royal": 125, "societi": [125, 206], "2084": 125, "1955": 125, "982": 125, "lectur": [126, 187, 213], "rigibodi": 126, "proprietari": 126, "k3": [126, 183], "k4": 126, "b11": 126, "b12": 126, "b21": 126, "b22": 126, "xd": 126, "xd2": 126, "y1d": 126, "y2d": 126, "tina": 126, "overwrit": [126, 168], "dt2": 126, "dy2": 126, "ty": 126, "linsolv": [126, 191, 207, 211, 270], "nonlinsolv": [126, 207, 211, 270], "rowmatrix": 126, "colmatrix": 126, "diagmat": 126, "eigval": 126, "row_matrix": 126, "col_matrix": 126, "ao": 126, "i12": 126, "i23": 126, "i31": 126, "bf": 126, "p_o_q": 126, "mag": 126, "unitvec": 126, "qo": 126, "p_p_q": 126, "partial_veloc": [126, 169, 172], "a_o_n": 126, "set_acc": [126, 172, 176], "qb": [126, 181], "qbd": 126, "alf_b_n": 126, "set_ang_acc": [126, 169], "ang_acc_in": [126, 169], "force_o": 126, "torque_a": 126, "qa": 126, "qad": 126, "a_b": 126, "v1pt": 126, "v1pt_theori": [126, 172, 176], "a1pt": 126, "a1pt_theori": [126, 172], "a2pt": 126, "a2pt_theori": [126, 172, 176], "angvel": 126, "force_vector": 126, "center_of_mass": 126, "kindiff": 126, "ke": 126, "configura": 126, "tion_constraint": 126, "pendent": 126, "velocity_con": 126, "traint": 126, "acceleration_": 126, "u_auxilia": 126, "ry": 126, "matlplotlib": 126, "stiff": 126, "damp": 126, "legend": [126, 179, 196], "introspect": 126, "rich": [126, 205], "media": [126, 132], "histori": 126, "esqu": 126, "cpython": 126, "pertin": [127, 180, 188], "alg_con_ful": 127, "symsystem1": 127, "symsystem2": 127, "symsystem3": 127, "raytransfermatrix": 128, "geometricrai": 128, "beamparamet": 128, "geometric_conj": 128, "gauss_conj": 128, "conjugate_gauss_beam": 128, "lens": 128, "gaussopt": 128, "wavelen": 128, "z_r": 128, "wavelength": [128, 133], "waist": 128, "rayleigh": [128, 213], "refract": [128, 130, 132, 133], "530e": 128, "88679245283019": 128, "92753330865999": 128, "w_0": [128, 206], "00100000000000000": 128, "freespac": 128, "00101413072159615": 128, "00210803120913829": 128, "r660": 128, "complex_beam_paramet": 128, "r661": 128, "gaussian_beam": 128, "spread": [128, 193, 213, 228], "00053": 128, "goui": 128, "55998576005696": 128, "2809": 128, "peak": 128, "waist_approximation_limit": 128, "paraxi": [128, 132], "06e": 128, "curvedmirror": 128, "curvedrefract": 128, "flatmirror": 128, "flatrefract": 128, "2x1": 128, "thinlen": 128, "r662": 128, "ray_transfer_matrix_analysi": 128, "waist_in": 128, "waist_out": 128, "s_in": 128, "s_out": 128, "w_o": 128, "gaussian_conj": 128, "z_r_in": 128, "incid": [128, 132], "z_r_out": 128, "emerg": [128, 181], "geometric_conj_ab": 128, "geometric_conj_af": 128, "geometric_conj_bf": 128, "rayleigh2waist": 128, "waist2rayleigh": 128, "optic": [130, 131, 132, 133, 254], "permitt": 130, "permeabl": 130, "fermat": 130, "electr": [130, 132, 174, 244, 246], "electromagnet": [130, 174, 219, 246], "intrinsic_imped": 130, "149896229": [130, 133], "kilogram": [130, 162, 164, 166], "1250000": 130, "amper": 130, "refractive_index": 130, "299792458": [130, 133, 166], "r663": 130, "optical_medium": 130, "travel": [130, 133, 174, 244, 246], "stoke": [131, 245], "mueller": 131, "jones_vector": 131, "stokes_vector": 131, "half_wave_retard": 131, "polarizing_beam_splitt": 131, "jones_2_stok": 131, "\u2148": [131, 178, 192, 193, 212, 270], "\u03c7": 131, "\u03c8": 131, "i\u2080": 131, "plate": 131, "hwp": 131, "splitter": 131, "transmit": [131, 132], "pb": 131, "transmitted_port": 131, "reflected_port": 131, "transmitted_pow": 131, "reflected_pow": 131, "r664": 131, "jones_calculu": 131, "r665": 131, "mueller_calculu": 131, "r666": 131, "stokes_paramet": 131, "retard": 131, "poincar\u00e9": 131, "tilt": 131, "mayor": 131, "linear_polar": 131, "transmiss": [131, 132], "mueller_matrix": 131, "quarter_wave_retard": 131, "quarter": 131, "phase_retard": 131, "\u03b4": 131, "phia": 131, "phib": 131, "4x1": [131, 213], "phi_a": 131, "phi_b": 131, "qwp": 131, "reflective_filt": 131, "unpolar": 131, "transmissive_filt": 131, "attenu": 131, "transmitt": 131, "ndf": 131, "refraction_angl": 132, "fresnel_coeffici": 132, "brewster_angl": 132, "critical_angl": 132, "lens_makers_formula": 132, "mirror_formula": 132, "lens_formula": 132, "hyperfocal_dist": 132, "transverse_magnif": 132, "medium1": 132, "medium2": 132, "brewster": 132, "926093295503462": 132, "onset": 132, "850908514477849": 132, "02005": 132, "angle_of_incid": 132, "polaris": 132, "te": 132, "undergo": 132, "317843553417859": 132, "348645229818821": 132, "658921776708929": 132, "651354770181179": 132, "235625382192159": 132, "971843958291041": 132, "816477005968898": 132, "577377951366403": 132, "r667": 132, "fresnel_equ": 132, "coc": 132, "0033": 132, "focal_length": 132, "n_len": 132, "n_surr": 132, "thick": 132, "1515151515151": 132, "0000000000000": 132, "3418463277618": 132, "41152": 132, "magnif": 132, "twave": 133, "time_period": 133, "wavenumb": 133, "phi1": 133, "phi2": 133, "w1": [133, 205], "w3": [133, 193], "superposit": [133, 144, 155, 180], "angular_veloc": 133, "tempor": 133, "r668": 134, "paulialgebra": 134, "evaluate_pauli_product": 134, "paulimatric": 134, "sigma3": 134, "nodal": [135, 160, 180], "hw": [135, 160], "coherent_st": 135, "coher": [135, 161, 167], "1d": [135, 137, 150, 169, 218], "wavefunct": [135, 148, 157, 160, 254], "r669": 136, "__cmp__": [136, 140, 159], "dagger": [136, 140, 146, 148, 151, 153, 158, 159], "operatorset": [137, 149], "positionbra3d": 137, "eigenbra": [137, 150, 156], "positionket3d": 137, "eigenket": [137, 150, 156], "positionstate3d": 137, "eigenst": [137, 149, 154, 156, 157], "position_x": 137, "position_i": 137, "position_z": 137, "pxbra": [137, 149], "pxket": [137, 149, 154], "pxop": [137, 149, 154], "xbra": [137, 149, 154], "xket": [137, 149, 154], "xop": [137, 149, 154], "yop": 137, "zop": 137, "uncoupl": [138, 156], "r670": 138, "j_3": [138, 156, 178], "r671": 138, "wigner3j": [138, 178], "wigner": [138, 156, 213, 254], "varshalovich": [138, 156], "zyla": 138, "theor": 138, "phy": [138, 164, 178], "083c01": 138, "r672": 138, "w3j": 138, "715": [138, 178, 193], "wigner6j": [138, 178], "j12": [138, 156], "j23": 138, "6j": [138, 178], "wigner9j": [138, 178], "j4": 138, "j34": 138, "j13": 138, "j24": 138, "9j": [138, 178], "cg_simp": 138, "r673": 138, "clebsh": 138, "rethink": 139, "figsiz": 139, "circuitplot": 139, "nqubit": [139, 143, 144, 153], "control_lin": 139, "gate_idx": [139, 143], "min_wir": 139, "max_wir": 139, "control_point": 139, "wire_idx": 139, "not_point": 139, "one_qubit_box": 139, "box": [139, 144, 146, 155, 157, 247], "qubit": [139, 143, 144, 145, 146, 152], "swap_point": 139, "two_qubit_box": 139, "createcg": 139, "latexnam": 139, "mock": 139, "mz": 139, "circuit_plot": 139, "min_qubit": [139, 143], "autogener": 139, "wire": 139, "q_0": [139, 206], "j_0": 139, "r674": 140, "comm": [140, 159, 219], "plank": 141, "r675": 141, "05457162000000e": 141, "planck_const": 141, "hermetian": 142, "r676": 142, "r677": 142, "ket": [142, 147, 148, 149, 151, 153, 154, 157, 159], "bra": [142, 147, 148, 149, 151, 153, 154, 157, 159], "innerproduct": [142, 147, 148, 154, 156, 159], "outerproduct": [142, 148], "seamlessli": 142, "hermitian_adjoint": 142, "hermitian_transpos": 142, "_apply_operators_qubit": 143, "gate_sort": 143, "gate_simp": 143, "ugat": 143, "cgate": 143, "control_valu": 143, "cnot": 143, "eval_control": 143, "plot_gat": 143, "circ_plot": 143, "simplify_cg": 143, "cphase": 143, "cnotgat": 143, "qappli": [143, 144, 146, 148, 153], "get_target_matrix": 143, "represen": 143, "hadamardg": 143, "identityg": 143, "onequbitg": 143, "phaseg": 143, "swapgat": 143, "target1": 143, "target2": 143, "tgate": 143, "twoqubitg": 143, "xgate": 143, "ygate": 143, "zgate": 143, "bubbl": 143, "random_circuit": 143, "ngate": 143, "gate_spac": 143, "mermin": 144, "_represent_zg": 144, "oracleg": 144, "oracl": 144, "intqubit": [144, 153], "search_funct": 144, "wgate": 144, "apply_grov": 144, "grover_iter": 144, "qstate": 144, "wv": 144, "superposition_basi": 144, "numqubit": 144, "basis_st": 144, "matt": 145, "complexspac": 145, "directsumhilbertspac": 145, "r678": 145, "hilbertspac": 145, "fockspac": 145, "hilbert_spac": [145, 148, 157], "direct_sum": 145, "quantiz": [145, 254], "r679": 145, "mess": [145, 209, 212, 269], "fock_spac": 145, "r680": 145, "tensorpowerhilbertspac": 145, "r681": 145, "tensor_product": 145, "tensorproducthilbertspac": 145, "r682": 145, "clebsch": [146, 156, 178], "gordan": [146, 156, 178], "hilbert": [146, 148, 154], "grover": 146, "qft": [146, 155], "shor": 146, "brabas": [147, 148, 154, 157], "ketbas": [147, 148, 154, 157], "r683": 147, "inner_product": 147, "apply_oper": [148, 159], "identityoper": 148, "r684": 148, "r685": 148, "polymoni": 148, "operator_": 148, "28physic": 148, "old_assumpt": 148, "r686": 148, "outer_product": 148, "unitaryoper": 148, "operators_to_st": 149, "state_to_oper": 149, "_operators_to_st": 149, "state_map": 149, "_state_to_oper": 149, "statebas": [149, 154, 157], "piab": 150, "piabbra": 150, "piabhamiltonian": 150, "piabket": 150, "ip_doit": 151, "smarter": [152, 202], "rk": 152, "iqft": 152, "rkgate": 152, "qtf": 152, "povm": 153, "as_int": [153, 234], "qubit_valu": 153, "intqubitbra": 153, "00001": 153, "qubitbra": 153, "matrix_to_dens": 153, "matrix_to_qubit": 153, "measure_al": 153, "ensembl": 153, "measure_all_oneshot": 153, "oneshot": 153, "measure_parti": 153, "measure_partial_oneshot": 153, "qubit_to_matrix": 153, "enumerate_st": 154, "_enumerate_st": 154, "foo_1": 154, "foo_2": 154, "foo_3": 154, "test2": 154, "bar_4": 154, "bar_5": 154, "bar_10": 154, "get_basi": 154, "replace_non": 154, "operator_to_st": 154, "qexpr": 154, "integrate_result": 154, "orig_expr": 154, "x_ket": 154, "x_op": 154, "rep_expect": 154, "px_2": 154, "px_1": 154, "rep_innerproduct": 154, "_repres": 154, "_represent_foobasi": 154, "foobasi": 154, "_represent_szop": 154, "szupket": 154, "szop": 154, "sz": 154, "cmod": 155, "reformat": 155, "period_find": 155, "momemtum": 156, "j2op": 156, "jxbra": 156, "jx": 156, "jzket": 156, "jxbracoupl": 156, "jcoupl": 156, "jzketcoupl": 156, "jxket": 156, "jxketcoupl": 156, "jybra": 156, "jy": 156, "jybracoupl": 156, "jyket": 156, "jyketcoupl": 156, "jzbra": 156, "jz": 156, "jzbracoupl": 156, "j_4": [156, 178], "argular": 156, "jzop": 156, "passiv": 156, "r687": 156, "wignerd": 156, "mp": [156, 211, 227], "jm": 156, "jj": 156, "r688": 156, "jcoupling_list": 156, "coupledspinst": 156, "spinstat": 156, "r689": 157, "dual_class": 157, "mn": [157, 193, 213], "ket_not": 157, "r690": 157, "k0": [157, 184, 186, 213], "orthogonalbra": 157, "orthogonalket": 157, "orthogonalst": 157, "_eval_adjoint": 157, "timedepbra": 157, "timedepst": 157, "timedepket": 157, "prob": [157, 213], "412214747707527": 157, "matrix_tensor_product": 158, "axb": 158, "xdagger": 158, "axc": 158, "bxc": 158, "tensor_product_simp": 158, "cxd": 158, "boson": 159, "fetter": 159, "welecka": 159, "secondqu": 159, "annihilateboson": 159, "fockstateket": 159, "bket": 159, "fockstatebosonket": 159, "annihilatefermion": 159, "createboson": 159, "is_only_q_annihil": 159, "destroi": [159, 202], "quasi": 159, "hole": 159, "is_only_q_cr": 159, "is_q_annihil": 159, "is_q_creat": 159, "antisymmetrictensor": 159, "bbra": 159, "fockstatebosonbra": 159, "bd": 159, "bosonicbasi": 159, "fock": 159, "NO": 159, "createfermion": 159, "wick": 159, "fbra": 159, "fockstatefermionbra": 159, "fket": 159, "fockstatefermionket": 159, "fixedbosonicbasi": 159, "n_particl": 159, "n_level": 159, "fockstat": 159, "occup": 159, "bosonbra": 159, "fockstatebra": 159, "fermi_level": 159, "r691": 159, "textwrap": [159, 234], "_q": 159, "get_subno": 159, "fermionicoper": 159, "has_q_annihil": 159, "q_annihil": 159, "has_q_creat": 159, "leftmost": 159, "q_creator": 159, "iter_q_annihil": 159, "iter_q_cr": 159, "0x": 159, "permutationoper": 159, "get_permut": 159, "varbosonicbasi": 159, "n_max": 159, "creator": 159, "evaluate_delta": 159, "einstein": [159, 219], "d_ij": 159, "_j": [159, 164, 178, 195], "d_ip": 159, "d_qp": 159, "matrix_rep": 159, "simplify_index_permut": 159, "permutation_oper": 159, "schemat": [159, 164], "abij": 159, "abji": 159, "baij": 159, "baji": 159, "permutlist": 159, "substitute_dummi": 159, "new_indic": 159, "pretty_indic": 159, "_get_ordered_dummi": 159, "_c": 159, "_d": 159, "index_group": 159, "string_of_lett": 159, "my_dummi": 159, "_v": [159, 177], "_p_0": 159, "_p_1": 159, "keep_only_fully_contract": 159, "sho": 160, "isotrop": 160, "mk": [161, 164], "legal": 161, "temperatur": [161, 174, 246], "dimensions": 161, "dimsys_si": [161, 162], "get_dimensional_depend": [161, 162], "has_integer_pow": 161, "dim_si": 161, "base_dim": 161, "derived_dim": 161, "dimensional_depend": 161, "can_transf_matrix": 161, "useless": [161, 184, 186], "inv_can_transf_matrix": 161, "dim_can_vector": 161, "dim_vector": 161, "is_consist": [161, 167], "is_dimensionless": 161, "list_can_dim": 161, "print_dim_bas": 161, "gravitational_const": [162, 166], "equivalent_dim": 162, "grav_eq": 162, "kepler": [162, 238], "venu": 162, "701": 162, "dai": [162, 166, 209], "venus_a": 162, "108208000e3": 162, "solar": 162, "solar_mass": 162, "9891e30": 162, "convert_to": [162, 166, 182, 188], "5112118495813": 162, "659097795948": 162, "astrophys": 162, "astrophysicist": 163, "ua": [163, 181], "earth": [163, 174, 246], "sun": 163, "theoricist": 163, "philosophi": [163, 209, 212, 254], "mole": 164, "dimensionless": 164, "unavoid": 164, "d_3": 164, "d_2": [164, 189, 213], "underbrac": [164, 176], "countabl": [164, 212], "pmatrix": 164, "kg": [164, 247], "glu": 164, "men": 164, "heat": 164, "joul": 164, "calori": 164, "stori": 164, "chemistri": 164, "page52": 164, "1952": 164, "page78": 164, "deboer79": 164, "boer": 164, "818": 164, "levyleblond77": 164, "l\u00e9vy": 164, "leblond": 164, "conceptu": [164, 180, 246], "rivista": 164, "del": [164, 228, 245, 269], "nuovo": [164, 178], "cimento": [164, 178], "1977": 164, "187": [164, 187], "214": 164, "anticip": 164, "bin_prefix": 165, "abbrev": [165, 166, 193], "latex_repr": [165, 166], "encapsul": [165, 186, 212, 226], "kilo": 165, "scale_factor": 166, "pretty_unicode_repr": 166, "pretty_ascii_repr": 166, "mathml_presentation_repr": 166, "is_prefix": 166, "abbrevi": [166, 181, 193, 212, 214], "speed_of_light": 166, "reference_quant": 166, "target_unit": 166, "mile": 166, "atomic_mass_const": 166, "centimet": 166, "25146": 166, "609344": 166, "86400": 166, "660539060e": 166, "300000": 166, "planck": 166, "62963087839509e": 166, "base_unit": 167, "descr": 167, "dimension_system": 167, "derived_unit": 167, "overridden": [167, 180, 195, 269], "get_units_non_prefix": 167, "to_matrix": [168, 169, 177, 182, 188, 238, 240, 242], "rigidli": 168, "entireti": 168, "_str": 168, "otherfram": [169, 238], "n_alpha_b": 169, "ny": 169, "_3": 169, "rot_typ": [169, 172, 174], "rot_ord": [169, 172, 239], "orient_body_fix": 169, "orient_space_fix": 169, "orient_quaternion": 169, "tait": [169, 238, 239], "bryan": [169, 238, 239], "quaternion": [169, 172, 177, 238, 239, 249], "userwarn": [169, 222, 229, 265], "rotation_ord": [169, 238, 239], "xzx": 169, "zxz": [169, 177, 238, 239], "xyx": [169, 238, 239], "yzy": 169, "zyz": 169, "yxy": [169, 177], "yzx": [169, 177], "zxy": 169, "xzy": 169, "zyx": 169, "yxz": 169, "orient_explicit": 169, "lambda_x": [169, 238, 239], "lambda_i": [169, 238, 239], "lambda_z": [169, 238, 239], "q0": [169, 209, 238, 239], "newnam": 169, "gen_spe": [169, 172], "variable_map": 169, "a_x": [169, 177, 193], "b_x": [169, 171, 177, 219], "b_y": [169, 171, 177, 219], "a_z": [169, 177], "b_z": [169, 177, 219], "inlist": 169, "var_in_dcm": 169, "reexpress": [169, 242], "time_deriv": [169, 174, 175], "free_dynamicsymbol": 169, "codirect": 169, "dyadic_tensor": [169, 238], "frame1": 169, "frame2": [169, 171], "second_reference_fram": 169, "ixz": 169, "inertia_dyad": 169, "pertain": [170, 175], "fieldfunct": [170, 174], "vect": [170, 238, 240], "r_x": [170, 174], "r_y": [170, 174], "r_z": [170, 174], "scalar_field": [170, 174, 238, 240, 244], "grad_field": [170, 240], "sympyfi": [170, 171, 172, 240], "position2": [170, 240], "vectfield": [170, 174, 240, 244], "solenoid": [170, 240, 245], "q6": 171, "vec1": 171, "vec2": 171, "coordinatesym": [171, 175], "n_x": 171, "rotating_reference_fram": 171, "time_derivatives_in_the_two_fram": 171, "otherpoint": 172, "outfram": 172, "interfram": 172, "fixedfram": 172, "get_motion_param": 172, "vectori": [172, 174, 241, 246], "timevalue1": 172, "timevalue2": 172, "313": 172, "vel_vec": 172, "q1dd": 173, "q2dd": 173, "charg": [174, 246], "displac": [174, 176, 246], "temper": 174, "electric_potenti": [174, 244], "r1_x": 174, "r1_y": 174, "infinitesim": [174, 244], "nabla": [174, 238, 243, 244], "f_y": [174, 244], "f_x": [174, 212, 244], "sink": [174, 244], "irrot": [174, 244], "is_conserv": [174, 244, 245], "is_solenoid": [174, 244, 245], "scalar_potenti": [174, 244, 245], "conservative_field": [174, 244], "scalar_potential_differ": [174, 244, 245], "aug": [175, 212], "dyadic_product": [175, 245], "inc": [175, 187], "kinematic_equ": 175, "w_x": 176, "w_y": 176, "w_z": 176, "w_1": [176, 188], "w_2": [176, 188], "w_3": 176, "textrm": [176, 177, 201], "u_x": 176, "sp": 176, "oq": 176, "qp": 176, "rod": 176, "went": 176, "parallelogram": 177, "c_x": 177, "c_y": 177, "c_z": 177, "train": 177, "friend": 177, "xz": [177, 179], "zy": 177, "undergon": [177, 212], "vastli": 177, "wait": 177, "mold": 177, "bp": [177, 209], "bpp": 177, "zzx": 177, "multifram": 177, "direction": 177, "racah": 178, "gaunt": 178, "rasch03": 178, "regge58": 178, "regg": 178, "544": 178, "regge59": 178, "116": [178, 187], "1959": 178, "edmonds74": 178, "edmond": 178, "princeton": [178, 213], "1957": 178, "rasch": 178, "siam": [178, 231], "sci": 178, "1416": 178, "1428": 178, "liberatodebrito82": 178, "liberato": 178, "brito": 178, "forum": [178, 212], "m4nzdu": 178, "7o38": 178, "jen": 178, "03": [178, 213], "oscar": 178, "gerardo": 178, "lazo": 178, "arjona": 178, "jyr2000": 178, "gmail": 178, "clebsch_gordan": 178, "2j_3": 178, "dot_rot_grad_ynm": 178, "gradient": [178, 179, 238, 245, 246], "_l": 178, "l_2": 178, "l_3": 178, "drastic": 178, "2l_1": 178, "2l_2": 178, "2l_3": 178, "1200": 178, "00689500421922113448": 178, "inflect": 178, "unsuit": 178, "dd": [178, 198], "ee": [178, 188], "j_5": 178, "j_6": 178, "richer": 178, "wigner_3j": 178, "wigner_6j": 178, "wigner_9j": 178, "j_7": 178, "j_8": 178, "j_9": 178, "05555555": 178, "1666666": 178, "wigner_d": 178, "j_z": 178, "j_y": 178, "\u03b3": [178, 259, 269], "wigner_d_smal": 178, "textbackend": 179, "plot_parametr": 179, "plot_implicit": 179, "plot3d_parametric_lin": 179, "plot3d_parametric_surfac": 179, "xlabel": 179, "ylabel": 179, "zlabel": 179, "aspect_ratio": 179, "ylim": 179, "axis_cent": 179, "xscale": 179, "yscale": 179, "autoscal": 179, "textplot": 179, "_seri": [179, 190], "baseseri": 179, "nonparametr": 179, "cylindr": [179, 244], "basebackend": 179, "parametric2dlineseri": 179, "parametric3dlineseri": 179, "cyan": 179, "grayscal": 179, "integers_onli": 179, "surfaceover2drangeseri": 179, "parametricsurfaceseri": 179, "surface_color": 179, "range1": 179, "range2": 179, "fill_between": 179, "inch": 179, "expr_x": 179, "expr_i": 179, "canva": 179, "range_x": 179, "range_i": 179, "nb_of_points_x": 179, "nb_of_points_i": 179, "expr_z": 179, "range_u": 179, "range_v": 179, "nb_of_points_u": 179, "nb_of_points_v": 179, "x_var": 179, "y_var": 179, "mesh": 179, "p8": 179, "p9": 179, "nrow": [179, 182], "ncolumn": 179, "stuff": [179, 224, 226, 234], "is_2dlin": 179, "oblig": 179, "only_integ": 179, "get_seg": 179, "get_color_arrai": 179, "var_start_end": 179, "r692": 179, "luiz": 179, "henriqu": 179, "figueiredo": 179, "r693": 179, "line3dbaseseri": 179, "surfacebaseseri": 179, "var_start_end_x": 179, "var_start_end_i": 179, "var_start_end_u": 179, "var_start_end_v": 179, "implicitseri": 179, "has_equ": 179, "use_interval_math": 179, "centric": 179, "get_mesh": 179, "process_seri": 179, "_process_seri": 179, "keyboard": 179, "mous": 179, "pyglet_plot": 179, "screenshot": 179, "camera": 179, "zoom": 179, "numpad": 179, "ordin": [179, 209, 234], "f5": 179, "f6": 179, "f8": 179, "drag": 179, "button": [179, 225], "curvilinear": [179, 241, 242, 245], "__setitem__": 179, "zfade4": 179, "key1": 179, "value1": 179, "key2": 179, "value2": 179, "unbound_theta": 179, "wirefram": 179, "saddl": 179, "fz": 179, "_______________________________________________________": 179, "mediterranean": 180, "cultur": 180, "arab": 180, "lighten": 180, "tapestri": 180, "woven": 180, "european": 180, "soil": 180, "plausibl": 180, "teeter": 180, "totter": 180, "outweigh": 180, "excit": 180, "amus": 180, "kempf": 180, "1944": 180, "20th": 180, "dedekind": 180, "intim": 180, "disciplin": 180, "toolset": 180, "atiyah69": [180, 187], "gear": 180, "greuel2008": [180, 187], "interspers": 180, "lr": 180, "ilex": 180, "\u211a": [180, 193], "localis": 180, "abridg": 180, "free_modul": [180, 184], "quotient_r": [180, 184], "overload": [180, 183, 184, 241, 264], "polynomialr": [180, 184, 185, 191], "domain_or_r": [180, 184], "quotientr": [180, 184], "base_id": [180, 184], "elbow": 180, "room": 180, "componentwis": [180, 193], "inclin": 180, "biproduct": 180, "quotient_modul": 180, "is_submodul": 180, "multiply_id": 180, "identity_hom": 180, "freemodul": 180, "freemoduleel": 180, "conicis": 180, "_contain": 180, "_syzygi": 180, "_in_terms_of_gener": 180, "_intersect": 180, "_module_quoti": 180, "reduce_el": [180, 188], "represantit": 180, "in_terms_of_gener": 180, "inclusion_hom": 180, "rela": 180, "relb": 180, "is_full_modul": 180, "module_quoti": 180, "opt": [180, 186, 205, 265], "coincis": 180, "syzygy_modul": 180, "r_n": 180, "_contains_elem": 180, "_contains_id": 180, "_quotient": 180, "_union": 180, "_product": 180, "is_whole_r": 180, "is_maxim": 180, "is_primari": 180, "is_rad": 180, "is_princip": 180, "xj": 180, "satur": 180, "subquoti": 180, "quotientmodul": 180, "subquotientmodul": 180, "killed_modul": 180, "quotientmoduleel": 180, "kill": [180, 184, 224], "quotient_hom": 180, "ker": 180, "surject": 180, "cokernel": 180, "coker": 180, "meaningfulli": 180, "restrict_domain": 180, "homomoprh": 180, "modulehomomorph": [180, 188], "_ker": 180, "_img": 180, "_kernel": 180, "_imag": 180, "_restrict_domain": 180, "_restrict_codomain": 180, "_quotient_domain": 180, "_quotient_codomain": 180, "_appli": 180, "_mul_scalar": 180, "_compos": 180, "_add": [180, 199], "is_inject": 180, "quotient_domain": 180, "is_isomorph": 180, "preimag": 180, "restrict_codomain": 180, "is_surject": 180, "quotient_codomain": 180, "induct": 180, "monogen": 180, "monogenicfiniteextens": [180, 184], "finiteextens": 180, "sqrt2": [180, 183], "_5": 180, "extensionel": [180, 184], "notinvert": [180, 186, 189], "nu_1": 181, "nu_2": 181, "nu_n": 181, "nu_i": 181, "customarili": 181, "irreduc": [181, 184, 186, 188, 189, 192, 213, 219, 269], "endow": 181, "resp": [181, 184, 209], "divmod": [181, 183, 184], "cb": [181, 231], "sqf_list": [181, 184, 189], "sqf": [181, 184, 189, 206], "buchberg": [181, 186, 187, 189], "solve_poly_system": [181, 189, 211, 212], "fmt": [182, 184, 188], "matrix1": 182, "dmnonsquarematrixerror": 182, "zz_i": [182, 183, 185], "from_dict_sympi": 182, "ncol": 182, "elemsdict": 182, "from_list_sympi": 182, "from_list": [182, 184, 189, 190], "construct_domain": [182, 183, 184, 189], "from_rep": 182, "drep": 182, "dm": [182, 188], "ownership": 182, "scc": 182, "substract": 182, "to_dens": 182, "to_field": [182, 184, 189], "to_spars": 182, "aq": 182, "ccc": [182, 212], "from_ddm": 182, "domainerror": [182, 186, 189], "to_ddm": 182, "r694": 182, "pythonmpq": [183, 184], "srepr": [183, 256, 264], "strength": 183, "richardon": 183, "dup_factor_list": 183, "factortool": [183, 186], "dup_": [183, 186], "dmp_": [183, 186], "prod": [183, 190, 202], "z1": [183, 184, 211], "is_field": [183, 184], "quo": [183, 184, 186, 189], "rem": [183, 184, 186, 189], "exquo": [183, 184, 189], "exactquotientfail": [183, 184, 186, 189], "mpz": [183, 184], "of_typ": [183, 184], "z1_sympi": 183, "to_sympi": [183, 184], "from_sympi": [183, 184], "forth": [183, 188], "z_sympi": 183, "z_zz": 183, "coercionfail": [183, 186], "sum_domain": 183, "expressions_sympi": 183, "expressions_dom": 183, "result_dom": 183, "e_dom": 183, "result_sympi": 183, "qq_i": [183, 185], "gaussianinteg": [183, 184], "gaussianrationalfield": [183, 184], "gaussianr": [183, 184], "galoi": [183, 186, 188], "finitefield": [183, 184], "pythonfinitefield": [183, 184], "gmpyfinitefield": [183, 184], "welcom": [183, 209, 262], "realel": [183, 184], "complexel": [183, 184], "mpc": 183, "xr": [183, 191], "zc": 183, "1j": 183, "_mpc_": 183, "realfield": [183, 184], "rr100": 183, "33333333333333333333333333333": 183, "hack": [183, 209, 222], "algebraic_field": [183, 184, 186, 188], "algebraicfield": [183, 184, 186, 188], "sqrt3": 183, "x_dom": 183, "p_expr": [183, 184], "polyel": [183, 184, 186, 190, 191, 193], "p_dom": 183, "unexpand": [183, 192, 202, 225], "xk": [183, 184, 195], "yk": [183, 184], "poly_r": [183, 184], "old_polynomialr": 183, "globalpolynomialr": 183, "polyclass": [183, 184, 189], "yr": [183, 191], "broader": 183, "get_field": [183, 184], "frac_field": [183, 184], "rationalfield": [183, 184], "old_frac_field": [183, 184], "fractionfield": [183, 184], "old_fractionfield": 183, "xf": 183, "yf": 183, "fracfield": [183, 184], "expressiondomain": [183, 184], "elements_sympi": 183, "elements_k": 183, "convert_from": [183, 184], "num_zz": 183, "num_qq": 183, "domainel": [183, 184, 191], "encompass": 183, "all_coeff": [183, 184, 189], "dom": [183, 184, 186, 201], "strang": 183, "hybrid": 183, "unreli": 183, "usefulli": 184, "pythonr": [184, 191], "p_domain": 184, "ez": [184, 219], "get_r": 184, "has_assoc_field": 184, "has_assoc_r": 184, "alg_field_from_poli": [184, 188], "root_index": 184, "almosteq": 184, "cyclotomic_field": [184, 188], "zeta7": 184, "zeta_": 184, "lexord": [184, 189], "from_algebraicfield": 184, "from_complexfield": 184, "from_expressiondomain": 184, "from_expressionrawdomain": 184, "from_ff": 184, "modularinteg": 184, "from_ff_gmpi": 184, "from_ff_python": 184, "from_fractionfield": 184, "from_globalpolynomialr": 184, "from_monogenicfiniteextens": 184, "from_polynomialr": 184, "from_qq_gmpi": 184, "from_qq_python": 184, "from_realfield": 184, "from_zz_gmpi": 184, "from_zz_python": 184, "gcdex": [184, 189], "get_exact": 184, "half_gcdex": [184, 189], "is_pid": 184, "is_r": 184, "is_nonposit": 184, "is_on": [184, 189], "rersiv": 184, "__neg__": 184, "__pos__": 184, "__sub__": 184, "q_domain": 184, "q_expr": 184, "x_domain": 184, "alg": [184, 188, 192], "trait": 184, "is_unit": 184, "__divmod__": 184, "__floordiv__": 184, "__mod__": [184, 188], "simpledomain": 184, "compositedomain": 184, "from_qq": 184, "from_zz": 184, "gmpyinteg": 184, "pythoninteg": 184, "gmpyrationalfield": 184, "pythonrationalfield": 184, "from_gaussianrationalfield": 184, "gaussianel": 184, "gaussiandomain": 184, "qq_python": 184, "zz_python": 184, "z2": 184, "z3": 184, "z4": 184, "from_gaussianinteg": 184, "as_algebraicfield": 184, "orig_ext": 184, "algebraicnumb": [184, 188, 192], "integral_basi": [184, 188], "maximal_ord": [184, 188], "zeta5": 184, "primes_abov": [184, 188], "primeid": [184, 188], "to_alg_num": [184, 188], "legibl": 184, "to_rat": 184, "mpelement": 184, "complexfield": 184, "lc": [184, 186, 189], "domain_or_field": 184, "dmf": 184, "coercibl": 184, "monomialord": [184, 189], "xring": 184, "vring": 184, "sring": [184, 190, 191], "polyr": [184, 185, 186, 191], "factor_list": [184, 189, 269], "add_gen": 184, "drop_to_ground": 184, "monomial_basi": 184, "206": [184, 189], "744": 184, "945": [184, 190], "is_monomi": [184, 189], "const": 184, "coeffcient": [184, 186], "inplac": 184, "shallow": [184, 200], "zero_monom": 184, "fv": 184, "clo": 184, "p64": 184, "qv": 184, "f0": 184, "imul_num": 184, "itercoeff": 184, "itermonom": 184, "iterterm": 184, "leading_expv": 184, "leading_monom": 184, "leading_term": 184, "listcoeff": 184, "listmonom": 184, "listterm": 184, "monom": [184, 189], "strip_zero": 184, "tail_degre": 184, "xfield": 184, "vfield": [184, 243], "sfield": [184, 243], "fracel": [184, 193], "lev": 184, "add_ground": [184, 189], "all_monom": [184, 189], "all_term": [184, 189], "cauchy_lower_bound": 184, "cauchy_upper_bound": 184, "clear_denom": [184, 189], "count_complex_root": 184, "sup": [184, 189, 193, 200, 201], "count_real_root": 184, "deflat": [184, 189], "y_i": [184, 186, 188, 189, 209], "x_j": [184, 186, 189], "degree_list": [184, 189], "eject": [184, 189], "exquo_ground": [184, 189], "factor_list_includ": [184, 189], "from_dict": [184, 189], "from_sympy_list": 184, "gff_list": [184, 189], "homogeneous_ord": [184, 189, 206], "is_cyclotom": [184, 189], "is_ground": [184, 189], "is_homogen": [184, 189], "is_irreduc": [184, 189], "is_linear": [184, 189], "is_mon": [184, 189], "is_quadrat": [184, 189], "is_sqf": [184, 189], "l1_norm": [184, 189], "l2_norm_squar": 184, "max_norm": [184, 189], "mignotte_sep_bound_squar": 184, "mignott": [184, 186], "mul_ground": [184, 189], "pdiv": [184, 189], "pexquo": [184, 189], "pquo": [184, 189], "prem": [184, 189], "quo_ground": [184, 189], "refine_root": [184, 188, 189], "includepr": [184, 186, 189], "sqf_list_includ": [184, 189], "sqf_norm": [184, 189], "sqf_part": [184, 189], "sqr": [184, 189], "sturm": [184, 189], "sub_ground": [184, 189], "to_dict": 184, "to_exact": [184, 189], "to_r": [184, 189], "to_sympy_dict": 184, "to_sympy_list": 184, "to_tupl": 184, "total_degre": [184, 189, 206], "trunc": [184, 189, 192], "frac_unifi": 184, "half_per": 184, "poly_unifi": 184, "gr\u00f6bner": 185, "groebner": [185, 187, 188, 189, 192, 205, 211, 212], "wester": 185, "dispers": [185, 187, 213], "agca": 185, "syzygi": 185, "undocu": 185, "rs_seri": 185, "eqs_to_matrix": 185, "sympy_eqs_to_r": 185, "_solve_lin_si": 185, "_solve_lin_sys_compon": 185, "ddm": 185, "sdm": [185, 186], "adic": [185, 187], "valuat": [185, 209], "subfield": 185, "l0": 186, "legitim": 186, "uninterest": 186, "bulk": [186, 203], "x_u": 186, "dup__": 186, "densebas": 186, "dmp_lc": 186, "poly_lc": 186, "dmp_tc": 186, "poly_tc": 186, "dmp_ground_lc": 186, "dmp_ground_tc": 186, "dmp_true_lt": 186, "n_1": [186, 211, 213], "n_k": 186, "dmp_degre": 186, "dmp_degree_in": 186, "dmp_degree_list": 186, "dmp_strip": 186, "dmp_valid": 186, "dup_revers": 186, "dmp_copi": 186, "dmp_to_tupl": 186, "dmp_normal": 186, "dmp_convert": 186, "to_domain": 186, "dmp_from_sympi": 186, "dmp_nth": 186, "dmp_ground_nth": 186, "dmp_zero_p": 186, "dmp_zero": 186, "dmp_one_p": 186, "dmp_one": 186, "dmp_ground_p": 186, "dmp_ground": 186, "dmp_negative_p": 186, "dmp_positive_p": 186, "dmp_from_dict": 186, "dmp_to_dict": 186, "dmp_swap": 186, "dmp_permut": 186, "dmp_nest": 186, "dmp_rais": 186, "dmp_deflat": 186, "dmp_multi_defl": 186, "dmp_inflat": 186, "dmp_exclud": 186, "dmp_includ": 186, "dmp_inject": 186, "dmp_eject": 186, "dmp_terms_gcd": 186, "dmp_list_term": 186, "dmp_apply_pair": 186, "dmp_slice": 186, "dup_random": 186, "densearith": 186, "dmp_add_term": 186, "dmp_sub_term": 186, "dmp_mul_term": 186, "dmp_add_ground": 186, "dmp_sub_ground": 186, "dmp_mul_ground": 186, "dmp_quo_ground": 186, "dmp_exquo_ground": 186, "dup_lshift": 186, "dup_rshift": 186, "dmp_ab": 186, "dmp_neg": 186, "dmp_add": 186, "dmp_sub": 186, "dmp_add_mul": 186, "dmp_sub_mul": 186, "dmp_mul": 186, "dmp_sqr": 186, "dmp_pow": 186, "dmp_pdiv": 186, "dmp_prem": 186, "dmp_pquo": 186, "dmp_pexquo": 186, "dmp_rr_div": 186, "dmp_ff_div": 186, "dmp_div": 186, "dmp_rem": 186, "dmp_quo": 186, "dmp_exquo": 186, "dmp_max_norm": 186, "dmp_l1_norm": 186, "dmp_expand": 186, "densetool": 186, "dmp_integr": 186, "dmp_integrate_in": 186, "dmp_diff": 186, "dmp_diff_in": 186, "dmp_eval": 186, "dmp_eval_in": 186, "dmp_eval_tail": 186, "dmp_diff_eval_in": 186, "dmp_trunc": 186, "dmp_ground_trunc": 186, "dup_mon": 186, "dmp_ground_mon": 186, "dup_cont": 186, "dmp_ground_cont": 186, "dup_primit": 186, "dmp_ground_primit": 186, "dup_extract": 186, "dmp_ground_extract": 186, "dup_real_imag": 186, "bivari": [186, 192, 213], "dup_mirror": 186, "dup_scal": 186, "dup_shift": 186, "dup_transform": 186, "dmp_compos": 186, "dup_decompos": 186, "t_m": 186, "r695": 186, "dmp_lift": 186, "dup_sign_vari": 186, "dmp_clear_denom": 186, "k_0": 186, "dmp_revert": 186, "gf_": 186, "justifi": 186, "necess": 186, "u_0": 186, "m_0": [186, 206], "m_n": 186, "gf_crt1": 186, "9215": 186, "9405": 186, "9603": 186, "gf_crt2": 186, "gf_int": 186, "gf_degre": 186, "gf_lc": 186, "gf_tc": 186, "gf_strip": 186, "gf_trunc": 186, "gf_normal": 186, "gf_from_dict": 186, "gf_to_dict": 186, "gf_from_int_poli": 186, "gf_to_int_poli": 186, "gf_neg": 186, "gf_add_ground": 186, "gf_sub_ground": 186, "gf_mul_ground": 186, "gf_quo_ground": 186, "gf_add": 186, "gf_sub": 186, "gf_mul": 186, "gf_sqr": 186, "gf_add_mul": 186, "gf_sub_mul": 186, "gf_expand": 186, "gf_div": 186, "r696": 186, "monagan93": [186, 187], "r697": 186, "gathen99": [186, 187], "gf_rem": 186, "gf_quo": 186, "gf_exquo": 186, "gf_lshift": 186, "gf_rshift": 186, "gf_pow": 186, "gf_pow_mod": 186, "r698": 186, "gf_gcd": 186, "gf_lcm": 186, "gf_cofactor": 186, "gf_gcdex": 186, "eea": 186, "r699": 186, "gf_monic": 186, "gf_diff": 186, "gf_eval": 186, "gf_multi_ev": 186, "gf_compos": 186, "gf_compose_mod": 186, "gf_trace_map": 186, "r700": 186, "gathen92": [186, 187], "gf_random": 186, "gf_irreduc": 186, "gf_irreducible_p": 186, "gf_sqf_p": 186, "gf_sqf_part": 186, "gf_sqf_list": 186, "e_2": [186, 189], "f_j": [186, 203], "gf_sqf": 186, "r701": 186, "geddes92": [186, 187], "gf_qmatrix": 186, "berlekamp": 186, "gf_qbasi": 186, "gf_berlekamp": 186, "gf_zassenhau": 186, "gf_shoup": 186, "gf_factor_sqf": 186, "gf_factor": 186, "e_d": 186, "cantor": 186, "zassenhau": [186, 188], "shoup": [186, 187], "kaltofen": [186, 187], "gathen": [186, 187], "gf_factor_method": 186, "r702": 186, "gf_valu": 186, "2204": 186, "gf_csolv": 186, "congruent": [186, 203, 206], "189": 186, "112": [186, 190], "139": 186, "r703": 186, "ivan": 186, "niven": 186, "zuckerman": 186, "montgomeri": 186, "infeas": [186, 189], "sdm_": 186, "distributedmodul": 186, "sdm_monomial_mul": 186, "sdm_monomial_deg": 186, "f_5": 186, "sdm_monomial_divid": 186, "sdm_lc": 186, "sdm_to_dict": 186, "sdm_from_dict": 186, "dic": 186, "sdm_add": 186, "2f_1": 186, "3f_1": 186, "yf_1": 186, "xf_1": 186, "sdm_lm": 186, "sdm_lt": 186, "sdm_mul_term": 186, "2xy": [186, 263], "4y": [186, 212, 258], "8xy": 186, "2y": [186, 206, 209, 212, 263], "sdm_zero": 186, "sdm_deg": 186, "sdm_from_vector": 186, "sdm_to_vector": 186, "variant": [186, 209, 212], "qg": 186, "remark": [186, 192, 203, 209], "uf": 186, "vg": 186, "zout": 186, "euclidtool": 186, "dmp_half_gcdex": 186, "dmp_gcdex": 186, "dmp_invert": 186, "dmp_euclidean_pr": 186, "dmp_primitive_pr": 186, "exceedingli": 186, "collin": [186, 187], "collins67": [186, 187], "subdomain": 186, "2l": 186, "remainin": 186, "subdetermin": 186, "n_2": [186, 213], "n_": [186, 206], "abnorm": 186, "gamma_i": 186, "brown": [186, 187, 213], "traub": [186, 187], "browntraub71": [186, 187], "brown78": [186, 187], "discoveri": [186, 265], "dmp_inner_subresult": 186, "729": 186, "sre": 186, "dmp_subresult": 186, "dmp_prs_result": 186, "dmp_zz_modular_result": 186, "dmp_zz_collins_result": 186, "dmp_qq_collins_result": 186, "dmp_result": 186, "dmp_discrimin": 186, "dmp_rr_prs_gcd": 186, "cff": [186, 189], "cfg": [186, 189], "dmp_ff_prs_gcd": 186, "dmp_zz_heu_gcd": 186, "r704": 186, "liao95": [186, 187], "dmp_qq_heu_gcd": 186, "dmp_inner_gcd": 186, "dmp_gcd": 186, "dmp_lcm": 186, "dmp_content": 186, "dmp_primit": 186, "dmp_cancel": 186, "dmp_trial_divis": 186, "dmp_zz_mignotte_bound": 186, "dup_zz_hensel_step": 186, "hensel": 186, "r705": 186, "dup_zz_hensel_lift": 186, "f_list": 186, "multifactor": 186, "r706": 186, "dup_zz_zassenhau": 186, "dup_zz_irreducible_p": 186, "eisenstein": 186, "dup_cyclotomic_p": 186, "bradford": 186, "russel": 186, "251": 186, "berlin": 186, "heidelberg": 186, "dup_zz_cyclotomic_poli": 186, "dup_zz_cyclotomic_factor": 186, "r707": 186, "weisstein09": [186, 187], "dup_zz_factor_sqf": 186, "dup_zz_factor": 186, "r708": 186, "dmp_zz_wang_non_divisor": 186, "wang": [186, 187], "eez": 186, "dmp_zz_wang_test_point": 186, "dmp_zz_wang_lead_coeff": 186, "dmp_zz_diophantin": 186, "dmp_zz_wang_hensel_lift": 186, "dmp_zz_wang": 186, "enhanc": [186, 213], "r709": 186, "wang78": [186, 187], "r710": 186, "dmp_zz_factor": 186, "r711": 186, "dmp_ext_factor": 186, "dup_gf_factor": 186, "dmp_factor_list": 186, "dmp_factor_list_includ": 186, "dmp_irreducible_p": 186, "groebnertool": 186, "polyconfig": [186, 189], "f5b": [186, 189], "spoli": 186, "red_groebn": 186, "beckerweispfenning93": 186, "is_groebn": 186, "is_minim": 186, "is_reduc": 186, "fglmtool": 186, "matrix_fglm": 186, "o_to": 186, "o_from": 186, "r712": 186, "fauger": [186, 189], "gianni": [186, 189, 211], "mora": [186, 187, 189, 211], "sdm_spoli": 186, "phantom": 186, "sca": 186, "defn": 186, "sdm_ecart": 186, "ecart": 186, "sdm_nf_mora": 186, "nf": 186, "sdm_groebner": 186, "sugar": [186, 187, 218], "giovini": [186, 187], "polyopt": [186, 190], "build_opt": 186, "polyerror": [186, 189], "basepolynomialerror": 186, "operationnotsupport": 186, "heuristicgcdfail": 186, "homomorphismfail": 186, "isomorphismfail": [186, 188], "extraneousfactor": 186, "evaluationfail": 186, "refinementfail": 186, "notrevers": [186, 189], "notalgebra": 186, "polynomialerror": [186, 189], "unificationfail": [186, 188], "generatorsneed": 186, "computationfail": 186, "exc": 186, "generatorserror": 186, "univariatepolynomialerror": 186, "multivariatepolynomialerror": [186, 189], "polificationfail": 186, "orig": 186, "optionerror": 186, "flagerror": 186, "modulargcd": 186, "modgcd_univari": 186, "monagan00": [186, 187], "modgcd_bivari": 186, "modgcd_multivari": 186, "_modgcd_multivariate_p": 186, "brown71": [186, 187], "degbound": 186, "contbound": 186, "func_field_modgcd": 186, "reconstuct": 186, "z_p": 186, "spuriou": [186, 211], "hoeij04": [186, 187], "scarc": 186, "hsin": 187, "chao": 187, "liao": 187, "fateman": 187, "montreal": 187, "quebec": 187, "canada": 187, "240": [187, 195, 240], "247": [187, 211], "von": [187, 213], "zur": 187, "gerhard": 187, "cambridg": [187, 206], "weisstein": 187, "cyclotomicpolynomi": 187, "1215": 187, "1231": 187, "czapor": 187, "labahn": 187, "monagan": [187, 205], "disco": 187, "721": 187, "kaltofen98": 187, "subquadrat": 187, "223": 187, "1998": [187, 206], "1179": 187, "1197": 187, "shoup95": 187, "397": 187, "shoup91": 187, "cox97": [187, 189], "shea": [187, 189], "ajwa95": 187, "ajwa": 187, "liu": 187, "cites": [187, 205], "ist": [187, 202, 205], "psu": [187, 202, 205], "mycites": 187, "login": 187, "bose03": 187, "bose": 187, "guiver": 187, "multidimension": [187, 224, 249], "giovini91": 187, "bronstein93": [187, 189], "salvi": [187, 190], "kiev": 187, "ukrain": 187, "buchberger01": [187, 189], "theorist": 187, "moreno": 187, "diaz": 187, "freir": 187, "eurocast": 187, "februari": 187, "davenport88": 187, "siret": 187, "tournier": 187, "london": [187, 206], "124": [187, 258], "greuel": 187, "pfister": 187, "atiyah": 187, "macdonald": 187, "142": 187, "1971": [187, 209], "505": 187, "237": 187, "249": 187, "wittkopf": 187, "478": 187, "hoeij": 187, "2004": [187, 206], "297": [187, 189], "304": [187, 189], "wang81": 187, "symsac": 187, "hoeij02": 187, "manwright94": [187, 189], "yiu": 187, "kwong": 187, "franci": 187, "wright": 187, "190347": 187, "190413": 187, "koepf98": [187, 189], "koepf": [187, 195, 205], "vieweg": 187, "abramov71": [187, 189], "abramov": [187, 211], "ussr": 187, "330": 187, "man93": [187, 189], "376": 187, "sciencedirect": 187, "pii": 187, "s0747717183710539": 187, "kapur1994": 187, "deepak": 187, "kapur": 187, "tushar": 187, "saxena": 187, "yang": 187, "dixon": 187, "researchg": [187, 213], "2514261_algebraic_and_geometric_reasoning_using_dixon_result": 187, "palancz08": 187, "pal\u00e1ncz": 187, "zaletnyik": 187, "jl": [187, 226], "awang": 187, "ew": 187, "grafarend": 187, "geodet": 187, "geodesi": 187, "225607735_dixon_result": 187, "s_solution_of_systems_of_geodetic_polynomial_equ": 187, "bruce97": 187, "bruce": 187, "randal": 187, "donald": [187, 228], "mundi": 187, "artifici": [187, 196], "intellig": [187, 205, 209, 269], "orlando": 187, "www2": 187, "duke": 187, "donaldlab": 187, "symbolicnumericalcomput": 187, "045": 187, "087": 187, "stiller96": 187, "stiller": 187, "1996": [187, 203, 211, 238], "citeseerx": [187, 202], "viewdoc": [187, 202, 205], "590": 187, "2021": 187, "rep1": [187, 202], "cohen93": [187, 188], "henri": 187, "olga": 188, "tausski": 188, "zimmer": 188, "pohst": 188, "articul": 188, "numberfield": 188, "mathfrak": 188, "regul": 188, "alpha_m": 188, "round_two": 188, "prime_decomp": 188, "prime_valu": 188, "minimal_polynomi": 188, "field_isomorph": 188, "nilrad": 188, "z_k": 188, "zk": 188, "ordinarili": 188, "503": 188, "r713": 188, "r714": 188, "powerbasisel": 188, "ramif": 188, "as_submodul": 188, "bundl": 188, "test_factor": 188, "deliber": 188, "is_inert": 188, "inert": [188, 209], "reduce_anp": 188, "elt": 188, "reduce_alg_num": 188, "field_gen": 188, "just_gen": 188, "reagent": 188, "kummer": 188, "1847": 188, "ueber": 188, "zerlegung": 188, "crell": 188, "r715": 188, "_minpoly_compos": 188, "stall": 188, "alli": 188, "monomorph": 188, "alpha_i": 188, "alpha_n": 188, "lincomb": 188, "primtiiv": 188, "meanwhil": 188, "moduleel": 188, "powerbasi": 188, "submodule_from_matrix": 188, "ancestor": 188, "to_col": 188, "nca": 188, "_mult_tab": 188, "successfulli": 188, "moduleendomorph": 188, "innerendomorph": 188, "endomorphismr": 188, "spec": [188, 189], "i_n": [188, 189, 214], "include_self": 188, "basis_el": 188, "element_from_r": 188, "endomorphism_r": 188, "is_compat_col": 188, "mult_tab": 188, "mult": 188, "closurefailur": 188, "nearest_common_ancestor": 188, "number_field": 188, "power_basis_ancestor": 188, "incom": 188, "halv": 188, "submodule_from_gen": 188, "over_power_basi": 188, "starts_with_un": 188, "hnf_modulu": 188, "whole_submodul": 188, "element_from_anp": 188, "element_from_alg_num": 188, "element_from_poli": 188, "qq_matrix": 188, "basis_element_pullback": 188, "discard_befor": 188, "structureerror": 188, "cohen00": 188, "make_mod_elt": 188, "qq_col": 188, "from_int_list": 188, "is_compat": 188, "reduced_mod_p": 188, "to_ancestor": 188, "anc": 188, "to_par": 188, "to_anp": 188, "inner_endomorph": 188, "event": [188, 213], "find_min_poli": 188, "missingunityerror": 188, "is_int": 188, "get_num_denom": 188, "extract_fundamental_discrimin": 188, "r716": 188, "algintpow": 188, "zeta_pow": 188, "r717": 188, "coeff_search": 188, "supplement_a_subspac": 188, "dmrankerror": 188, "v_n": 188, "w_r": 188, "w_j": 188, "u_j": 188, "r718": 188, "poly_from_expr": 189, "parallel_poly_from_expr": 189, "lt": [189, 234], "mod_invers": 189, "exprtool": [189, 249], "gcd_term": 189, "gcd_list": 189, "lcm_list": 189, "destruct": 189, "2079": 189, "1401": 189, "2715": 189, "6720": 189, "1092": 189, "gff": 189, "check_sqf": 189, "count_root": 189, "nroot": [189, 211], "maxstep": 189, "cleanup": 189, "73205080756888": 189, "73205080756887729352744634151": 189, "ground_root": 189, "nth_power_roots_poli": 189, "r_f": 189, "r_g": 189, "_signsimp": 189, "q_n": 189, "is_zero_dimension": [189, 212], "donal": 189, "230": [189, 211], "ec": 189, "em": 189, "di": 189, "dispersionset": 189, "gp": [189, 209], "free_symbols_in_domain": 189, "from_poli": 189, "get_domain": 189, "get_modulu": 189, "has_only_gen": 189, "vincent": [189, 231], "akrita": 189, "strzebonski": 189, "va": 189, "alkiviadi": 189, "adam": 189, "panagioti": 189, "vigkla": 189, "265": 189, "279": 189, "polnomi": 189, "is_multivari": 189, "is_univari": 189, "ltrim": 189, "rerun": [189, 224], "_only_": 189, "sturmian": 189, "subresultants_qq_zz": 189, "suffix": [189, 226], "_pg": 189, "_amv": 189, "rem_z": 189, "premultipli": 189, "rat_clear_denom": 189, "_ignor": 189, "retract": 189, "same_root": 189, "r0": 189, "set_domain": 189, "set_modulu": 189, "termwis": 189, "fglm": 189, "r719": 189, "horner_schem": 189, "equispac": 189, "viet": 189, "itermonomi": 189, "min_degre": 189, "gib": 189, "monomial_kei": 189, "monomial_count": 189, "gradedlexord": 189, "reversedgradedlexord": 189, "clear_cach": 189, "_get_interv": 189, "165": [189, 213, 231], "169": 189, "eval_approx": 189, "evalf_r": 189, "eval_r": 189, "69629": 189, "71318": 189, "805": 189, "3275": 189, "65536": [189, 192, 193], "414645": 189, "131072": 189, "6545": 189, "104755": 189, "2097152": 189, "6634255": 189, "_all_root": 189, "use_cach": 189, "_complexes_index": 189, "_complexes_sort": 189, "_count_root": 189, "_ensure_complexes_init": 189, "_ensure_reals_init": 189, "_eval_is_imaginari": 189, "_get_complex": 189, "_get_complexes_sqf": 189, "currentfactor": 189, "_get_real": 189, "_get_reals_sqf": 189, "_get_root": 189, "_indexed_root": 189, "_new": 189, "_postprocess_root": 189, "_preprocess_root": 189, "heroic": [189, 211], "_real_root": 189, "_reals_index": 189, "_reals_sort": 189, "_refine_complex": 189, "_roots_trivi": 189, "_set_interv": 189, "861136": 189, "86113631159405258": 189, "polyroot": 189, "quintic": [189, 211], "unread": [189, 229], "casu": 189, "irreducibili": 189, "unsolvablefactorerror": [189, 211], "inexpress": 189, "unsolv": [189, 212], "r720": 189, "cubic_funct": 189, "trigonometric_": 189, "28and_hyperbol": 189, "29_method": 189, "specialpoli": 189, "swinnerton_dyer_poli": 189, "swinnerton": 189, "dyer": 189, "symmetric_poli": 189, "random_poli": 189, "gegenbau": [189, 193], "partfrac": [189, 195], "undertermin": 189, "_w": [189, 200], "apart_list": 189, "assemble_partfrac_list": 189, "bunch": 189, "pfd": 189, "r721": 189, "partial_list": 189, "reassembl": 189, "pfda": 189, "r722": 189, "r723": 189, "r724": 189, "r725": 189, "r726": 189, "r727": 189, "r728": 189, "r729": 189, "widen": 190, "ring_seri": 190, "rs_sin": 190, "166666666666667": 190, "puiseux": 190, "rs_co": 190, "rs_tan": 190, "took": [190, 202], "eleg": [190, 192], "rs_exp": 190, "everyon": 190, "blazingli": 190, "promin": 190, "gradual": 190, "rs_": 190, "rs_log": 190, "rs_lambertw": 190, "rs_atan": 190, "arctang": 190, "rs_asin": 190, "_tan1": 190, "rs_cot": 190, "rs_cos_sin": 190, "rs_atanh": 190, "rs_sinh": 190, "rs_cosh": 190, "rs_tanh": 190, "rs_hadamard_exp": 190, "inver": 190, "rs_mul": 190, "rs_squar": 190, "rs_pow": 190, "rs_series_invers": 190, "rs_series_revers": 190, "a_kx_k": 190, "ar_i": 190, "ar_": 190, "ae": 190, "rs_trunc": 190, "rs_nth_root": 190, "160249952256379": 190, "44224957030741": 190, "rs_sub": 190, "rs_diff": 190, "rs_integr": 190, "rs_newton": 190, "rs_compose_add": 190, "r730": 190, "bostan": 190, "flajolet": 190, "schost": 190, "4579": 190, "institut": 190, "nation": 190, "recherch": 190, "informatiqu": 190, "automatiqu": 190, "rs_is_puiseux": 190, "rs_puiseux": 190, "rs_puiseux2": 190, "rs_series_from_list": 190, "concur": 190, "rs_fun": 190, "_tan": 190, "_nth": 190, "_root": 190, "_fun": 190, "mul_xin": 190, "pow_xin": 190, "_raw": 191, "unkown": 191, "eqs_r": 191, "eqs_coeff": 191, "eqs_rh": 191, "critiqu": 192, "wester1999": 192, "systemat": 192, "153": 192, "\u2124": [192, 193, 212, 270], "unm": 192, "driver": [193, 225], "adequ": 193, "emptyprint": 193, "_sympystr": 193, "mathml": 193, "inconveni": 193, "_print_": 193, "expr_class": 193, "hierarchi": [193, 213], "_print_rat": 193, "_print_numb": 193, "_print_atom": 193, "_print_bas": 193, "print_latex": 193, "mylatexprint": 193, "_print_deriv": 193, "print_my_latex": 193, "modop": 193, "subcompon": 193, "outermost": [193, 201, 205, 217], "modopmodewrong": 193, "modopnestedwrong": 193, "modopsettingswrong": 193, "subobject": 193, "infrastructur": [193, 210], "printer_exampl": 193, "set_global_set": 193, "stringpict": 193, "pretty_symbologi": 193, "prettyform": 193, "hline": 193, "vline": 193, "ascii": [193, 255], "_pretti": 193, "use_unicode_sqrt_char": 193, "root_not": 193, "mat_symbol_styl": 193, "prettifi": 193, "bold": 193, "c89codeprint": 193, "print_ccod": 193, "tgamma": 193, "known_functions_c89": 193, "known_functions_c99": 193, "fmax": 193, "fmin": 193, "lgamma": 193, "indent_cod": 193, "functionclass": [193, 232], "cfunction_format": 193, "derefer": 193, "dereferenc": 193, "symbols_to_declar": 193, "not_supported_funct": 193, "code_text": 193, "m_sqrt2": 193, "math_macro": 193, "m_sqrt2l": 193, "cxx": 193, "cxx98codeprint": 193, "print_rcod": 193, "rcode": 193, "known_funct": 193, "_rcode": 193, "rfunction_str": 193, "rfunction_format": 193, "ifels": 193, "tweak": [193, 211], "type_map": 193, "name_mangl": 193, "mangl": 193, "floor1": 193, "floor2": 193, "print_fcod": 193, "_fcode": 193, "conjg": 193, "32768": 193, "7182818284590452d0": 193, "1415926535897932d0": 193, "718281828459045235360287d0": 193, "141592653589793238462643d0": 193, "869604401089358618834491d0": 193, "mygamma": 193, "allow_unknown_funct": 193, "coshintegr": 193, "cosintegr": 193, "expintegralei": 193, "factorialpow": 193, "heavisidetheta": 193, "sinhintegr": 193, "sinintegr": 193, "arccosh": 193, "arccoth": 193, "arcsinh": 193, "arctanh": 193, "dirichleteta": 193, "gegenbauerc": 193, "hypergeometricpfq": 193, "sphericalbesselj": 193, "logintegr": 193, "lucasl": 193, "riemann_xi": 193, "riemannxi": 193, "stieltjesgamma": 193, "sphericalbess": 193, "mcodeprint": 193, "_mcode": 193, "mcode": 193, "maplecodeprint": 193, "_mapl": 193, "maple_cod": 193, "print_maple_cod": 193, "javascriptcodeprint": 193, "_javascript": 193, "js_function_str": 193, "known_fcns_src1": 193, "known_fcns_src2": 193, "conj": 193, "juliacodeprint": 193, "_julia": 193, "harmless": [193, 265], "cosmet": 193, "pw": 193, "existing_julia_fcn": 193, "coshint": 193, "cosint": 193, "sinhint": 193, "sinint": 193, "bincoeff": 193, "logint": 193, "gammaln": 193, "octavecodeprint": 193, "_octav": 193, "recip": [193, 231], "powf": 193, "signum": 193, "rustcodeprint": 193, "_rust_cod": 193, "7_f64": 193, "_aesara": 193, "tensorvari": 193, "floatx": 193, "squeez": 193, "dim_handl": 193, "gtkmathview": 193, "widget": 193, "print_gtk": 193, "libgtkmathview": 193, "start_view": 193, "_lambdacod": 193, "accepted_latex_funct": 193, "parenthesize_sup": 193, "fold_frac_pow": 193, "fold_func_bracket": 193, "fold_short_frac": 193, "inv_trig_styl": 193, "itex": 193, "ln_notat": 193, "long_frac_ratio": 193, "mat_delim": 193, "mat_str": 193, "mul_symbol": 193, "symbol_nam": 193, "gothic_re_im": 193, "decimal_separ": 193, "diff_oper": 193, "smallmatrix": [193, 263], "amsmath": 193, "fracton": 193, "semicolon": 193, "monospac": 193, "mathtt": 193, "mathml2": 193, "mathmlprinterbas": 193, "mathmlcontentprint": 193, "mathmlpresentationprint": 193, "chapter4": 193, "_mathml_cont": 193, "mathml_tag": 193, "chapter3": 193, "_mathml_present": 193, "utf": 193, "mul_symbol_mathml_numb": 193, "xb7": 193, "print_mathml": [193, 268], "mrow": 193, "mpmathprint": 193, "fully_qualified_modul": 193, "print_python": 193, "textual": 193, "reprprint": 193, "_sympyrepr": 193, "reprifi": 193, "sympy_integ": 193, "displayhook": [193, 224], "pprint_nod": 193, "nb2": 193, "print_nod": 193, "asssumpt": 193, "determinisit": 193, "backtrac": 193, "print_tre": 193, "outputbuff": 193, "dvioption": 193, "outputtexfil": 193, "extra_preambl": 193, "latex_set": 193, "postscript": 193, "tex": 193, "eulervm": 193, "sty": 193, "debian": 193, "ubuntu": 193, "unset": [193, 205], "gimp": 193, "evinc": 193, "kdvi": 193, "xdvi": 193, "xdg": [], "system_default_view": [], "gracefulli": [193, 217], "generet": 193, "bytesio": 193, "usepackag": 193, "amsfont": 193, "renewcommand": 193, "popen": 193, "phidd": 193, "bitmap": 193, "split_super_sub": 193, "var_sub1__sup_sub2": 193, "assignmenterror": 193, "bitwiseand": 193, "bitwiseor": 193, "bitwisexor": 193, "precedence_valu": 193, "kroneckerproduct": 193, "negativeinfin": 193, "tensadd": [193, 219], "tensmul": [193, 219], "precedence_funct": 193, "precedence_float": 193, "precedence_fracel": 193, "precedence_integ": 193, "precedence_mul": 193, "precedence_polyel": 193, "precedence_r": 193, "precedence_unevaluatedexpr": 193, "databas": [193, 203], "pretty_use_unicod": 193, "pretty_try_use_unicod": 193, "xstr": 193, "greek_lett": 193, "digit_2txt": 193, "ONE": 193, "seven": 193, "symb_2txt": 193, "parenthesi": [193, 217], "\u2080": 193, "\u2081": 193, "\u2082": 193, "\u2083": 193, "\u2084": 193, "\u2085": 193, "\u2086": 193, "\u2087": 193, "\u2088": 193, "\u2089": 193, "\u2090": 193, "\u1d66": 193, "\u1d6a": 193, "\u2091": 193, "\u1d67": 193, "\u2095": 193, "\u1d62": 193, "\u2096": 193, "\u2097": 193, "\u2098": 193, "\u2099": 193, "\u2092": 193, "\u209a": 193, "\u1d69": 193, "\u1d63": 193, "\u1d68": 193, "\u209b": 193, "\u209c": 193, "\u1d64": 193, "\u1d65": 193, "\u2093": 193, "\u2070": 193, "\u00b9": 193, "\u00b2": 193, "\u00b3": 193, "\u2074": 193, "\u2075": 193, "\u2076": 193, "\u2077": 193, "\u2078": 193, "\u2079": 193, "\u2071": 193, "\u207f": 193, "xobj": 193, "vobj": 193, "hobj": 193, "vf": 193, "\u00bd": 193, "\u2153": 193, "\u00bc": 193, "\u2155": 193, "\u2159": 193, "\u215b": 193, "\u2154": 193, "\u2156": 193, "\u00be": 193, "\u2157": 193, "\u215c": 193, "\u2158": 193, "\u215a": 193, "\u215d": 193, "\u215e": 193, "xsym": 193, "symbologi": 193, "atoms_t": 193, "\u2102": [193, 270], "emptysequ": [193, 199], "exp1": 193, "\u2115": 193, "\u2115\u2080": 193, "\u211d": [193, 270], "symmetricdiffer": [193, 212], "pretty_atom": 193, "atom_nam": 193, "pretty_symbol": 193, "symb_nam": 193, "bold_nam": 193, "stylis": 193, "_print_meijerg": 193, "_print_hyp": 193, "jurjen": 193, "bo": 193, "hate": 193, "spammer": 193, "pietjepuk314": 193, "oc": [193, 243], "oohai": 193, "gedg": 193, "email": 193, "my": [193, 258], "mun": 193, "terminal_str": 193, "baselin": 193, "leftslash": 193, "slash": [193, 224], "paren": 193, "ifascii_nougli": 193, "line_break": 193, "ugli": 193, "terminal_width": 193, "wider": 193, "maxdepth": 193, "labelfunc": 193, "digraph": [193, 231, 268], "rankdir": [193, 268], "_sparse_": 194, "flavor": 194, "________": [194, 213, 231], "x\u2080": 194, "greatli": 194, "numbered_symbol": [194, 205, 209, 231], "postprocessor": [194, 205], "reduced_expr": [194, 205], "formalpowerseri": 195, "coeff_bel": 195, "formalpowerseriescompos": 195, "r731": 195, "comtet": 195, "loui": 195, "reidel": 195, "1974": 195, "720": [195, 209, 231], "formalpowerseriesinvers": 195, "r732": 195, "upto": [195, 200, 209], "formalpowerseriesproduct": 195, "rational_algorithm": 195, "compute_fp": 195, "hyper_algorithm": 195, "omposit": 195, "bell_seq": 195, "finiteformalpowerseri": 195, "rational_independ": 195, "ra": 195, "admiss": [195, 198], "r733": 195, "r734": 195, "simpled": 195, "exp_r": 195, "explik": 195, "hyper_r": 195, "rsolve_hypergeometr": 195, "r735": 195, "r736": 195, "solve_d": 195, "fourierseri": 196, "scalex": 196, "shiftx": 196, "sigma_approxim": 196, "gibb": 196, "bigl": 196, "bigr": 196, "lanczo": 196, "r737": 196, "gibbs_phenomenon": 196, "r738": 196, "sawtooth": 196, "bn": 196, "r739": 196, "limitseq": 198, "difference_delta": 198, "r740": 198, "differencedelta": 198, "limit_seq": [198, 200], "safeguard": 198, "r741": 198, "kauer": 198, "seqper": 199, "seqformula": 199, "seqbas": 199, "coeff_mul": 199, "find_linear_recurr": 199, "gfvar": 199, "seqadd": 199, "seqmul": 199, "_mul": 199, "recursiveseq": 199, "fib": 199, "invok": [200, 224, 225], "workhors": 200, "succ": [200, 213], "asymp": 200, "exposit": 200, "gloss": 200, "wsym": 200, "test_rewrite1": 200, "build_expression_tre": 200, "mrv_leadterm": 200, "e0": 200, "calculate_seri": 200, "limitinf": 200, "leadsimp": 200, "constantli": 200, "subsset": 200, "mrv_max1": 200, "mrv_max3": 200, "expsf": 200, "expsg": 200, "expsboth": 200, "o2": 200, "do_sub": 200, "r742": 200, "7048138294": 200, "7182818285": 200, "6349839002": 200, "6449340668": 200, "shank": 200, "6881721793": 200, "6931396564": 200, "6931471806": 200, "6931471805599453094172321215": 200, "r743": 200, "residue_theorem": 200, "neighborhood": 201, "rim": 201, "affirm": 201, "infimum": 201, "is_clos": 201, "closed": 201, "is_disjoint": 201, "r744": 201, "disjoint_set": 201, "is_open": 201, "is_proper_subset": 201, "is_proper_superset": 201, "left_open": 201, "is_superset": 201, "isdisjoint": 201, "issubset": 201, "issuperset": 201, "fancyset": 201, "lebesgu": 201, "r745": 201, "power_set": 201, "symmetric_differ": 201, "r746": 201, "right_open": 201, "mpi": 201, "r747": 201, "interval_": 201, "as_rel": 201, "is_left_unbound": 201, "is_right_unbound": 201, "r748": 201, "r749": 201, "union_": 201, "28set_theori": 201, "r750": 201, "intersection_": 201, "coin": [201, 213], "r751": 201, "cartesian_product": 201, "is_iter": 201, "r752": 201, "complementset": 201, "r753": 201, "disjoint_union": 201, "r754": 201, "empty_set": 201, "r755": 201, "universal_set": 201, "flambda": 201, "square_iter": 201, "base_set": 201, "cartesiancomplexregion": 201, "polarcomplexregion": 201, "unit_disk": 201, "upper_half_unit_disk": 201, "a_interv": 201, "b_interv": 201, "from_real": 201, "pset": 201, "rset": 201, "thetaset": 201, "upper_half_plan": 201, "normalize_theta_set": 201, "r756": 201, "r757": 201, "axiom_of_power_set": 201, "varnoth": 201, "sin_sol": 201, "r758": 201, "element_": 201, "tr0": 202, "tr1": 202, "tr2": 202, "tr2i": 202, "tr3": 202, "tr4": 202, "tr5": 202, "tr6": 202, "tr7": 202, "tr8": 202, "tr9": 202, "tr10": 202, "tr10i": 202, "tr11": 202, "tr12": 202, "tr12i": 202, "tr13": 202, "trmorri": 202, "tr14": 202, "tr15": 202, "tr16": 202, "tr22": 202, "tr111": 202, "ctr1": 202, "ctr4": 202, "rl1": 202, "rl2": 202, "deem": 202, "932": 202, "016": 202, "serendipit": 202, "dead": 202, "newa": 202, "lucki": 202, "sqt": 202, "_tr56": 202, "un": [202, 203], "r759": 202, "morri": 202, "27s_law": 202, "trpower": 202, "r760": 202, "list_of_trigonometric_ident": 202, "reduction_formula": 202, "ctr2": 202, "ctr3": 202, "r761": 202, "657": 202, "2478": 202, "dimitar": 202, "vlahovski": 202, "technolog": 202, "xiuqin": 202, "zhong": 202, "zhenb": 202, "zeng": 202, "1169": 202, "1177": 202, "sosmath": 202, "trig5": 202, "symplifi": [203, 205], "roach1996": 203, "roach1997": 203, "p_q": 203, "reachabl": [203, 213], "f_q": 203, "undo": [203, 269], "whenc": 203, "game": 203, "twofold": 203, "incongru": 203, "wlog": 203, "alpha_r": 203, "beta_r": 203, "blindli": 203, "messi": 203, "k_u": 203, "l_v": 203, "k_j": 203, "c_w": 203, "r_j": 203, "l_u": 203, "res_": 203, "delta_i": 203, "add_formula": 203, "addb": 203, "sum_0": 203, "test_hyperexpand": 203, "test_formula": 203, "typo": 203, "suboptim": 203, "imath": 203, "b1prime": 203, "vital": [203, 213], "308": 203, "nthroot": 204, "kroneckersimp": 204, "besselsimp": 204, "hypersimilar": 204, "epath": 204, "hongguang": [204, 249], "fu": [204, 205, 249], "unmodifi": 205, "my_measur": 205, "boolian": 205, "max_len": 205, "surd": 205, "strigonometr": 205, "399": 205, "rational_convers": 205, "base10": 205, "6004799503160655": 205, "nfloat": 205, "eq_x": 205, "max_term": 205, "polish": 205, "expand_power_bas": 205, "rcollect": 205, "analyz": [205, 218], "r762": 205, "pearc": 205, "163": 205, "6984": 205, "trigsimp_groebn": 205, "bb1": 205, "be1": 205, "bb2": 205, "be2": 205, "bei": 205, "max_it": 205, "unrad": [205, 211], "r763": 205, "ibm": 205, "fagin": 205, "symb85": 205, "r764": 205, "cybertest": 205, "opt_sub": 205, "as_unevaluated_bas": 205, "hyperegeometr": 205, "epathtool": 205, "ebnf": 205, "za": [205, 213], "xml": 205, "xpath": 205, "hasattr": [205, 227], "diophantu": 206, "mathematician": [206, 212], "citi": 206, "alexandria": 206, "father": 206, "hi": 206, "arithmetica": 206, "a_1x_1": 206, "a_2x_2": 206, "a_nx_n": 206, "bxy": 206, "cy": 206, "dxy": 206, "eyz": 206, "fzx": 206, "pythagorean": 206, "3y": 206, "9369318": 206, "920": 206, "5y": 206, "BY": 206, "t4": 206, "t5": 206, "providean": 206, "eqyptian": 206, "thilinaatsympi": 206, "andreescu": 206, "titu": 206, "andrica": 206, "dorin": 206, "cucurezeanu": 206, "ion": 206, "diophantineequ": 206, "alpertron": 206, "20160323033111": 206, "jpr2718": 206, "ax2p": 206, "permute_sign": [206, 231], "signed_permut": [206, 231], "_dict": 206, "r765": 206, "r766": 206, "pell": 206, "lmm": 206, "r767": 206, "393": 206, "13y": 206, "986": 206, "49299": 206, "1570": 206, "robertson": 206, "20160323033128": 206, "r768": 206, "nitaj": 206, "r769": 206, "numbertheori": 206, "r770": 206, "r771": 206, "676": 206, "884": 206, "fxz": 206, "3xy": 206, "r772": 206, "fxy": 206, "gyz": 206, "hxz": 206, "r773": 206, "cremona": 206, "rusin": 206, "2x_": 206, "m4": 206, "general_sum_of_squar": 206, "8m": 206, "r774": 206, "2345": 206, "proofwiki": 206, "integer_as_sum_of_three_squar": 206, "general_sum_of_even_pow": 206, "1729": 206, "stopiter": 206, "r775": 206, "44542": 206, "207": 206, "schorn": 206, "3456": 206, "1294585930293": 206, "2161": 206, "1137796": 206, "r776": 206, "evenli": 206, "var_t": 206, "r777": 206, "ur": 206, "dv": 206, "vr": 206, "r778": 206, "r779": 206, "nigel": 206, "y_0": [206, 209], "4x": [206, 212, 258], "5x": 206, "r780": 206, "r781": 206, "eprint": 206, "nottingham": 206, "uk": 206, "kvxefz87": 206, "r782": 206, "cuhk": 206, "hk": 206, "wkshum": 206, "404": 206, "r783": 206, "mordel": 206, "r784": 206, "r785": 206, "r786": 206, "r787": 206, "legrang": 206, "csusm": 206, "aitken_html": 206, "symbols_seq": 206, "dict_iter": 206, "r788": 206, "r789": 206, "inhomogen": [206, 209, 211], "r790": 206, "thue": 206, "riccati": 207, "pde": [207, 209], "deutil": [207, 209, 210], "linear_eq_to_matrix": [207, 209], "transolv": 207, "solve_rational_inequ": 208, "solve_poly_inequ": 208, "reduce_rational_inequ": 208, "reduce_abs_inequ": 208, "solve_univariate_inequ": [208, 212], "solvifi": [208, 212], "autodetect": [209, 210], "ode_ord": [209, 210, 211], "best_hint": 209, "all_integr": [209, 210], "_integr": [209, 210], "unevaluat": 209, "test_od": 209, "ode_": 209, "hintnam": [209, 210], "classify_sysod": 209, "ode_hintnam": 209, "tough": 209, "nth_linear_homogeneous_constant_coeff_integr": 209, "nth_linear": 209, "indep": 209, "indep_div_dep": 209, "undetermined_coeffici": 209, "_best": 209, "nth_algebraic_integr": 209, "separable_integr": 209, "1st_exact_integr": 209, "1st_linear_integr": 209, "bernoulli_integr": 209, "1st_homogeneous_coeff_subs_indep_div_dep_integr": 209, "1st_homogeneous_coeff_subs_dep_div_indep_integr": 209, "nth_linear_constant_coeff_variation_of_parameters_integr": 209, "solve_for_func": [209, 210], "homogeneouscoeffsubsdepdivindep": 209, "homogeneouscoeffsubsindepdivdep": 209, "varepsilon": 209, "genform": [209, 210], "starrett": 209, "symbolnam": 209, "startnumb": 209, "endnumb": 209, "renumb": 209, "absorpt": 209, "assist": 209, "2nd_hypergeometric_integr": 209, "almost_linear_integr": 209, "linear_coefficients_integr": 209, "separable_reduced_integr": 209, "nth_linear_euler_eq_nonhomogeneous_variation_of_parameters_integr": 209, "liouville_integr": 209, "2nd_nonlinear_autonomous_conserv": 209, "2nd_nonlinear_autonomous_conserved_integr": 209, "newconst": 209, "ode_sol_simpl": 209, "trysolv": 209, "sola": 209, "solb": 209, "listofsolut": 209, "ode_problem": 209, "firstexact": 209, "exact_differential_equ": 209, "tenenbaum": 209, "dover": 209, "1963": 209, "homogeneouscoeffbest": 209, "ode_1st_homogeneous_coeff_best_integr": 209, "homogeneous_differential_equ": 209, "firstlinear": 209, "linear_differential_equ": 209, "first_order_equ": 209, "rationalriccati": 209, "atleast": 209, "riccati_equ": 209, "thieu": 209, "vo": 209, "www3": [209, 238], "risc_5387": 209, "phdthesisthieu": 209, "secondlinearairi": 209, "secondlinearbessel": 209, "math24": 209, "bernoulli_differential_equ": 209, "goldstein": 209, "braun": 209, "maplesoft": 209, "aspx": 209, "odeadvisor": 209, "riccatispeci": 209, "__________________": 209, "eqworld": 209, "ipmnet": 209, "ru": 209, "ode0106": 209, "ode0123": 209, "nthlinearconstantcoeffhomogen": 209, "nth_linear_constant_coeff_homogeneous_integr": 209, "nonhomogeneous_equation_with_constant_coeffici": 209, "nthlinearconstantcoeffundeterminedcoeffici": 209, "method_of_undetermined_coeffici": 209, "221": 209, "nthlinearconstantcoeffvariationofparamet": 209, "cramer": 209, "variation_of_paramet": 209, "planetmath": 209, "variationofparamet": 209, "nthlineareulereqhomogen": 209, "equidimension": 209, "nth_linear_euler_eq_homogeneous_integr": 209, "sollist": 209, "93euler_equ": 209, "bender": 209, "orszag": 209, "scientist": 209, "nthlineareulereqnonhomogeneousvariationofparamet": 209, "nthlineareulereqnonhomogeneousundeterminedcoeffici": 209, "nthalgebra": 209, "nthorderreduc": 209, "caught": 209, "fault": 209, "almostlinear": 209, "first_linear": 209, "joel": 209, "mose": 209, "stormi": 209, "decad": 209, "august": [209, 228], "558": 209, "linearcoeffici": 209, "separablereduc": 209, "liegroup": 209, "secondhypergeometr": 209, "2f1": 209, "1f1": 209, "0f1": 209, "liouvillian": 209, "pfq": 209, "chan": 209, "cheb": 209, "terrab": 209, "ode_1st_power_seri": 209, "travi": 209, "walker": 209, "ode_2nd_power_series_ordinari": 209, "lamar": 209, "seriessolut": 209, "simmon": 209, "176": 209, "ode_2nd_power_series_regular": 209, "lie_heuristic_abaco1_simpl": 209, "duart": 209, "da": 209, "mota": 209, "lie_heuristic_abaco1_product": 209, "roch": 209, "lie_heuristic_bivari": 209, "329": 209, "lie_heuristic_chi": 209, "lie_heuristic_abaco2_similar": 209, "lie_heuristic_function_sum": 209, "lie_heuristic_abaco2_unique_unknown": 209, "lie_heuristic_abaco2_unique_gener": 209, "lie_heuristic_linear": 209, "gy": 209, "bh": 209, "impract": 209, "val_inf": 209, "ybar": 209, "numa": 209, "dena": 209, "numi": 209, "deni": 209, "sol1": 209, "sol2": 209, "part_sol": 209, "haaheim": 209, "gensol": 209, "_linear_2eq_order1_type6": 209, "_linear_2eq_order1_type7": 209, "fgp": 209, "ag": 209, "bg": 209, "linear_ode_to_matrix": 209, "odeordererror": 209, "odenonlinearerror": 209, "eqs_mat": 209, "r791": 209, "matrix_differential_equ": 209, "canonical_od": 209, "canonical_eq": 209, "canonical_system": 209, "linodesolve_typ": 209, "type1": 209, "type2": 209, "type3": 209, "type4": 209, "type5": 209, "type6": 209, "type_of_equ": 209, "a_t": 209, "a_non_commut": 209, "matrix_exp_jordan_form": 209, "expj": 209, "matrix_exp": 209, "defect": 209, "p_invers": 209, "r792": 209, "defective_matrix": 209, "r793": 209, "r794": 209, "jordan_normal_form": 209, "comupt": 209, "r795": 209, "r796": 209, "matrix_exponenti": 209, "follw": 209, "antiderv": 209, "subscheck": 209, "system_info": 209, "sol_vector": 209, "sol_vector_evalu": 209, "_nonlinear_2eq_order1_type1": 209, "_nonlinear_2eq_order1_type2": 209, "_nonlinear_2eq_order1_type3": 209, "autonom": 209, "_nonlinear_2eq_order1_type4": 209, "_nonlinear_2eq_order1_type5": 209, "clairaut": 209, "envelop": 209, "_nonlinear_3eq_order1_type1": 209, "enspac": [209, 212], "sysod": 209, "sode0401": 209, "_nonlinear_3eq_order1_type2": 209, "sode0402": 209, "_nonlinear_3eq_order1_type3": 209, "sode0404": 209, "_nonlinear_3eq_order1_type4": 209, "sode0405": 209, "_nonlinear_3eq_order1_type5": 209, "sode0406": 209, "_handle_integr": 209, "gather": 209, "unhind": 209, "wolphramalpha": 209, "detool": 209, "hint_integr": 209, "alphanumer": 209, "hinder": 209, "matching_hint": 209, "matchdict": 209, "1st_homogeneous_coeff": 209, "your_hint": 209, "xfail": [209, 222, 224], "fun": [210, 262], "uxt": 210, "uxi": 210, "solvefun": 210, "test_pd": 210, "pde_hintnam": 210, "ux": 210, "allhint": 210, "1st_linear_constant_coeff_homogen": 210, "_preprocess": 210, "inabl": 210, "_xi_1": 210, "viktor": 210, "grigoryan": 210, "124a": 210, "substack": 210, "1st_linear_constant_coeff_integr": 210, "du": 210, "inspir": [210, 265], "pde_hint": 210, "checksol": 211, "ect": 211, "attain": 242, "star": [], "052": 211, "cov": 211, "pval": 211, "xval": 211, "rsolv": 211, "solve_linear": 211, "solve_linear_system": 211, "overdetermin": [211, 212], "msymbol": 211, "degener": [211, 212], "solve_linear_system_lu": 211, "solve_undetermined_coeff": 211, "equ": 211, "obligatori": 211, "19287309935246": 211, "27844411169911": 211, "73908513321516064165531208767387340401341175890076": 211, "steep": 211, "39267e": 211, "1684e": 211, "588469032184": 211, "315": 211, "730061685774": 211, "46792545969349058": 211, "inconclus": 211, "init": 211, "dissimilar": 211, "v_0": 211, "n_m": 211, "v_m": 211, "rsolve_poli": 211, "rsolve_ratio": 211, "r797": 211, "levelt": 211, "290": [211, 240], "296": 211, "r798": 211, "r799": 211, "revis": 211, "r800": 211, "289": 211, "alembertian": 211, "r801": 211, "r802": 211, "polysi": 211, "solve_triangul": 211, "kalkbrenn": 211, "patrizia": 211, "teo": 211, "aaecc": 211, "conditionset": [212, 213, 270], "productset": 212, "imageset": [212, 270], "complexregion": 212, "uncount": 212, "bizarr": 212, "her": 212, "sol_f": 212, "solveset_r": 212, "solveset_complex": 212, "methodologi": [212, 262], "_solve_real_trig": 212, "invert_r": 212, "invert_complex": 212, "_solve_rad": 212, "_solve_ab": 212, "_solve_as_r": 212, "_solve_as_poly_r": 212, "_solve_as_poly_complex": 212, "_solve_as_poli": 212, "gsoc": 212, "2014": [212, 213], "iamit": 212, "2948": 212, "6659": 212, "7523": 212, "sibx0afl3q": 212, "9696": 212, "27s_theorem": 212, "inftyright": 212, "nright": 212, "0right": 212, "domain_check": 212, "3z": 212, "9z": 212, "nonlinearerror": 212, "4z": 212, "cccc": 212, "eq3": 212, "eq4": 212, "391": 212, "_solve_system": 212, "_solve_using_known_valu": 212, "_transolv": 212, "_tsolv": 212, "tsolv": 212, "outright": 212, "tractabl": 212, "interf": 212, "add_typ": 212, "_is_exponenti": 212, "new_eq": 212, "_solve_exponenti": 212, "_is_class": 212, "_solve_class": 212, "_solve_expo": 212, "9x": 212, "solve_expo": 212, "log_b": 212, "_solve_logarithm": 212, "solve_log": 212, "_is_logarithm": 212, "prebuilt": 213, "finiterv": 213, "varianc": 213, "dice": 213, "continuousrv": 213, "continuousdistributionhandmad": 213, "dist": 213, "discreterv": 213, "discretedistributionhandmad": 213, "pmf": 213, "finitedistributionhandmad": 213, "discreteuniform": 213, "randomsymbol": 213, "r803": 213, "discrete_uniform_distribut": 213, "r804": 213, "discreteuniformdistribut": 213, "d6": 213, "diedistribut": 213, "toss": 213, "r805": 213, "bernoulli_distribut": 213, "r806": 213, "bernoullidistribut": 213, "numeb": 213, "unfair": 213, "r807": 213, "coin_flip": 213, "binomialdistribut": 213, "r808": 213, "binomial_distribut": 213, "r809": 213, "betabinomi": 213, "r810": 213, "r811": 213, "betabinomialdistribut": 213, "popul": 213, "marbl": 213, "r812": 213, "hypergeometric_distribut": 213, "r813": 213, "hypergeometricdistribut": 213, "700000000000000": 213, "r814": 213, "rademacher_distribut": 213, "r815": 213, "geometric_distribut": 213, "r816": 213, "geometricdistribut": 213, "r817": 213, "hermite_distribut": 213, "poisson": 213, "r818": 213, "poisson_distribut": 213, "r819": 213, "poissondistribut": 213, "r820": 213, "logarithmic_distribut": 213, "r821": 213, "logarithmicdistribut": 213, "negativebinomi": 213, "r822": 213, "negative_binomial_distribut": 213, "r823": 213, "negativebinomialdistribut": 213, "skellam": 213, "mu1": 213, "mu2": 213, "mu_1": 213, "mu_2": 213, "i_k": 213, "r824": 213, "skellam_distribut": 213, "yulesimon": 213, "yule": 213, "simon": 213, "r825": 213, "93simon_distribut": 213, "8100": 213, "r826": 213, "zeta_distribut": 213, "cdf": 213, "r827": 213, "arcsine_distribut": 213, "benini": 213, "r828": 213, "benini_distribut": 213, "r829": 213, "v8": 213, "beninidistribut": 213, "r830": 213, "beta_distribut": 213, "r831": 213, "betadistribut": 213, "betanoncentr": 213, "noncentr": 213, "r832": 213, "noncentral_beta_distribut": 213, "r833": 213, "noncentralbetadistribut": 213, "betaprim": 213, "r834": 213, "beta_prime_distribut": 213, "r835": 213, "betaprimedistribut": 213, "boundedpareto": 213, "pareto": 213, "r836": 213, "pareto_distribut": 213, "bounded_pareto_distribut": 213, "r837": 213, "cauchy_distribut": 213, "r838": 213, "cauchydistribut": 213, "r839": 213, "chi_distribut": 213, "r840": 213, "chidistribut": 213, "chinoncentr": 213, "r841": 213, "noncentral_chi_distribut": 213, "chisquar": 213, "r842": 213, "chi_squared_distribut": 213, "r843": 213, "squareddistribut": 213, "dagum": 213, "r844": 213, "dagum_distribut": 213, "erlang": 213, "r845": 213, "erlang_distribut": 213, "r846": 213, "erlangdistribut": 213, "exgaussian": 213, "emg": 213, "r847": 213, "exponentially_modified_gaussian_distribut": 213, "quantil": 213, "r848": 213, "exponential_distribut": 213, "r849": 213, "exponentialdistribut": 213, "fdistribut": 213, "______________________________": 213, "r850": 213, "r851": 213, "fisherz": 213, "fisher": 213, "2d_1": 213, "d_1z": 213, "d_1e": 213, "r852": 213, "27s_z": 213, "r853": 213, "fishersz": 213, "frechet": 213, "r854": 213, "a9chet_distribut": 213, "r855": 213, "gamma_distribut": 213, "r856": 213, "gammadistribut": 213, "gammainvers": 213, "r857": 213, "gompertz": 213, "r858": 213, "gompertz_distribut": 213, "gumbel": 213, "dfrac": 213, "r859": 213, "gumbeldistribut": 213, "r860": 213, "gumbel_distribut": 213, "r861": 213, "mathwav": 213, "easyfit": 213, "gumbel_max": 213, "r862": 213, "gumbel_min": 213, "kumaraswami": 213, "r863": 213, "kumaraswamy_distribut": 213, "r864": 213, "laplace_distribut": 213, "r865": 213, "laplacedistribut": 213, "r866": 213, "a9vy_distribut": 213, "r867": 213, "levydistribut": 213, "logist": 213, "r868": 213, "logistic_distribut": 213, "r869": 213, "logisticdistribut": 213, "loglogist": 213, "unimod": 213, "r870": 213, "lognorm": 213, "r871": 213, "r872": 213, "lognormaldistribut": 213, "lomax": 213, "r873": 213, "lomax_distribut": 213, "maxwel": 213, "r874": 213, "maxwell_distribut": 213, "r875": 213, "maxwelldistribut": 213, "moyal": 213, "r876": 213, "moyaldistribut": 213, "r877": 213, "rice": 213, "dobelman": 213, "textfil": 213, "distributionshandbook": 213, "nakagami": 213, "r878": 213, "nakagami_distribut": 213, "marginal_distribut": 213, "r879": 213, "normal_distribut": 213, "r880": 213, "normaldistributionfunct": 213, "xm": 213, "x_m": 213, "r881": 213, "r882": 213, "paretodistribut": 213, "powerfunct": 213, "paramat": 213, "r883": 213, "power_func": 213, "quadraticu": 213, "r884": 213, "quadratic_distribut": 213, "raisedcosin": 213, "r885": 213, "raised_cosine_distribut": 213, "r886": 213, "rayleigh_distribut": 213, "r887": 213, "rayleighdistribut": 213, "r888": 213, "reciprocal_distribut": 213, "studentt": 213, "r889": 213, "student_t": 213, "r890": 213, "studentst": 213, "shiftedgompertz": 213, "r891": 213, "shifted_gompertz_distribut": 213, "r892": 213, "trapezoidal_distribut": 213, "r893": 213, "triangular_distribut": 213, "r894": 213, "triangulardistribut": 213, "r895": 213, "uniform_distribution_": 213, "28continu": 213, "r896": 213, "uniformdistribut": 213, "uniformsum": 213, "irwin": 213, "r897": 213, "uniform_sum_distribut": 213, "r898": 213, "uniformsumdistribut": 213, "vonmis": 213, "mise": 213, "i_0": 213, "r899": 213, "von_mises_distribut": 213, "r900": 213, "vonmisesdistribut": 213, "wald": 213, "gaussianinvers": 213, "r901": 213, "inverse_gaussian_distribut": 213, "r902": 213, "inversegaussiandistribut": 213, "weibul": 213, "geq0": 213, "r903": 213, "weibull_distribut": 213, "r904": 213, "weibulldistribut": 213, "wignersemicircl": 213, "semicircl": 213, "frac2": 213, "r905": 213, "wigner_semicircle_distribut": 213, "r906": 213, "wignerssemicirclelaw": 213, "jointrv": 213, "_set": 213, "multivariatenorm": 213, "noninvert": 213, "ob": 213, "r907": 213, "multivariate_normal_distribut": 213, "multivariatelaplac": 213, "r908": 213, "multivariate_laplace_distribut": 213, "generalizedmultivariateloggamma": 213, "joint_rv_typ": 213, "gd": 213, "y_3": 213, "gmvlg": 213, "generalizedmultivariateloggammaomega": 213, "r909": 213, "generalized_multivariate_log": 213, "r910": 213, "234137346_on_a_multivariate_log": 213, "gamma_distribution_and_the_use_of_the_distribution_in_the_bayesian_analysi": 213, "correl": 213, "gmvlgo": 213, "r911": 213, "r912": 213, "r913": 213, "multinomial_distribut": 213, "r914": 213, "multinomialdistribut": 213, "multivariatebeta": 213, "r915": 213, "dirichlet_distribut": 213, "r916": 213, "dirichletdistribut": 213, "multivariateewen": 213, "ewen": 213, "r917": 213, "27s_sampling_formula": 213, "r918": 213, "rutger": 213, "hcrane": 213, "sts529": 213, "multivariatet": 213, "negativemultinomi": 213, "n_c": 213, "r919": 213, "negative_multinomial_distribut": 213, "r920": 213, "normalgamma": 213, "r921": 213, "discretemarkovchain": 213, "state_spac": 213, "trans_prob": 213, "markov": 213, "characteris": 213, "transitionmatrixof": 213, "transition_prob": 213, "sunni": 213, "cloudi": 213, "raini": 213, "randomindexedsymbol": 213, "409": 213, "6963328": 213, "3096": 213, "query_gt": 213, "64705": 213, "r922": 213, "markov_chain": 213, "time_markov_chain": 213, "r923": 213, "dartmouth": 213, "teaching_aid": 213, "books_articl": 213, "probability_book": 213, "chapter11": 213, "canonical_form": 213, "transient": 213, "p_new": 213, "new_matrix": 213, "communication_class": 213, "r924": 213, "onlinelibrari": 213, "wilei": 213, "1002": 213, "9780470316887": 213, "app1": 213, "r925": 213, "columbia": 213, "ww2040": 213, "6711f12": 213, "lect1023big": 213, "is_recurr": 213, "tarjan": [213, 231], "r926": 213, "4701sum07": 213, "4701": 213, "mcii": 213, "r927": 213, "ceca": 213, "clemson": 213, "shierd": 213, "shier": 213, "r928": 213, "ujcont": 213, "uj": 213, "7506": 213, "content1": 213, "r929": 213, "econ": 213, "dtmc": 213, "reccur": 213, "r930": 213, "absorbing_markov_chain": 213, "r931": 213, "brandei": 213, "igusa": 213, "math56as08": 213, "math56a_s08_notes015": 213, "fixed_row_vector": 213, "stationary_distribut": 213, "fundamental_matrix": 213, "r932": 213, "lip": 213, "limiting_distribut": 213, "condition_set": 213, "wm": 213, "r933": 213, "probabilitycours": 213, "11_2_6_stationary_and_limiting_distribut": 213, "r934": 213, "galton": 213, "uchicago": 213, "yibi": 213, "stat317": 213, "lecture4_6up": 213, "continuousmarkovchain": 213, "gen_mat": 213, "generator_matrix": 213, "45279": 213, "58602": 213, "37933": 213, "34211": 213, "7143": 213, "4002723175": 213, "6832579186": 213, "r935": 213, "r936": 213, "biu": 213, "il": 213, "amirgi": 213, "ctmcnote": 213, "bernoulliprocess": 213, "processs": 213, "joint_distribut": 213, "jointdistributionhandmad": 213, "r937": 213, "bernoulli_process": 213, "r938": 213, "mathc": 213, "clarku": 213, "djoyc": 213, "ma217": 213, "given_condit": 213, "poissonprocess": 213, "648": 213, "r939": 213, "11_0_0_intro": 213, "r940": 213, "poisson_point_process": 213, "wiener": 213, "brownian": 213, "scottish": 213, "botanist": 213, "r941": 213, "11_4_0_brownian_motion_wiener_process": 213, "r942": 213, "wiener_process": 213, "gammaprocess": 213, "jump": [213, 269], "472": 213, "r943": 213, "gamma_process": 213, "matrixgamma": 213, "scale_matrix": 213, "r944": 213, "matrix_gamma_distribut": 213, "wishart": 213, "r945": 213, "wishart_distribut": 213, "matrixnorm": 213, "location_matrix": 213, "scale_matrix_1": 213, "scale_matrix_2": 213, "r946": 213, "matrix_normal_distribut": 213, "compound_rv": 213, "compounddistribut": 213, "crv_type": 213, "r947": 213, "compound_probability_distribut": 213, "numsampl": 213, "evaluate_integr": 213, "r948": 213, "entropy_": 213, "information_theori": 213, "r949": 213, "crmarsh": 213, "charles_marsh_continuous_entropi": 213, "r950": 213, "uconn": 213, "kconrad": 213, "blurb": 213, "entropypost": 213, "arg1": 213, "arg2": 213, "cexpr": 213, "coskew": 213, "sigma_": 213, "r951": 213, "r952": 213, "probability_distribut": 213, "randomst": 213, "die_rol": 213, "samp": 213, "pspace": 213, "samp_list": 213, "sam": 213, "42519758": 213, "40207856": 213, "94991743": 213, "85819627": 213, "83403519": 213, "9412172": 213, "85768055": 213, "38954165": 213, "11163337": 213, "3176591": 213, "79115232": 213, "63232916": 213, "01747268": 213, "96716083": 213, "sampling_p": 213, "sampling_": 213, "factorial_mo": 213, "r953": 213, "r954": 213, "factorialmo": 213, "kurtosi": 213, "outlier": 213, "sigma_x": 213, "r955": 213, "r956": 213, "asymmetri": 213, "pearson": 213, "sampling_dens": 213, "centralmo": 213, "cmoment": 213, "expectationmatrix": 213, "randommatrixsymbol": 213, "n11": 213, "n12": 213, "n21": 213, "n22": 213, "variancematrix": 213, "crosscovariancematrix": 213, "randomdomain": 213, "probabilist": 213, "singledomain": 213, "singlepspac": 213, "productdomain": 213, "productpspac": 213, "conditionaldomain": 213, "frv": 213, "finitedomain": 213, "finitepspac": 213, "crv": 213, "continuousdomain": 213, "continuouspspac": 213, "diepspac": 213, "singlefinitepspac": 213, "normalpspac": 213, "singlecontinuouspspac": 213, "frv_type": 213, "randomvari": 213, "tactic": 213, "random_symbol": 213, "rs_swap": 213, "pspace1": 213, "pspace2": 213, "immutabledensendimarrai": 214, "tomatrix": 214, "j_m": 214, "i_a": 214, "i_b": 214, "sum_k": 214, "tensorcontract": [214, 215], "tensordiagon": [214, 215], "derive_by_arrai": 214, "sum_m": 214, "immutablesparsendimarrai": 214, "mutabledensendimarrai": 214, "mutablesparsendimarrai": 214, "index_order_old": 214, "index_order_new": 214, "cab": 214, "contraction_ax": 214, "diagonal_ax": 214, "arraycontract": 215, "arraydiagon": 215, "arraysymbol": 215, "convert_indexed_to_arrai": 215, "arrayadd": 215, "convert_matrix_to_arrai": 215, "convert_array_to_matrix": 215, "expr_tr": 215, "array_der": 215, "index_method": 217, "get_contraction_structur": [217, 218], "deepest": 217, "nested_contract": 217, "get_indic": [217, 218, 219, 220], "indexconformanceexcept": 217, "______": 218, "stem": 218, "dim1": 218, "dim2": 218, "qwerti": 218, "a_ij": 218, "b_ij": 218, "syntact": 218, "a_real": 218, "c_inherit": 218, "c_explicit": 218, "unrol": 218, "tensorindextyp": [219, 220], "eps_dim": 219, "metric_nam": 219, "su": 219, "lorentz": 219, "tensor_index_typ": 219, "is_up": 219, "tensor_inde_typ": 219, "typ": 219, "tensorhead": [219, 220], "index_typ": 219, "tensorsymmetri": 219, "monoterm": 219, "_tensormanag": 219, "set_comm": 219, "asym2": 219, "fully_symmetr": 219, "tensori": [219, 220], "e_z": 219, "no_symmetri": 219, "p_x": 219, "p_y": 219, "p_z": 219, "ipos1": 219, "ipos2": 219, "icomp1": 219, "icomp2": 219, "nameless": 219, "replacement_dict": 219, "free_arg": 219, "addend": 219, "canon_bp": 219, "contract_metr": 219, "contract_al": 219, "ipo": 219, "icomp": 219, "nonrep": 219, "dum": 219, "ext_rank": 219, "is_canon_bp": 219, "m0": 219, "get_free_indic": [219, 220], "perm2tensor": 219, "tid": 219, "sorted_compon": 219, "riemann_cyclic_replac": 219, "riemann_cycl": 219, "cadabra": 219, "multiterm": 219, "bianchi": 219, "sym2": 219, "direct_product": 219, "monotorem": 219, "tableaux": 219, "tensortyp": 219, "repetit": [219, 231], "tensormanag": 219, "comm_i2symbol": 219, "comm_symbols2i": 219, "get_comm": 219, "gcomm": 219, "ghcomm": 219, "toper": 220, "partialderiv": 220, "valenc": 220, "uncontract": 220, "compa": 220, "compb": 220, "derivand": 220, "xpass": [222, 224], "nocache_fail": 222, "expectedexcept": 222, "assertionerror": 222, "exceptioninfo": 222, "abort": 222, "9999": 222, "warningcl": [222, 229], "test_stacklevel": 222, "randtest": 223, "portabl": [224, 225], "pytestreport": 224, "force_color": 224, "readlin": 224, "sympydoctestfind": 224, "doctestpars": 224, "exclude_empti": 224, "sympydoctestrunn": 224, "checker": 224, "optionflag": 224, "5140": 224, "doctestrunn": 224, "clear_glob": 224, "writer": 224, "garbag": 224, "check_output": 224, "report_": 224, "sympyoutputcheck": 224, "outputcheck": 224, "stdlib": 224, "testrunn": 224, "sympytestresult": 224, "convert_to_native_path": 224, "lst": 224, "blacklist": 224, "get_sympy_dir": 224, "raise_on_deprec": 224, "deprecationwarn": [224, 229], "run_all_test": 224, "test_arg": 224, "test_kwarg": 224, "doctest_arg": 224, "doctest_kwarg": 224, "examples_arg": 224, "examples_kwarg": 224, "run_in_subprocess_with_hash_random": 224, "function_kwarg": 224, "usr": 224, "pythonhashse": 224, "_test": 224, "split_list": 224, "sympytestfil": 224, "module_rel": 224, "extraglob": 224, "raise_on_error": 224, "basenam": [224, 225, 226], "slate": 224, "dont_accept_true_for_1": 224, "dont_accept_blanklin": 224, "normalize_whitespac": 224, "ellipsi": 224, "ignore_exception_detail": 224, "report_udiff": 224, "report_cdiff": 224, "report_ndiff": 224, "report_only_first_failur": 224, "mortem": 224, "tomfooleri": 224, "testmod": 224, "tester": 224, "fiddl": [224, 269], "timeout": 224, "keyboardinterrupt": 224, "interrupt": 224, "_basic": 224, "kw": 224, "test_equ": 224, "pdb": 224, "pipe": 224, "time_bal": 224, "tandem": 225, "matvec": 225, "codewrapp": 225, "distutil": 225, "fwrap": 225, "swig": 225, "binary_cal": 225, "22925376": 225, "25165824": 225, "_imp_": [225, 232], "filepath": 225, "cythoncodewrapp": 225, "dump_pyx": 225, "dummywrapp": 225, "f2pycodewrapp": 225, "ufuncifycodewrapp": 225, "dump_c": [225, 226], "funcnam": 225, "code_gen": [225, 226], "argument_tupl": 225, "include_dir": 225, "library_dir": 225, "extra_compile_arg": 225, "extra_link_arg": 225, "symfunc": [225, 232], "funtion_nam": 225, "ndimension": 225, "f_fortran": 225, "f_cython": 225, "r957": 225, "fortran77": 226, "fortran90": 226, "julia": [226, 256], "rust": [226, 256], "mileston": 226, "unsurmount": 226, "pyf": 226, "inputoutput": 226, "tcc": 226, "libtcc": 226, "date": 226, "hostnam": 226, "sha1": 226, "ccodegen": 226, "preprocessor_stat": 226, "dump_h": 226, "guard": 226, "get_prototyp": 226, "codegenerror": 226, "function_prototyp": 226, "dump_cod": 226, "cname": 226, "fname": 226, "pynam": 226, "jlname": 226, "octnam": 226, "rsname": 226, "fcodegen": 226, "f90": 226, "dump_f95": 226, "get_interfac": 226, "juliacodegen": 226, "dump_jl": 226, "octavecodegen": 226, "dump_m": 226, "returnvalu": 226, "destin": 226, "local_var": 226, "result_vari": 226, "ot": 226, "unnam": 226, "rustcodegen": 226, "dump_r": 226, "f_result": 226, "myfcn": 226, "fcn2": 226, "myfcn_result": 226, "void": 226, "get_default_datatyp": 226, "complex_allow": 226, "agnost": 226, "conserve_mpmath_dp": 227, "doctest_depends_on": 227, "disable_view": 227, "python_vers": 227, "memoize_properti": 227, "propfunc": 227, "no_attrs_in_subclass": 227, "__all__": 227, "some_funct": 227, "thread": 227, "xthread": 227, "threaded_factori": 227, "use_add": 227, "multiset_partitions_taocp": 228, "visitor": 228, "pstack": 228, "lpart": 228, "topmost": 228, "partcompon": 228, "peek": [228, 269], "unpredict": 228, "list_visitor": 228, "abb": [228, 231], "factoring_visitor": 228, "multisetpartitiontravers": 228, "aocp": 228, "count_partit": 228, "127750": 228, "686": 228, "4a": 228, "factorisatio": 228, "oppenheim": 228, "numerorum": 228, "canfield": 228, "erdo": 228, "OF": 228, "yorgei": 228, "monad": 228, "persist": 228, "288716": 228, "memoiz": [228, 230, 256], "dramat": 228, "hypothet": 228, "borrow": 228, "coalesc": 228, "_rang": 228, "stretch": 228, "brain": 228, "histogram": 228, "enum_al": 228, "enum_larg": 228, "enum_rang": 228, "enum_smal": 228, "ub": 228, "parti": 229, "catch_warn": 229, "simplefilt": 229, "dedent": [229, 234], "enum": [230, 256], "pkgdata": [230, 256], "kbin": 231, "partion": 231, "ordered_partit": 231, "bcd": 231, "notiter": 231, "binary_partit": 231, "r958": 231, "taocp": 231, "nx": 231, "common_prefix": 231, "common_suffix": 231, "unhash": 231, "r959": 231, "connected_component_": 231, "graph_theori": 231, "r960": 231, "27s_strongly_connected_components_algorithm": 231, "dict_merg": 231, "filter_symbol": 231, "myop": 231, "kog": 231, "informatik": 231, "hamburg": 231, "mein": 231, "python_trick": 231, "neighbor": 231, "xxxxxx": 231, "xxxx": 231, "r961": 231, "method_ring": 231, "r962": 231, "4856615": 231, "4857018": 231, "r963": 231, "programminggeek": 231, "r964": 231, "steinhau": 231, "93johnson": 231, "93trotter_algorithm": 231, "r965": 231, "involut": 231, "eco": 231, "vajnovszki": 231, "dmtc": 231, "generate_involut": 231, "r966": 231, "permutationinvolut": 231, "generate_oriented_forest": 231, "forest": 231, "acycl": 231, "r967": 231, "beyer": 231, "hedetniemi": 231, "novemb": 231, "r968": 231, "1633833": 231, "has_dup": 231, "has_varieti": 231, "iproduct": 231, "abcbb": 231, "is_sequ": 231, "generatortyp": 231, "_iter": 231, "ordered_flag": 231, "least_rot": 231, "rotate_left": 231, "r969": 231, "lexicographically_minimal_string_rot": 231, "minlex": 231, "acb": 231, "11010011000": 231, "00011010011": 231, "00011001011": 231, "aaa": 231, "abi": 231, "bby": 231, "abracadabra": 231, "banana": 231, "multiset_derang": 231, "uniq": 231, "1233": 231, "3312": 231, "3321": 231, "aba": 231, "baa": 231, "bead": 231, "ooo": 231, "r970": 231, "r971": 231, "jeromekelleh": 231, "r972": 231, "jerom": 231, "kelleh": 231, "barri": 231, "sullivan": 231, "0909": 231, "2331v2": 231, "r973": 231, "activest": 231, "218332": 231, "postfix": 231, "random_derang": 231, "reseed": 231, "templat": 231, "rotate_right": 231, "roundrobin": 231, "ef": 231, "credit": [231, 254], "sakki": 231, "keyfunc": 231, "subgraph": 231, "r974": 231, "r975": 231, "longest": 231, "r976": 231, "unflatten": 231, "afunc": 232, "lam_f": 232, "lambdastr": 232, "dummifi": 232, "use_imp": 232, "custom_sin": 232, "38177329": 232, "49315059": 232, "8414709848078965": 232, "eager": 232, "enable_eager_execut": 232, "eagertensor": 232, "__class__": 232, "placehold": 232, "user_guid": 232, "runtimewarn": 232, "sin_cos_sympi": 232, "sin_co": 232, "sin_cos_numpi": 232, "38177329068": 232, "module_dictionari": 232, "_lambdifygener": 232, "__globals__": 232, "lambdaprint": [232, 256], "90929743": [232, 258], "assoc_recurrence_memo": 233, "base_seq": 233, "memo": 233, "pn0": 233, "recurrence_memo": 233, "specfun": 233, "__index__": 234, "sanit": 234, "99999999999999991611392": 234, "debug_decor": 234, "fillded": 234, "strline": 234, "rawlin": 234, "find_execut": 234, "pathsep": 234, "strictlessthan": 234, "pastabl": 234, "bee": 234, "spamham": 234, "sha": 234, "spam": 234, "egg": 234, "md5": 234, "eggsham": 234, "r977": 234, "6116978": 234, "roken": 234, "deletechar": 234, "multicharact": 234, "oldchar": 234, "newchar": 234, "acquir": 235, "getresourc": 235, "pkgname": 235, "pkgpath": 235, "dirnam": 235, "normpath": 235, "rb": 235, "__loader__": 235, "stringio": 235, "get_resourc": 235, "ioerror": 235, "mydata": 235, "mypkgdata": 235, "jpg": 235, "get_class": 236, "lookup_view": 236, "get_mod_func": 236, "callback": 236, "timeutil": 237, "coordsysrect": 238, "rotation_matrix": [238, 239, 242], "vector_nam": 238, "variable_nam": [238, 244], "latex_vect": 238, "pretty_vect": 238, "latex_scalar": 238, "pretty_scalar": 238, "new_system": 238, "create_new": [238, 242], "transformation_to_par": 238, "transformation_from_par": 238, "locate_new": [238, 240, 241, 242, 243, 244], "position_wrt": [238, 241, 242, 243], "orient_new": [238, 239], "axisorient": [238, 242, 245], "axis_orient": [238, 242], "bodyorient": [238, 242, 245], "body_orient": [238, 239, 242], "spaceorient": [238, 242, 245], "space_orient": [238, 239], "quaternionorient": [238, 242, 245], "q_orient": [238, 239], "orient_new_axi": [238, 240, 242], "orient_new_bodi": [238, 242], "angle1": [238, 239], "angle2": [238, 239], "angle3": [238, 239], "euler_angl": [238, 239], "orient_new_quaternion": [238, 242], "orient_new_spac": [238, 242], "coordsyrect": 238, "v_a": 238, "v_b": 238, "scalar_map": 238, "basevector": [238, 241, 242], "delop": [238, 243, 244], "r978": 238, "r979": 238, "basedyad": [238, 241], "second_system": 238, "deloper": [238, 245], "curl": [238, 245, 247], "parabola": 238, "rational_parametr": 238, "singular_point": 238, "regular_point": 238, "reg_point": 238, "implict": 238, "cubic_curv": 238, "calulc": 238, "hoffmann": 238, "purdu": 238, "lib": 238, "cgi": 238, "viewcont": 238, "1827": 238, "cstech": 238, "erik": 238, "hillgart": 238, "diploma": 238, "linz": 238, "universitat": 238, "availa": 238, "risc_1355": 238, "20point": 238, "20on": 238, "20conic": 238, "semispher": [238, 247], "coordsys3d": [239, 240, 241, 243, 244, 245, 247], "axis_orienter1": 239, "axis_orienter2": 239, "axis_orienter3": 239, "body_orienter1": 239, "body_orienter2": 239, "body_orienter3": 239, "system2": 240, "parametricregion": [240, 245, 247], "implicitregion": [240, 245, 247], "essenc": 241, "vectormul": 241, "vectoradd": 241, "ofcours": 241, "vectorzero": 241, "expressli": 241, "express_coordin": [241, 242], "dyadicmul": 241, "dyadicadd": 241, "cleanest": 242, "orient_new_": 242, "basescalar": [242, 244], "oabc": 243, "oa": 243, "pq": 243, "sr": 243, "wikidel": 243, "ffield": 243, "gradient_field": 244, "instantan": 244, "directional_deriv": 244, "lame": 244, "quadrilater": 245, "flux": 245, "parametricintegr": 245, "matrix_to_vector": 245, "vector_integr": [245, 247], "dyadicproduct": 245, "quantifi": 246, "throughtout": 246, "necesssari": 247, "param_circl": 247, "implicit_circl": 247, "obextj": 247, "solidspher": 247, "lamina": 247, "\ud835\udc45": 247, "cylind": 247, "vectorfield": 247, "hemispher": 247, "top_fac": 247, "bottom_fac": 247, "27_theorem": 247, "cone": 247, "divergence_theorem": 247, "12288": 247, "subcategori": 248, "cnode": 250, "cxxnode": 250, "fnode": 250, "pyutil": 250, "cutil": 250, "futil": 250, "ecm": 253, "copyright": 254, "truss": [], "pappu": 255, "hexagon": 255, "prettyprint": 256, "rcodeprint": 256, "javascript": [256, 268], "gtk": 256, "mathmlprint": 256, "pythoncodeprint": 256, "pythonprint": 256, "dotprint": [256, 264, 268], "str_expr": 258, "82842712474619": 258, "141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068": 258, "0874989834394464": 258, "roundoff": 258, "14112001": 258, "7568025": 258, "95892427": 258, "2794155": 258, "6569866": 258, "98935825": 258, "41211849": 258, "0998334166468": 258, "sympy_nam": 258, "numerical_funct": 258, "rephras": 259, "oh": 259, "integration_vari": 259, "dfdx": 259, "equidistantli": 259, "d2fdx2": 259, "django": 261, "oop": 261, "crazi": 261, "abcdef": 261, "reevalu": 261, "infal": 261, "insight": 262, "entertain": 262, "preliminari": 262, "82842712475": 263, "cass": 263, "wrote": [263, 264], "theme": 263, "expanded_expr": 263, "whet": 263, "appetit": 263, "c\u2082": [263, 270], "c\u2081": [263, 270], "\u03bd": 263, "sell": 263, "battl": 263, "confid": 263, "gigabyt": 263, "tear": 264, "stopper": 264, "uexpr": 264, "unevalutedexpr": 264, "downsid": 265, "algebraic_multipl": 265, "pdp": 265, "undertest": 265, "underevalu": 265, "my_iszero": 265, "stronger": 265, "tradeoff": 265, "wonder": 265, "5b7c3e8ee5b40332abdb206c": 265, "15141": 265, "19548": 265, "10120": 265, "10279": 265, "constant_problem": 265, "possiblezeroq": 265, "mupad_ref": 265, "iszero": 265, "congratul": 266, "decent": 267, "austin": 267, "video": 267, "bvar": 268, "unnecessarili": 269, "whittl": 269, "catchal": 269, "sound": 269, "collected_expr": 269, "cdot1": 269, "undertak": 269, "undon": 269, "cdot2": 269, "nck": 269, "pronounc": 269, "_2f_1": 269, "cfrac": 269, "list_to_frac": 269, "a\u2080": 269, "a\u2083": 269, "a\u2084": 269, "pointless": 269, "orig_frac": 269, "diffeq": 270, "contrarili": [], "fifth_ord": [], "16730397826142": [], "181232444469875": [], "08395410131771": [], "764884433600585": [], "352471546031726": [], "fifth_order_solv": [], "roots_solv": [], "167303978": [], "1812324445": [], "083954101": [], "7648844336": [], "352471546": [], "sole": [], "croot": [], "robustli": [], "rq0": [], "rq1": [], "rq2": [], "rq3": [], "349745826211722": [], "438990337475312": [], "convei": [], "my_real_root": [], "my_root": [], "6z": [], "interrog": [], "overconstrain": [], "solve_ivp": [], "checkodesol": [], "ypp": [], "yp": [], "classify_od": [], "xp": [], "xpp": [], "solutions_list": [], "solution_dict": [], "unintegr": [], "chaotic": [], "lorenz": [], "dicontinu": 211, "theta2": [], "overli": [], "18466446988997098217": [], "16840434497100886801e": [], "192873099352460791205211": [], "278444111699106966687122": [], "root_scalar": [], "brentq": [], "3416277185114782": [], "x_valu": [], "73908513321516": [], "4877893607115270300540019e": [], "6543612251060553497428174e": [], "fsolv": [], "theta_1": [], "theta_2": [], "2g": [], "scienceworld": [], "ce": [], "isinf": [], "await": [], "a_00": [], "a_11": [], "a_22": [], "a_33": [], "a_23": [], "a_32": [], "a_12": [], "a_21": [], "a_31": [], "a_13": [], "a_01": [], "a_10": [], "a_20": [], "a_30": [], "a_02": [], "_30": [], "a_03": [], "_11": [], "a\u2080\u2080": [], "a\u2081\u2081": [], "a\u2082\u2082": [], "a\u2083\u2083": [], "a\u2082\u2083": [], "a\u2083\u2082": [], "a\u2081\u2082": [], "a\u2082\u2081": [], "a\u2083\u2081": [], "a\u2081\u2083": [], "a\u2080\u2081": [], "a\u2081\u2080": [], "a\u2082\u2080": [], "a\u2083\u2080": [], "a\u2080\u2082": [], "a\u2080\u2083": [], "toc": [], "2pq": [], "r63": [], "r67": [], "g155": [], "m156": [], "r158": [], "r159": [], "r215": [], "chemic": [], "kf": [], "kb": [], "ydot": [], "k_val": [], "nfev": [], "njev": [], "nlu": [], "00000000e": [], "68190462e": [], "85009508e": [], "86691413e": [], "37253319e": [], "27438822e": [], "15637690e": [], "28555351e": [], "69240977e": [], "45455786e": [], "73068099e": [], "t_event": [], "99858969": [], "98475531": [], "86889862": [], "68120238": [], "55390608": [], "47951256": [], "44569558": [], "43354565": [], "43020361": [], "42955182": [], "4294468": [], "99929485": [], "99237766": [], "93444931": [], "84060119": [], "77695304": [], "73975628": [], "72284779": [], "71677282": [], "71510181": [], "71477591": [], "7147234": [], "00141031": [], "01524469": [], "13110138": [], "31879762": [], "44609392": [], "52048744": [], "55430442": [], "56645435": [], "56979639": [], "57044818": [], "5705532": [], "y_event": [], "my_tupl": [], "meth": [], "d_list": [], "my_sym": [], "logartihm": 29, "_eval_is_assumpt": [49, 56], "my_func": [49, 56], "honour": [49, 56], "pip3": 91, "python2": 91, "channel": 91, "ngle": 115, "driectli": 182, "elim": 211, "metirc": 219, "array2mat": 232}, "objects": {"": [[20, 0, 0, "-", "sympy"]], "sympy": [[22, 0, 0, "-", "abc"], [23, 0, 0, "-", "algebras"], [26, 0, 0, "-", "assumptions"], [29, 0, 0, "-", "calculus"], [30, 0, 0, "-", "categories"], [51, 0, 0, "-", "diffgeom"], [52, 0, 0, "-", "discrete"], [56, 0, 0, "-", "functions"], [69, 0, 0, "-", "holonomic"], [76, 0, 0, "-", "integrals"], [77, 0, 0, "-", "interactive"], [78, 0, 0, "-", "liealgebras"], [79, 0, 0, "-", "logic"], [84, 0, 0, "-", "matrices"], [91, 0, 0, "-", "parsing"], [254, 0, 0, "-", "physics"], [189, 0, 0, "-", "polys"], [211, 0, 0, "-", "solvers"], [213, 0, 0, "-", "stats"], [216, 0, 0, "-", "tensor"], [221, 0, 0, "-", "testing"], [230, 0, 0, "-", "utilities"], [245, 0, 0, "-", "vector"]], "sympy.algebras": [[23, 1, 1, "", "Quaternion"]], "sympy.algebras.Quaternion": [[23, 2, 1, "", "add"], [23, 2, 1, "", "angle"], [23, 2, 1, "", "arc_coplanar"], [23, 2, 1, "", "axis"], [23, 2, 1, "", "exp"], [23, 2, 1, "", "from_axis_angle"], [23, 2, 1, "", "from_rotation_matrix"], [23, 2, 1, "", "index_vector"], [23, 2, 1, "", "integrate"], [23, 2, 1, "", "inverse"], [23, 2, 1, "", "is_pure"], [23, 2, 1, "", "is_zero_quaternion"], [23, 2, 1, "", "mensor"], [23, 2, 1, "", "mul"], [23, 2, 1, "", "norm"], [23, 2, 1, "", "normalize"], [23, 2, 1, "", "orthogonal"], [23, 2, 1, "", "parallel"], [23, 2, 1, "", "pow"], [23, 2, 1, "", "pow_cos_sin"], [23, 2, 1, "", "rotate_point"], [23, 2, 1, "", "scalar_part"], [23, 2, 1, "", "to_axis_angle"], [23, 2, 1, "", "to_rotation_matrix"], [23, 2, 1, "", "vector_coplanar"], [23, 2, 1, "", "vector_part"]], "sympy.assumptions": [[24, 0, 0, "-", "ask"], [25, 0, 0, "-", "assume"], [27, 0, 0, "-", "predicates"], [28, 0, 0, "-", "refine"]], "sympy.assumptions.ask": [[24, 1, 1, "", "AssumptionKeys"], [24, 3, 1, "", "ask"], [24, 3, 1, "", "register_handler"], [24, 3, 1, "", "remove_handler"]], "sympy.assumptions.assume": [[25, 1, 1, "", "AppliedPredicate"], [25, 1, 1, "", "AssumptionsContext"], [25, 1, 1, "", "Predicate"], [25, 1, 1, "", "UndefinedPredicate"], [25, 3, 1, "", "assuming"]], "sympy.assumptions.assume.AppliedPredicate": [[25, 4, 1, "", "arg"], [25, 4, 1, "", "arguments"], [25, 4, 1, "", "function"]], "sympy.assumptions.assume.AssumptionsContext": [[25, 2, 1, "", "add"]], "sympy.assumptions.assume.Predicate": [[25, 2, 1, "", "eval"], [25, 5, 1, "", "handler"], [25, 2, 1, "", "register"], [25, 2, 1, "", "register_many"]], "sympy.assumptions.predicates.calculus": [[27, 1, 1, "", "FinitePredicate"], [27, 1, 1, "", "InfinitePredicate"]], "sympy.assumptions.predicates.calculus.FinitePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.calculus.InfinitePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common": [[27, 1, 1, "", "CommutativePredicate"], [27, 1, 1, "", "IsTruePredicate"]], "sympy.assumptions.predicates.common.CommutativePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.common.IsTruePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices": [[27, 1, 1, "", "ComplexElementsPredicate"], [27, 1, 1, "", "DiagonalPredicate"], [27, 1, 1, "", "FullRankPredicate"], [27, 1, 1, "", "IntegerElementsPredicate"], [27, 1, 1, "", "InvertiblePredicate"], [27, 1, 1, "", "LowerTriangularPredicate"], [27, 1, 1, "", "NormalPredicate"], [27, 1, 1, "", "OrthogonalPredicate"], [27, 1, 1, "", "PositiveDefinitePredicate"], [27, 1, 1, "", "RealElementsPredicate"], [27, 1, 1, "", "SingularPredicate"], [27, 1, 1, "", "SquarePredicate"], [27, 1, 1, "", "SymmetricPredicate"], [27, 1, 1, "", "TriangularPredicate"], [27, 1, 1, "", "UnitTriangularPredicate"], [27, 1, 1, "", "UnitaryPredicate"], [27, 1, 1, "", "UpperTriangularPredicate"]], "sympy.assumptions.predicates.matrices.ComplexElementsPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.DiagonalPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.FullRankPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.IntegerElementsPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.InvertiblePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.LowerTriangularPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.NormalPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.OrthogonalPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.PositiveDefinitePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.RealElementsPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SingularPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SquarePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.SymmetricPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.TriangularPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitTriangularPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UnitaryPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.matrices.UpperTriangularPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory": [[27, 1, 1, "", "CompositePredicate"], [27, 1, 1, "", "EvenPredicate"], [27, 1, 1, "", "OddPredicate"], [27, 1, 1, "", "PrimePredicate"]], "sympy.assumptions.predicates.ntheory.CompositePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.EvenPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.OddPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.ntheory.PrimePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order": [[27, 1, 1, "", "NegativePredicate"], [27, 1, 1, "", "NonNegativePredicate"], [27, 1, 1, "", "NonPositivePredicate"], [27, 1, 1, "", "NonZeroPredicate"], [27, 1, 1, "", "PositivePredicate"], [27, 1, 1, "", "ZeroPredicate"]], "sympy.assumptions.predicates.order.NegativePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonNegativePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonPositivePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.NonZeroPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.PositivePredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.order.ZeroPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets": [[27, 1, 1, "", "AlgebraicPredicate"], [27, 1, 1, "", "AntihermitianPredicate"], [27, 1, 1, "", "ComplexPredicate"], [27, 1, 1, "", "ExtendedRealPredicate"], [27, 1, 1, "", "HermitianPredicate"], [27, 1, 1, "", "ImaginaryPredicate"], [27, 1, 1, "", "IntegerPredicate"], [27, 1, 1, "", "IrrationalPredicate"], [27, 1, 1, "", "RationalPredicate"], [27, 1, 1, "", "RealPredicate"], [27, 1, 1, "", "TranscendentalPredicate"]], "sympy.assumptions.predicates.sets.AlgebraicPredicate": [[27, 5, 1, "", "AlgebraicHandler"], [27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.AntihermitianPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ComplexPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ExtendedRealPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.HermitianPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.ImaginaryPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IntegerPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.IrrationalPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RationalPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.RealPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.predicates.sets.TranscendentalPredicate": [[27, 5, 1, "", "handler"]], "sympy.assumptions.refine": [[28, 3, 1, "", "refine"], [28, 3, 1, "", "refine_Pow"], [28, 3, 1, "", "refine_abs"], [28, 3, 1, "", "refine_arg"], [28, 3, 1, "", "refine_atan2"], [28, 3, 1, "", "refine_im"], [28, 3, 1, "", "refine_matrixelement"], [28, 3, 1, "", "refine_re"], [28, 3, 1, "", "refine_sign"]], "sympy.calculus": [[29, 0, 0, "-", "euler"], [29, 0, 0, "-", "finite_diff"], [29, 0, 0, "-", "singularities"], [29, 0, 0, "-", "util"]], "sympy.calculus.euler": [[29, 3, 1, "", "euler_equations"]], "sympy.calculus.finite_diff": [[29, 3, 1, "", "apply_finite_diff"], [29, 3, 1, "", "differentiate_finite"], [29, 3, 1, "", "finite_diff_weights"]], "sympy.calculus.singularities": [[29, 3, 1, "", "is_decreasing"], [29, 3, 1, "", "is_increasing"], [29, 3, 1, "", "is_monotonic"], [29, 3, 1, "", "is_strictly_decreasing"], [29, 3, 1, "", "is_strictly_increasing"], [29, 3, 1, "", "monotonicity_helper"], [29, 3, 1, "", "singularities"]], "sympy.calculus.util": [[29, 3, 1, "", "continuous_domain"], [29, 3, 1, "", "function_range"], [29, 3, 1, "", "is_convex"], [29, 3, 1, "", "lcim"], [29, 3, 1, "", "maximum"], [29, 3, 1, "", "minimum"], [29, 3, 1, "", "not_empty_in"], [29, 3, 1, "", "periodicity"], [29, 3, 1, "", "stationary_points"]], "sympy.categories": [[30, 1, 1, "", "Category"], [30, 1, 1, "", "CompositeMorphism"], [30, 1, 1, "", "Diagram"], [30, 1, 1, "", "IdentityMorphism"], [30, 1, 1, "", "Morphism"], [30, 1, 1, "", "NamedMorphism"], [30, 1, 1, "", "Object"], [30, 0, 0, "-", "diagram_drawing"]], "sympy.categories.Category": [[30, 4, 1, "", "commutative_diagrams"], [30, 4, 1, "", "name"], [30, 4, 1, "", "objects"]], "sympy.categories.CompositeMorphism": [[30, 4, 1, "", "codomain"], [30, 4, 1, "", "components"], [30, 4, 1, "", "domain"], [30, 2, 1, "", "flatten"]], "sympy.categories.Diagram": [[30, 4, 1, "", "conclusions"], [30, 2, 1, "", "hom"], [30, 2, 1, "", "is_subdiagram"], [30, 4, 1, "", "objects"], [30, 4, 1, "", "premises"], [30, 2, 1, "", "subdiagram_from_objects"]], "sympy.categories.Morphism": [[30, 4, 1, "", "codomain"], [30, 2, 1, "", "compose"], [30, 4, 1, "", "domain"]], "sympy.categories.NamedMorphism": [[30, 4, 1, "", "name"]], "sympy.categories.diagram_drawing": [[30, 1, 1, "", "ArrowStringDescription"], [30, 1, 1, "", "DiagramGrid"], [30, 1, 1, "", "XypicDiagramDrawer"], [30, 3, 1, "", "preview_diagram"], [30, 3, 1, "", "xypic_draw_diagram"]], "sympy.categories.diagram_drawing.DiagramGrid": [[30, 4, 1, "", "height"], [30, 4, 1, "", "morphisms"], [30, 4, 1, "", "width"]], "sympy.categories.diagram_drawing.XypicDiagramDrawer": [[30, 2, 1, "", "draw"]], "sympy.codegen": [[31, 0, 0, "-", "algorithms"], [31, 0, 0, "-", "approximations"], [31, 0, 0, "-", "ast"], [31, 0, 0, "-", "cfunctions"], [31, 0, 0, "-", "cnodes"], [31, 0, 0, "-", "cutils"], [31, 0, 0, "-", "cxxnodes"], [31, 0, 0, "-", "fnodes"], [31, 0, 0, "-", "futils"], [31, 0, 0, "-", "matrix_nodes"], [31, 0, 0, "-", "pyutils"], [31, 0, 0, "-", "rewriting"]], "sympy.codegen.algorithms": [[31, 3, 1, "", "newtons_method"], [31, 3, 1, "", "newtons_method_function"]], "sympy.codegen.approximations": [[31, 1, 1, "", "SeriesApprox"], [31, 1, 1, "", "SumApprox"]], "sympy.codegen.ast": [[31, 1, 1, "", "Assignment"], [31, 1, 1, "", "AssignmentBase"], [31, 1, 1, "", "Attribute"], [31, 1, 1, "", "AugmentedAssignment"], [31, 1, 1, "", "BreakToken"], [31, 1, 1, "", "CodeBlock"], [31, 1, 1, "", "Comment"], [31, 1, 1, "", "ComplexType"], [31, 1, 1, "", "ContinueToken"], [31, 1, 1, "", "Declaration"], [31, 1, 1, "", "Element"], [31, 1, 1, "", "FloatBaseType"], [31, 1, 1, "", "FloatType"], [31, 1, 1, "", "For"], [31, 1, 1, "", "FunctionCall"], [31, 1, 1, "", "FunctionDefinition"], [31, 1, 1, "", "FunctionPrototype"], [31, 1, 1, "", "IntBaseType"], [31, 1, 1, "", "Node"], [31, 1, 1, "", "NoneToken"], [31, 1, 1, "", "Pointer"], [31, 1, 1, "", "Print"], [31, 1, 1, "", "QuotedString"], [31, 1, 1, "", "Return"], [31, 1, 1, "", "Scope"], [31, 1, 1, "", "SignedIntType"], [31, 1, 1, "", "Stream"], [31, 1, 1, "", "String"], [31, 1, 1, "", "Token"], [31, 1, 1, "", "Type"], [31, 1, 1, "", "UnsignedIntType"], [31, 1, 1, "", "Variable"], [31, 1, 1, "", "While"], [31, 3, 1, "", "aug_assign"]], "sympy.codegen.ast.CodeBlock": [[31, 2, 1, "", "cse"], [31, 2, 1, "", "topological_sort"]], "sympy.codegen.ast.FloatBaseType": [[31, 5, 1, "", "cast_nocheck"]], "sympy.codegen.ast.FloatType": [[31, 2, 1, "", "cast_nocheck"], [31, 4, 1, "", "decimal_dig"], [31, 4, 1, "", "dig"], [31, 4, 1, "", "eps"], [31, 4, 1, "", "max"], [31, 4, 1, "", "max_exponent"], [31, 4, 1, "", "min_exponent"], [31, 4, 1, "", "tiny"]], "sympy.codegen.ast.Node": [[31, 2, 1, "", "attr_params"]], "sympy.codegen.ast.Token": [[31, 2, 1, "", "kwargs"]], "sympy.codegen.ast.Type": [[31, 2, 1, "", "cast_check"], [31, 2, 1, "", "from_expr"]], "sympy.codegen.ast.Variable": [[31, 2, 1, "", "as_Declaration"], [31, 2, 1, "", "deduced"]], "sympy.codegen.cfunctions": [[31, 1, 1, "", "Cbrt"], [31, 1, 1, "", "Sqrt"], [31, 1, 1, "", "exp2"], [31, 1, 1, "", "expm1"], [31, 1, 1, "", "fma"], [31, 1, 1, "", "hypot"], [31, 1, 1, "", "log10"], [31, 1, 1, "", "log1p"], [31, 1, 1, "", "log2"]], "sympy.codegen.cfunctions.Cbrt": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.Sqrt": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.exp2": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.expm1": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.fma": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.hypot": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log10": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log1p": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cfunctions.log2": [[31, 2, 1, "", "fdiff"]], "sympy.codegen.cnodes": [[31, 1, 1, "", "CommaOperator"], [31, 1, 1, "", "Label"], [31, 1, 1, "", "PostDecrement"], [31, 1, 1, "", "PostIncrement"], [31, 1, 1, "", "PreDecrement"], [31, 1, 1, "", "PreIncrement"], [31, 3, 1, "", "alignof"], [31, 1, 1, "", "goto"], [31, 3, 1, "", "sizeof"], [31, 1, 1, "", "struct"], [31, 1, 1, "", "union"]], "sympy.codegen.cutils": [[31, 3, 1, "", "render_as_source_file"]], "sympy.codegen.cxxnodes": [[31, 1, 1, "", "using"]], "sympy.codegen.fnodes": [[31, 1, 1, "", "ArrayConstructor"], [31, 1, 1, "", "Do"], [31, 1, 1, "", "Extent"], [31, 1, 1, "", "FortranReturn"], [31, 1, 1, "", "GoTo"], [31, 1, 1, "", "ImpliedDoLoop"], [31, 1, 1, "", "Module"], [31, 1, 1, "", "Program"], [31, 1, 1, "", "Subroutine"], [31, 1, 1, "", "SubroutineCall"], [31, 3, 1, "", "allocated"], [31, 3, 1, "", "array"], [31, 3, 1, "", "bind_C"], [31, 1, 1, "", "cmplx"], [31, 3, 1, "", "dimension"], [31, 1, 1, "", "dsign"], [31, 1, 1, "", "isign"], [31, 1, 1, "", "kind"], [31, 3, 1, "", "lbound"], [31, 1, 1, "", "literal_dp"], [31, 1, 1, "", "literal_sp"], [31, 1, 1, "", "merge"], [31, 3, 1, "", "reshape"], [31, 3, 1, "", "shape"], [31, 3, 1, "", "size"], [31, 1, 1, "", "use"], [31, 1, 1, "", "use_rename"]], "sympy.codegen.futils": [[31, 3, 1, "", "render_as_module"]], "sympy.codegen.matrix_nodes": [[31, 1, 1, "", "MatrixSolve"]], "sympy.codegen.pyutils": [[31, 3, 1, "", "render_as_module"]], "sympy.codegen.rewriting": [[31, 1, 1, "", "FuncMinusOneOptim"], [31, 1, 1, "", "Optimization"], [31, 1, 1, "", "ReplaceOptim"], [31, 3, 1, "", "create_expand_pow_optimization"], [31, 3, 1, "", "optimize"]], "sympy.codegen.rewriting.FuncMinusOneOptim": [[31, 2, 1, "", "replace_in_Add"]], "sympy.combinatorics": [[41, 0, 0, "-", "generators"], [33, 0, 0, "-", "graycode"], [34, 0, 0, "-", "group_constructs"], [35, 0, 0, "-", "group_numbers"], [37, 0, 0, "-", "named_groups"], [38, 0, 0, "-", "partitions"], [40, 0, 0, "-", "perm_groups"], [41, 0, 0, "-", "permutations"], [42, 0, 0, "-", "polyhedron"], [43, 0, 0, "-", "prufer"], [44, 0, 0, "-", "subsets"], [45, 0, 0, "-", "tensor_can"], [46, 0, 0, "-", "testutil"], [47, 0, 0, "-", "util"]], "sympy.combinatorics.generators": [[41, 2, 1, "", "alternating"], [41, 2, 1, "", "cyclic"], [41, 2, 1, "", "dihedral"], [41, 2, 1, "", "symmetric"]], "sympy.combinatorics.graycode": [[33, 1, 1, "", "GrayCode"], [33, 2, 1, "", "bin_to_gray"], [33, 2, 1, "", "get_subset_from_bitstring"], [33, 2, 1, "", "gray_to_bin"], [33, 2, 1, "", "graycode_subsets"], [33, 2, 1, "", "random_bitstring"]], "sympy.combinatorics.graycode.GrayCode": [[33, 4, 1, "", "current"], [33, 2, 1, "", "generate_gray"], [33, 4, 1, "", "n"], [33, 2, 1, "", "next"], [33, 4, 1, "", "rank"], [33, 4, 1, "", "selections"], [33, 2, 1, "", "skip"], [33, 2, 1, "", "unrank"]], "sympy.combinatorics.group_constructs": [[34, 3, 1, "", "DirectProduct"]], "sympy.combinatorics.group_numbers": [[35, 3, 1, "", "is_abelian_number"], [35, 3, 1, "", "is_cyclic_number"], [35, 3, 1, "", "is_nilpotent_number"]], "sympy.combinatorics.named_groups": [[37, 3, 1, "", "AbelianGroup"], [37, 3, 1, "", "AlternatingGroup"], [37, 3, 1, "", "CyclicGroup"], [37, 3, 1, "", "DihedralGroup"], [37, 3, 1, "", "SymmetricGroup"]], "sympy.combinatorics.partitions": [[38, 1, 1, "", "IntegerPartition"], [38, 1, 1, "", "Partition"], [38, 3, 1, "", "RGS_enum"], [38, 3, 1, "", "RGS_generalized"], [38, 3, 1, "", "RGS_rank"], [38, 3, 1, "", "RGS_unrank"], [38, 3, 1, "", "random_integer_partition"]], "sympy.combinatorics.partitions.IntegerPartition": [[38, 2, 1, "", "as_dict"], [38, 2, 1, "", "as_ferrers"], [38, 4, 1, "", "conjugate"], [38, 2, 1, "", "next_lex"], [38, 2, 1, "", "prev_lex"]], "sympy.combinatorics.partitions.Partition": [[38, 4, 1, "", "RGS"], [38, 2, 1, "", "from_rgs"], [38, 4, 1, "", "partition"], [38, 4, 1, "", "rank"], [38, 2, 1, "", "sort_key"]], "sympy.combinatorics.perm_groups": [[40, 1, 1, "", "PermutationGroup"]], "sympy.combinatorics.perm_groups.PermutationGroup": [[40, 2, 1, "", "__contains__"], [40, 2, 1, "", "__mul__"], [40, 2, 1, "", "__new__"], [40, 5, 1, "", "__weakref__"], [40, 2, 1, "", "_coset_representative"], [40, 2, 1, "", "_distinct_primes_lemma"], [40, 4, 1, "", "_elements"], [40, 2, 1, "", "_eval_is_alt_sym_monte_carlo"], [40, 2, 1, "", "_eval_is_alt_sym_naive"], [40, 2, 1, "", "_p_elements_group"], [40, 2, 1, "", "_random_pr_init"], [40, 2, 1, "", "_sylow_alt_sym"], [40, 2, 1, "", "_union_find_merge"], [40, 2, 1, "", "_union_find_rep"], [40, 2, 1, "", "_verify"], [40, 2, 1, "", "abelian_invariants"], [40, 4, 1, "", "base"], [40, 2, 1, "", "baseswap"], [40, 4, 1, "", "basic_orbits"], [40, 4, 1, "", "basic_stabilizers"], [40, 4, 1, "", "basic_transversals"], [40, 2, 1, "", "center"], [40, 2, 1, "", "centralizer"], [40, 2, 1, "", "commutator"], [40, 2, 1, "", "composition_series"], [40, 2, 1, "", "conjugacy_class"], [40, 2, 1, "", "conjugacy_classes"], [40, 2, 1, "", "contains"], [40, 2, 1, "", "coset_factor"], [40, 2, 1, "", "coset_rank"], [40, 2, 1, "", "coset_table"], [40, 2, 1, "", "coset_transversal"], [40, 2, 1, "", "coset_unrank"], [40, 4, 1, "", "degree"], [40, 2, 1, "", "derived_series"], [40, 2, 1, "", "derived_subgroup"], [40, 4, 1, "", "elements"], [40, 2, 1, "", "equals"], [40, 2, 1, "", "generate"], [40, 2, 1, "", "generate_dimino"], [40, 2, 1, "", "generate_schreier_sims"], [40, 2, 1, "", "generator_product"], [40, 4, 1, "", "generators"], [40, 4, 1, "", "identity"], [40, 2, 1, "", "index"], [40, 4, 1, "", "is_abelian"], [40, 2, 1, "", "is_alt_sym"], [40, 4, 1, "", "is_alternating"], [40, 4, 1, "", "is_cyclic"], [40, 2, 1, "", "is_elementary"], [40, 4, 1, "", "is_nilpotent"], [40, 2, 1, "", "is_normal"], [40, 4, 1, "", "is_perfect"], [40, 4, 1, "", "is_polycyclic"], [40, 2, 1, "", "is_primitive"], [40, 4, 1, "", "is_solvable"], [40, 2, 1, "", "is_subgroup"], [40, 4, 1, "", "is_symmetric"], [40, 2, 1, "", "is_transitive"], [40, 4, 1, "", "is_trivial"], [40, 2, 1, "", "lower_central_series"], [40, 2, 1, "", "make_perm"], [40, 4, 1, "", "max_div"], [40, 2, 1, "", "minimal_block"], [40, 2, 1, "", "minimal_blocks"], [40, 2, 1, "", "normal_closure"], [40, 2, 1, "", "orbit"], [40, 2, 1, "", "orbit_rep"], [40, 2, 1, "", "orbit_transversal"], [40, 2, 1, "", "orbits"], [40, 2, 1, "", "order"], [40, 2, 1, "", "pointwise_stabilizer"], [40, 2, 1, "", "polycyclic_group"], [40, 2, 1, "", "presentation"], [40, 2, 1, "", "random"], [40, 2, 1, "", "random_pr"], [40, 2, 1, "", "random_stab"], [40, 2, 1, "", "schreier_sims"], [40, 2, 1, "", "schreier_sims_incremental"], [40, 2, 1, "", "schreier_sims_random"], [40, 2, 1, "", "schreier_vector"], [40, 2, 1, "", "stabilizer"], [40, 4, 1, "", "strong_gens"], [40, 2, 1, "", "strong_presentation"], [40, 2, 1, "", "subgroup"], [40, 2, 1, "", "subgroup_search"], [40, 2, 1, "", "sylow_subgroup"], [40, 4, 1, "", "transitivity_degree"]], "sympy.combinatorics.permutations": [[41, 1, 1, "", "Cycle"], [41, 1, 1, "", "Permutation"], [41, 3, 1, "", "_af_parity"]], "sympy.combinatorics.permutations.Cycle": [[41, 2, 1, "", "list"]], "sympy.combinatorics.permutations.Permutation": [[41, 2, 1, "", "apply"], [41, 4, 1, "", "array_form"], [41, 2, 1, "", "ascents"], [41, 2, 1, "", "atoms"], [41, 4, 1, "", "cardinality"], [41, 2, 1, "", "commutator"], [41, 2, 1, "", "commutes_with"], [41, 4, 1, "", "cycle_structure"], [41, 4, 1, "", "cycles"], [41, 4, 1, "", "cyclic_form"], [41, 2, 1, "", "descents"], [41, 2, 1, "", "from_inversion_vector"], [41, 2, 1, "", "from_sequence"], [41, 4, 1, "", "full_cyclic_form"], [41, 2, 1, "", "get_adjacency_distance"], [41, 2, 1, "", "get_adjacency_matrix"], [41, 2, 1, "", "get_positional_distance"], [41, 2, 1, "", "get_precedence_distance"], [41, 2, 1, "", "get_precedence_matrix"], [41, 2, 1, "", "index"], [41, 2, 1, "", "inversion_vector"], [41, 2, 1, "", "inversions"], [41, 4, 1, "", "is_Empty"], [41, 4, 1, "", "is_Identity"], [41, 4, 1, "", "is_Singleton"], [41, 4, 1, "", "is_even"], [41, 4, 1, "", "is_odd"], [41, 2, 1, "", "josephus"], [41, 2, 1, "", "length"], [41, 2, 1, "", "list"], [41, 2, 1, "", "max"], [41, 2, 1, "", "min"], [41, 2, 1, "", "mul_inv"], [41, 2, 1, "", "next_lex"], [41, 2, 1, "", "next_nonlex"], [41, 2, 1, "", "next_trotterjohnson"], [41, 2, 1, "", "order"], [41, 2, 1, "", "parity"], [41, 2, 1, "", "random"], [41, 2, 1, "", "rank"], [41, 2, 1, "", "rank_nonlex"], [41, 2, 1, "", "rank_trotterjohnson"], [41, 2, 1, "", "resize"], [41, 2, 1, "", "rmul"], [41, 2, 1, "", "rmul_with_af"], [41, 2, 1, "", "runs"], [41, 2, 1, "", "signature"], [41, 4, 1, "", "size"], [41, 2, 1, "", "support"], [41, 2, 1, "", "transpositions"], [41, 2, 1, "", "unrank_lex"], [41, 2, 1, "", "unrank_nonlex"], [41, 2, 1, "", "unrank_trotterjohnson"]], "sympy.combinatorics.polyhedron": [[42, 1, 1, "", "Polyhedron"]], "sympy.combinatorics.polyhedron.Polyhedron": [[42, 4, 1, "", "array_form"], [42, 4, 1, "", "corners"], [42, 4, 1, "", "cyclic_form"], [42, 4, 1, "", "edges"], [42, 4, 1, "", "faces"], [42, 4, 1, "", "pgroup"], [42, 2, 1, "", "reset"], [42, 2, 1, "", "rotate"], [42, 4, 1, "", "size"], [42, 4, 1, "", "vertices"]], "sympy.combinatorics.prufer": [[43, 1, 1, "", "Prufer"]], "sympy.combinatorics.prufer.Prufer": [[43, 2, 1, "", "edges"], [43, 2, 1, "", "next"], [43, 4, 1, "", "nodes"], [43, 2, 1, "", "prev"], [43, 2, 1, "", "prufer_rank"], [43, 4, 1, "", "prufer_repr"], [43, 4, 1, "", "rank"], [43, 4, 1, "", "size"], [43, 2, 1, "", "to_prufer"], [43, 2, 1, "", "to_tree"], [43, 4, 1, "", "tree_repr"], [43, 2, 1, "", "unrank"]], "sympy.combinatorics.subsets": [[44, 1, 1, "", "Subset"], [44, 2, 1, "", "ksubsets"]], "sympy.combinatorics.subsets.Subset": [[44, 2, 1, "", "bitlist_from_subset"], [44, 4, 1, "", "cardinality"], [44, 2, 1, "", "iterate_binary"], [44, 2, 1, "", "iterate_graycode"], [44, 2, 1, "", "next_binary"], [44, 2, 1, "", "next_gray"], [44, 2, 1, "", "next_lexicographic"], [44, 2, 1, "", "prev_binary"], [44, 2, 1, "", "prev_gray"], [44, 2, 1, "", "prev_lexicographic"], [44, 4, 1, "", "rank_binary"], [44, 4, 1, "", "rank_gray"], [44, 4, 1, "", "rank_lexicographic"], [44, 4, 1, "", "size"], [44, 4, 1, "", "subset"], [44, 2, 1, "", "subset_from_bitlist"], [44, 2, 1, "", "subset_indices"], [44, 4, 1, "", "superset"], [44, 4, 1, "", "superset_size"], [44, 2, 1, "", "unrank_binary"], [44, 2, 1, "", "unrank_gray"]], "sympy.combinatorics.tensor_can": [[45, 3, 1, "", "bsgs_direct_product"], [45, 3, 1, "", "canonicalize"], [45, 3, 1, "", "double_coset_can_rep"], [45, 3, 1, "", "get_symmetric_group_sgs"]], "sympy.combinatorics.testutil": [[46, 3, 1, "", "_cmp_perm_lists"], [46, 3, 1, "", "_naive_list_centralizer"], [46, 3, 1, "", "_verify_bsgs"], [46, 3, 1, "", "_verify_centralizer"], [46, 3, 1, "", "_verify_normal_closure"]], "sympy.combinatorics.util": [[47, 3, 1, "", "_base_ordering"], [47, 3, 1, "", "_check_cycles_alt_sym"], [47, 3, 1, "", "_distribute_gens_by_base"], [47, 3, 1, "", "_handle_precomputed_bsgs"], [47, 3, 1, "", "_orbits_transversals_from_bsgs"], [47, 3, 1, "", "_remove_gens"], [47, 3, 1, "", "_strip"], [47, 3, 1, "", "_strong_gens_from_distr"]], "sympy.concrete.expr_with_intlimits": [[48, 1, 1, "", "ExprWithIntLimits"]], "sympy.concrete.expr_with_intlimits.ExprWithIntLimits": [[48, 2, 1, "", "change_index"], [48, 4, 1, "", "has_empty_sequence"], [48, 2, 1, "", "index"], [48, 2, 1, "", "reorder"], [48, 2, 1, "", "reorder_limit"]], "sympy.concrete.expr_with_limits": [[76, 1, 1, "", "ExprWithLimits"]], "sympy.concrete.expr_with_limits.ExprWithLimits": [[76, 4, 1, "", "bound_symbols"], [76, 4, 1, "", "free_symbols"], [76, 4, 1, "", "function"], [76, 4, 1, "", "has_finite_limits"], [76, 4, 1, "", "has_reversed_limits"], [76, 4, 1, "", "is_number"], [76, 4, 1, "", "limits"], [76, 4, 1, "", "variables"]], "sympy.concrete.gosper": [[48, 3, 1, "", "gosper_normal"], [48, 3, 1, "", "gosper_sum"], [48, 3, 1, "", "gosper_term"]], "sympy.concrete.products": [[48, 1, 1, "", "Product"], [48, 3, 1, "", "product"]], "sympy.concrete.products.Product": [[48, 2, 1, "", "is_convergent"], [48, 2, 1, "", "reverse_order"]], "sympy.concrete.summations": [[48, 1, 1, "", "Sum"], [48, 3, 1, "", "summation"]], "sympy.concrete.summations.Sum": [[48, 2, 1, "", "euler_maclaurin"], [48, 2, 1, "", "eval_zeta_function"], [48, 2, 1, "", "is_absolutely_convergent"], [48, 2, 1, "", "is_convergent"], [48, 2, 1, "", "reverse_order"]], "sympy.core": [[49, 0, 0, "-", "add"], [49, 0, 0, "-", "assumptions"], [49, 0, 0, "-", "basic"], [49, 0, 0, "-", "cache"], [49, 0, 0, "-", "containers"], [49, 0, 0, "-", "core"], [49, 0, 0, "-", "evalf"], [49, 0, 0, "-", "expr"], [49, 0, 0, "-", "exprtools"], [49, 0, 0, "-", "function"], [49, 0, 0, "-", "kind"], [49, 0, 0, "-", "mod"], [49, 0, 0, "-", "mul"], [49, 0, 0, "-", "multidimensional"], [49, 0, 0, "-", "numbers"], [49, 0, 0, "-", "power"], [49, 0, 0, "-", "random"], [49, 0, 0, "-", "relational"], [49, 0, 0, "-", "singleton"], [49, 0, 0, "-", "symbol"], [49, 0, 0, "-", "sympify"], [49, 0, 0, "-", "traversal"]], "sympy.core.add": [[49, 1, 1, "", "Add"]], "sympy.core.add.Add": [[49, 2, 1, "", "as_coeff_Add"], [49, 2, 1, "", "as_coeff_add"], [49, 2, 1, "", "as_content_primitive"], [49, 2, 1, "", "as_numer_denom"], [49, 2, 1, "", "as_real_imag"], [49, 2, 1, "", "as_two_terms"], [49, 2, 1, "", "class_key"], [49, 2, 1, "", "extract_leading_order"], [49, 2, 1, "", "flatten"], [49, 2, 1, "", "primitive"]], "sympy.core.basic": [[49, 1, 1, "", "Atom"], [49, 1, 1, "", "Basic"]], "sympy.core.basic.Basic": [[49, 4, 1, "", "args"], [49, 2, 1, "", "as_content_primitive"], [49, 2, 1, "", "as_dummy"], [49, 4, 1, "", "assumptions0"], [49, 2, 1, "", "atoms"], [49, 4, 1, "", "canonical_variables"], [49, 2, 1, "", "class_key"], [49, 2, 1, "", "compare"], [49, 2, 1, "", "count"], [49, 2, 1, "", "count_ops"], [49, 2, 1, "", "doit"], [49, 2, 1, "", "dummy_eq"], [49, 2, 1, "", "find"], [49, 4, 1, "", "free_symbols"], [49, 2, 1, "", "fromiter"], [49, 4, 1, "", "func"], [49, 2, 1, "", "has"], [49, 2, 1, "", "has_free"], [49, 4, 1, "", "is_comparable"], [49, 2, 1, "", "match"], [49, 2, 1, "", "matches"], [49, 2, 1, "", "rcall"], [49, 2, 1, "", "refine"], [49, 2, 1, "", "replace"], [49, 2, 1, "", "rewrite"], [49, 2, 1, "", "simplify"], [49, 2, 1, "", "sort_key"], [49, 2, 1, "", "subs"], [49, 2, 1, "", "xreplace"]], "sympy.core.cache": [[49, 3, 1, "", "__cacheit"]], "sympy.core.containers": [[49, 1, 1, "", "Dict"], [49, 1, 1, "", "Tuple"], [49, 1, 1, "", "TupleKind"]], "sympy.core.containers.Dict": [[49, 2, 1, "", "get"], [49, 2, 1, "", "items"], [49, 2, 1, "", "keys"], [49, 2, 1, "", "values"]], "sympy.core.containers.Tuple": [[49, 2, 1, "", "index"], [49, 4, 1, "", "kind"], [49, 2, 1, "", "tuple_count"]], "sympy.core.evalf": [[49, 1, 1, "", "EvalfMixin"], [49, 3, 1, "", "N"], [49, 1, 1, "", "PrecisionExhausted"]], "sympy.core.evalf.EvalfMixin": [[49, 2, 1, "", "evalf"], [49, 2, 1, "", "n"]], "sympy.core.expr": [[49, 1, 1, "", "AtomicExpr"], [49, 1, 1, "", "Expr"], [49, 1, 1, "", "UnevaluatedExpr"]], "sympy.core.expr.Expr": [[49, 2, 1, "", "apart"], [49, 2, 1, "", "args_cnc"], [49, 2, 1, "", "as_coeff_Add"], [49, 2, 1, "", "as_coeff_Mul"], [49, 2, 1, "", "as_coeff_add"], [49, 2, 1, "", "as_coeff_exponent"], [49, 2, 1, "", "as_coeff_mul"], [49, 2, 1, "", "as_coefficient"], [49, 2, 1, "", "as_coefficients_dict"], [49, 2, 1, "", "as_content_primitive"], [49, 2, 1, "", "as_expr"], [49, 2, 1, "", "as_independent"], [49, 2, 1, "", "as_leading_term"], [49, 2, 1, "", "as_numer_denom"], [49, 2, 1, "", "as_ordered_factors"], [49, 2, 1, "", "as_ordered_terms"], [49, 2, 1, "", "as_poly"], [49, 2, 1, "", "as_powers_dict"], [49, 2, 1, "", "as_real_imag"], [49, 2, 1, "", "as_terms"], [49, 2, 1, "", "aseries"], [49, 2, 1, "", "cancel"], [49, 2, 1, "", "coeff"], [49, 2, 1, "", "collect"], [49, 2, 1, "", "combsimp"], [49, 2, 1, "", "compute_leading_term"], [49, 2, 1, "", "conjugate"], [49, 2, 1, "", "could_extract_minus_sign"], [49, 2, 1, "", "count_ops"], [49, 2, 1, "", "equals"], [49, 2, 1, "", "expand"], [49, 4, 1, "", "expr_free_symbols"], [49, 2, 1, "", "extract_additively"], [49, 2, 1, "", "extract_branch_factor"], [49, 2, 1, "", "extract_multiplicatively"], [49, 2, 1, "", "factor"], [49, 2, 1, "", "fourier_series"], [49, 2, 1, "", "fps"], [49, 2, 1, "", "gammasimp"], [49, 2, 1, "", "getO"], [49, 2, 1, "", "getn"], [49, 2, 1, "", "integrate"], [49, 2, 1, "", "invert"], [49, 2, 1, "", "is_algebraic_expr"], [49, 2, 1, "", "is_constant"], [49, 2, 1, "", "is_meromorphic"], [49, 4, 1, "", "is_number"], [49, 2, 1, "", "is_polynomial"], [49, 2, 1, "", "is_rational_function"], [49, 2, 1, "", "leadterm"], [49, 2, 1, "", "limit"], [49, 2, 1, "", "lseries"], [49, 2, 1, "", "normal"], [49, 2, 1, "", "nseries"], [49, 2, 1, "", "nsimplify"], [49, 2, 1, "", "powsimp"], [49, 2, 1, "", "primitive"], [49, 2, 1, "", "radsimp"], [49, 2, 1, "", "ratsimp"], [49, 2, 1, "", "removeO"], [49, 2, 1, "", "round"], [49, 2, 1, "", "separate"], [49, 2, 1, "", "series"], [49, 2, 1, "", "taylor_term"], [49, 2, 1, "", "together"], [49, 2, 1, "", "trigsimp"]], "sympy.core.exprtools": [[49, 3, 1, "", "factor_terms"], [49, 3, 1, "", "gcd_terms"]], "sympy.core.function": [[49, 1, 1, "", "Derivative"], [49, 1, 1, "", "Function"], [49, 1, 1, "", "FunctionClass"], [49, 1, 1, "", "Lambda"], [49, 1, 1, "", "PoleError"], [49, 1, 1, "", "Subs"], [49, 1, 1, "", "WildFunction"], [49, 3, 1, "", "count_ops"], [49, 3, 1, "", "diff"], [49, 3, 1, "", "expand"], [49, 3, 1, "", "expand_complex"], [49, 3, 1, "", "expand_func"], [49, 3, 1, "", "expand_log"], [49, 3, 1, "", "expand_mul"], [49, 3, 1, "", "expand_multinomial"], [49, 3, 1, "", "expand_power_base"], [49, 3, 1, "", "expand_power_exp"], [49, 3, 1, "", "expand_trig"], [49, 3, 1, "", "nfloat"]], "sympy.core.function.Derivative": [[49, 4, 1, "", "_diff_wrt"], [49, 2, 1, "", "_sort_variable_count"], [49, 2, 1, "", "as_finite_difference"], [49, 2, 1, "", "doit_numerically"]], "sympy.core.function.Function": [[49, 2, 1, "", "as_base_exp"], [49, 2, 1, "", "fdiff"], [49, 2, 1, "", "is_singular"]], "sympy.core.function.FunctionClass": [[49, 4, 1, "", "nargs"]], "sympy.core.function.Lambda": [[49, 4, 1, "", "bound_symbols"], [49, 4, 1, "", "expr"], [49, 4, 1, "", "is_identity"], [49, 4, 1, "", "signature"], [49, 4, 1, "", "variables"]], "sympy.core.function.Subs": [[49, 4, 1, "", "bound_symbols"], [49, 4, 1, "", "expr"], [49, 4, 1, "", "point"], [49, 4, 1, "", "variables"]], "sympy.core.kind": [[49, 5, 1, "", "BooleanKind"], [49, 1, 1, "", "Kind"], [49, 5, 1, "", "NumberKind"], [49, 5, 1, "", "UndefinedKind"]], "sympy.core.mod": [[49, 1, 1, "", "Mod"]], "sympy.core.mul": [[49, 1, 1, "", "Mul"], [49, 3, 1, "", "prod"]], "sympy.core.mul.Mul": [[49, 2, 1, "", "as_coeff_Mul"], [49, 2, 1, "", "as_content_primitive"], [49, 2, 1, "", "as_ordered_factors"], [49, 2, 1, "", "as_two_terms"], [49, 2, 1, "", "flatten"]], "sympy.core.multidimensional": [[49, 1, 1, "", "vectorize"]], "sympy.core.numbers": [[49, 1, 1, "", "AlgebraicNumber"], [49, 1, 1, "", "Catalan"], [49, 1, 1, "", "ComplexInfinity"], [49, 1, 1, "", "EulerGamma"], [49, 1, 1, "", "Exp1"], [49, 1, 1, "", "Float"], [49, 1, 1, "", "GoldenRatio"], [49, 1, 1, "", "Half"], [49, 1, 1, "", "ImaginaryUnit"], [49, 1, 1, "", "Infinity"], [49, 1, 1, "", "Integer"], [49, 1, 1, "", "NaN"], [49, 1, 1, "", "NegativeInfinity"], [49, 1, 1, "", "NegativeOne"], [49, 1, 1, "", "Number"], [49, 1, 1, "", "NumberSymbol"], [49, 1, 1, "", "One"], [49, 1, 1, "", "Pi"], [49, 1, 1, "", "Rational"], [49, 5, 1, "", "RealNumber"], [49, 1, 1, "", "TribonacciConstant"], [49, 1, 1, "", "Zero"], [49, 3, 1, "", "igcd"], [49, 3, 1, "", "ilcm"], [49, 3, 1, "", "mod_inverse"], [49, 3, 1, "", "seterr"]], "sympy.core.numbers.AlgebraicNumber": [[49, 2, 1, "", "__new__"], [49, 2, 1, "", "as_expr"], [49, 2, 1, "", "as_poly"], [49, 2, 1, "", "coeffs"], [49, 2, 1, "", "field_element"], [49, 4, 1, "", "is_aliased"], [49, 4, 1, "", "is_primitive_element"], [49, 2, 1, "", "minpoly_of_element"], [49, 2, 1, "", "native_coeffs"], [49, 2, 1, "", "primitive_element"], [49, 2, 1, "", "to_algebraic_integer"], [49, 2, 1, "", "to_primitive_element"], [49, 2, 1, "", "to_root"]], "sympy.core.numbers.Number": [[49, 2, 1, "", "as_coeff_Add"], [49, 2, 1, "", "as_coeff_Mul"], [49, 2, 1, "", "cofactors"], [49, 2, 1, "", "gcd"], [49, 2, 1, "", "lcm"]], "sympy.core.numbers.NumberSymbol": [[49, 2, 1, "", "approximation"]], "sympy.core.numbers.Rational": [[49, 2, 1, "", "as_coeff_Add"], [49, 2, 1, "", "as_coeff_Mul"], [49, 2, 1, "", "as_content_primitive"], [49, 2, 1, "", "factors"], [49, 2, 1, "", "limit_denominator"]], "sympy.core.power": [[49, 1, 1, "", "Pow"], [49, 3, 1, "", "integer_log"], [49, 3, 1, "", "integer_nthroot"]], "sympy.core.power.Pow": [[49, 2, 1, "", "as_base_exp"], [49, 2, 1, "", "as_content_primitive"]], "sympy.core.random": [[49, 3, 1, "", "_randint"], [49, 3, 1, "", "_randrange"], [49, 3, 1, "", "random_complex_number"], [49, 3, 1, "", "test_derivative_numerically"], [49, 3, 1, "", "verify_numerically"]], "sympy.core.relational": [[49, 5, 1, "", "Eq"], [49, 1, 1, "", "Equality"], [49, 5, 1, "", "Ge"], [49, 1, 1, "", "GreaterThan"], [49, 5, 1, "", "Gt"], [49, 5, 1, "", "Le"], [49, 1, 1, "", "LessThan"], [49, 5, 1, "", "Lt"], [49, 5, 1, "", "Ne"], [49, 5, 1, "", "Rel"], [49, 1, 1, "", "Relational"], [49, 1, 1, "", "StrictGreaterThan"], [49, 1, 1, "", "StrictLessThan"], [49, 1, 1, "", "Unequality"]], "sympy.core.relational.Equality": [[49, 2, 1, "", "as_poly"], [49, 2, 1, "", "integrate"]], "sympy.core.relational.Relational": [[49, 4, 1, "", "canonical"], [49, 2, 1, "", "equals"], [49, 4, 1, "", "lhs"], [49, 4, 1, "", "negated"], [49, 4, 1, "", "reversed"], [49, 4, 1, "", "reversedsign"], [49, 4, 1, "", "rhs"], [49, 4, 1, "", "strict"], [49, 4, 1, "", "weak"]], "sympy.core.singleton": [[49, 1, 1, "", "Singleton"], [49, 1, 1, "", "SingletonRegistry"]], "sympy.core.sorting": [[49, 3, 1, "", "default_sort_key"], [49, 3, 1, "", "ordered"]], "sympy.core.symbol": [[49, 1, 1, "", "Dummy"], [49, 1, 1, "", "Symbol"], [49, 1, 1, "", "Wild"], [49, 3, 1, "", "symbols"], [49, 3, 1, "", "var"]], "sympy.core.sympify": [[49, 3, 1, "", "sympify"]], "sympy.core.traversal": [[49, 3, 1, "", "bottom_up"], [49, 3, 1, "", "postorder_traversal"], [49, 3, 1, "", "preorder_traversal"], [49, 3, 1, "", "use"], [49, 3, 1, "", "walk"]], "sympy.crypto": [[50, 0, 0, "-", "crypto"]], "sympy.crypto.crypto": [[50, 3, 1, "", "AZ"], [50, 3, 1, "", "bifid5_square"], [50, 3, 1, "", "bifid6_square"], [50, 3, 1, "", "check_and_join"], [50, 3, 1, "", "cycle_list"], [50, 3, 1, "", "decipher_affine"], [50, 3, 1, "", "decipher_atbash"], [50, 3, 1, "", "decipher_bifid"], [50, 3, 1, "", "decipher_bifid5"], [50, 3, 1, "", "decipher_bifid6"], [50, 3, 1, "", "decipher_elgamal"], [50, 3, 1, "", "decipher_gm"], [50, 3, 1, "", "decipher_hill"], [50, 3, 1, "", "decipher_kid_rsa"], [50, 3, 1, "", "decipher_railfence"], [50, 3, 1, "", "decipher_rot13"], [50, 3, 1, "", "decipher_rsa"], [50, 3, 1, "", "decipher_shift"], [50, 3, 1, "", "decipher_vigenere"], [50, 3, 1, "", "decode_morse"], [50, 3, 1, "", "dh_private_key"], [50, 3, 1, "", "dh_public_key"], [50, 3, 1, "", "dh_shared_key"], [50, 3, 1, "", "elgamal_private_key"], [50, 3, 1, "", "elgamal_public_key"], [50, 3, 1, "", "encipher_affine"], [50, 3, 1, "", "encipher_atbash"], [50, 3, 1, "", "encipher_bifid"], [50, 3, 1, "", "encipher_bifid5"], [50, 3, 1, "", "encipher_bifid6"], [50, 3, 1, "", "encipher_elgamal"], [50, 3, 1, "", "encipher_gm"], [50, 3, 1, "", "encipher_hill"], [50, 3, 1, "", "encipher_kid_rsa"], [50, 3, 1, "", "encipher_railfence"], [50, 3, 1, "", "encipher_rot13"], [50, 3, 1, "", "encipher_rsa"], [50, 3, 1, "", "encipher_shift"], [50, 3, 1, "", "encipher_substitution"], [50, 3, 1, "", "encipher_vigenere"], [50, 3, 1, "", "encode_morse"], [50, 3, 1, "", "gm_private_key"], [50, 3, 1, "", "gm_public_key"], [50, 3, 1, "", "kid_rsa_private_key"], [50, 3, 1, "", "kid_rsa_public_key"], [50, 3, 1, "", "lfsr_autocorrelation"], [50, 3, 1, "", "lfsr_connection_polynomial"], [50, 3, 1, "", "lfsr_sequence"], [50, 3, 1, "", "padded_key"], [50, 3, 1, "", "rsa_private_key"], [50, 3, 1, "", "rsa_public_key"]], "sympy.diffgeom": [[51, 1, 1, "", "BaseCovarDerivativeOp"], [51, 1, 1, "", "BaseScalarField"], [51, 1, 1, "", "BaseVectorField"], [51, 1, 1, "", "Commutator"], [51, 1, 1, "", "CoordSystem"], [51, 1, 1, "", "CoordinateSymbol"], [51, 1, 1, "", "CovarDerivativeOp"], [51, 1, 1, "", "Differential"], [51, 1, 1, "", "LieDerivative"], [51, 1, 1, "", "Manifold"], [51, 1, 1, "", "Patch"], [51, 1, 1, "", "Point"], [51, 1, 1, "", "TensorProduct"], [51, 1, 1, "", "WedgeProduct"], [51, 3, 1, "", "intcurve_diffequ"], [51, 3, 1, "", "intcurve_series"], [51, 3, 1, "", "metric_to_Christoffel_1st"], [51, 3, 1, "", "metric_to_Christoffel_2nd"], [51, 3, 1, "", "metric_to_Ricci_components"], [51, 3, 1, "", "metric_to_Riemann_components"], [51, 3, 1, "", "twoform_to_matrix"], [51, 3, 1, "", "vectors_in_basis"]], "sympy.diffgeom.CoordSystem": [[51, 2, 1, "", "base_oneform"], [51, 2, 1, "", "base_oneforms"], [51, 2, 1, "", "base_scalar"], [51, 2, 1, "", "base_scalars"], [51, 2, 1, "", "base_vector"], [51, 2, 1, "", "base_vectors"], [51, 2, 1, "", "coord_function"], [51, 2, 1, "", "coord_functions"], [51, 2, 1, "", "coord_tuple_transform_to"], [51, 2, 1, "", "jacobian"], [51, 2, 1, "", "jacobian_determinant"], [51, 2, 1, "", "jacobian_matrix"], [51, 2, 1, "", "point"], [51, 2, 1, "", "point_to_coords"], [51, 2, 1, "", "transform"], [51, 2, 1, "", "transformation"]], "sympy.diffgeom.Point": [[51, 2, 1, "", "coords"]], "sympy.discrete": [[52, 0, 0, "-", "convolutions"], [52, 0, 0, "-", "transforms"]], "sympy.discrete.convolutions": [[52, 3, 1, "", "convolution"], [52, 3, 1, "", "convolution_fft"], [52, 3, 1, "", "convolution_fwht"], [52, 3, 1, "", "convolution_ntt"], [52, 3, 1, "", "convolution_subset"], [52, 3, 1, "", "covering_product"], [52, 3, 1, "", "intersecting_product"]], "sympy.discrete.transforms": [[52, 3, 1, "", "fft"], [52, 3, 1, "", "fwht"], [52, 3, 1, "", "ifft"], [52, 3, 1, "", "ifwht"], [52, 3, 1, "", "intt"], [52, 3, 1, "", "inverse_mobius_transform"], [52, 3, 1, "", "mobius_transform"], [52, 3, 1, "", "ntt"]], "sympy.external.pythonmpq": [[184, 1, 1, "", "PythonMPQ"]], "sympy.functions.combinatorial.factorials": [[54, 1, 1, "", "FallingFactorial"], [54, 1, 1, "", "MultiFactorial"], [54, 1, 1, "", "RisingFactorial"], [54, 1, 1, "", "binomial"], [54, 1, 1, "", "factorial"], [54, 1, 1, "", "factorial2"], [54, 1, 1, "", "subfactorial"]], "sympy.functions.combinatorial.numbers": [[54, 1, 1, "", "bell"], [54, 1, 1, "", "bernoulli"], [54, 1, 1, "", "catalan"], [54, 1, 1, "", "euler"], [54, 1, 1, "", "fibonacci"], [54, 1, 1, "", "genocchi"], [54, 1, 1, "", "harmonic"], [54, 1, 1, "", "lucas"], [54, 3, 1, "", "nC"], [54, 3, 1, "", "nP"], [54, 3, 1, "", "nT"], [54, 1, 1, "", "partition"], [54, 3, 1, "", "stirling"], [54, 1, 1, "", "tribonacci"]], "sympy.functions.elementary.complexes": [[55, 1, 1, "", "Abs"], [55, 1, 1, "", "arg"], [55, 1, 1, "", "conjugate"], [55, 1, 1, "", "im"], [55, 1, 1, "", "periodic_argument"], [55, 1, 1, "", "polar_lift"], [55, 1, 1, "", "principal_branch"], [55, 1, 1, "", "re"], [55, 1, 1, "", "sign"]], "sympy.functions.elementary.complexes.Abs": [[55, 2, 1, "", "fdiff"]], "sympy.functions.elementary.complexes.im": [[55, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.complexes.re": [[55, 2, 1, "", "as_real_imag"]], "sympy.functions.elementary.exponential": [[55, 1, 1, "", "LambertW"], [55, 1, 1, "", "exp"], [55, 1, 1, "", "exp_polar"], [55, 1, 1, "", "log"]], "sympy.functions.elementary.exponential.LambertW": [[55, 2, 1, "", "fdiff"]], "sympy.functions.elementary.exponential.exp": [[55, 2, 1, "", "as_real_imag"], [55, 4, 1, "", "base"], [55, 2, 1, "", "fdiff"], [55, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.exponential.log": [[55, 2, 1, "", "as_base_exp"], [55, 2, 1, "", "as_real_imag"], [55, 2, 1, "", "fdiff"], [55, 2, 1, "", "inverse"], [55, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic": [[55, 1, 1, "", "HyperbolicFunction"], [55, 1, 1, "", "acosh"], [55, 1, 1, "", "acoth"], [55, 1, 1, "", "acsch"], [55, 1, 1, "", "asech"], [55, 1, 1, "", "asinh"], [55, 1, 1, "", "atanh"], [55, 1, 1, "", "cosh"], [55, 1, 1, "", "coth"], [55, 1, 1, "", "csch"], [55, 1, 1, "", "sech"], [55, 1, 1, "", "sinh"], [55, 1, 1, "", "tanh"]], "sympy.functions.elementary.hyperbolic.acosh": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acoth": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.acsch": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asech": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.asinh": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.atanh": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.coth": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.hyperbolic.csch": [[55, 2, 1, "", "fdiff"], [55, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.sinh": [[55, 2, 1, "", "as_real_imag"], [55, 2, 1, "", "fdiff"], [55, 2, 1, "", "inverse"], [55, 2, 1, "", "taylor_term"]], "sympy.functions.elementary.hyperbolic.tanh": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.integers": [[55, 1, 1, "", "RoundFunction"], [55, 1, 1, "", "ceiling"], [55, 1, 1, "", "floor"], [55, 1, 1, "", "frac"]], "sympy.functions.elementary.miscellaneous": [[55, 1, 1, "", "IdentityFunction"], [55, 1, 1, "", "Max"], [55, 1, 1, "", "Min"], [55, 3, 1, "", "cbrt"], [55, 3, 1, "", "real_root"], [55, 3, 1, "", "root"], [55, 3, 1, "", "sqrt"]], "sympy.functions.elementary.piecewise": [[55, 1, 1, "", "ExprCondPair"], [55, 1, 1, "", "Piecewise"], [55, 3, 1, "", "piecewise_fold"]], "sympy.functions.elementary.piecewise.ExprCondPair": [[55, 4, 1, "", "cond"], [55, 4, 1, "", "expr"]], "sympy.functions.elementary.piecewise.Piecewise": [[55, 2, 1, "", "_eval_integral"], [55, 2, 1, "", "as_expr_set_pairs"], [55, 2, 1, "", "doit"], [55, 2, 1, "", "eval"], [55, 2, 1, "", "piecewise_integrate"]], "sympy.functions.elementary.trigonometric": [[55, 1, 1, "", "acos"], [55, 1, 1, "", "acot"], [55, 1, 1, "", "acsc"], [55, 1, 1, "", "asec"], [55, 1, 1, "", "asin"], [55, 1, 1, "", "atan"], [55, 1, 1, "", "atan2"], [55, 1, 1, "", "cos"], [55, 1, 1, "", "cot"], [55, 1, 1, "", "csc"], [55, 1, 1, "", "sec"], [55, 1, 1, "", "sin"], [55, 1, 1, "", "sinc"], [55, 1, 1, "", "tan"]], "sympy.functions.elementary.trigonometric.acos": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acot": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.acsc": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asec": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.asin": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.atan": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.cot": [[55, 2, 1, "", "inverse"]], "sympy.functions.elementary.trigonometric.tan": [[55, 2, 1, "", "inverse"]], "sympy.functions.special": [[57, 0, 0, "-", "bessel"], [57, 0, 0, "-", "beta_functions"], [57, 0, 0, "-", "elliptic_integrals"], [57, 0, 0, "-", "error_functions"], [57, 0, 0, "-", "gamma_functions"], [57, 0, 0, "-", "mathieu_functions"], [57, 0, 0, "-", "polynomials"], [57, 0, 0, "-", "singularity_functions"], [57, 0, 0, "-", "zeta_functions"]], "sympy.functions.special.bessel": [[57, 1, 1, "", "AiryBase"], [57, 1, 1, "", "BesselBase"], [57, 1, 1, "", "airyai"], [57, 1, 1, "", "airyaiprime"], [57, 1, 1, "", "airybi"], [57, 1, 1, "", "airybiprime"], [57, 1, 1, "", "besseli"], [57, 1, 1, "", "besselj"], [57, 1, 1, "", "besselk"], [57, 1, 1, "", "bessely"], [57, 1, 1, "", "hankel1"], [57, 1, 1, "", "hankel2"], [57, 1, 1, "", "jn"], [57, 3, 1, "", "jn_zeros"], [57, 1, 1, "", "marcumq"], [57, 1, 1, "", "yn"]], "sympy.functions.special.bessel.BesselBase": [[57, 4, 1, "", "argument"], [57, 4, 1, "", "order"]], "sympy.functions.special.beta_functions": [[57, 1, 1, "", "beta"]], "sympy.functions.special.bsplines": [[57, 3, 1, "", "bspline_basis"], [57, 3, 1, "", "bspline_basis_set"], [57, 3, 1, "", "interpolating_spline"]], "sympy.functions.special.delta_functions": [[57, 1, 1, "", "DiracDelta"], [57, 1, 1, "", "Heaviside"]], "sympy.functions.special.delta_functions.DiracDelta": [[57, 2, 1, "", "eval"], [57, 2, 1, "", "fdiff"], [57, 2, 1, "", "is_simple"]], "sympy.functions.special.delta_functions.Heaviside": [[57, 2, 1, "", "eval"], [57, 2, 1, "", "fdiff"], [57, 4, 1, "", "pargs"]], "sympy.functions.special.elliptic_integrals": [[57, 1, 1, "", "elliptic_e"], [57, 1, 1, "", "elliptic_f"], [57, 1, 1, "", "elliptic_k"], [57, 1, 1, "", "elliptic_pi"]], "sympy.functions.special.error_functions": [[57, 1, 1, "", "Chi"], [57, 1, 1, "", "Ci"], [57, 3, 1, "", "E1"], [57, 1, 1, "", "Ei"], [57, 1, 1, "", "FresnelIntegral"], [57, 1, 1, "", "Li"], [57, 1, 1, "", "Shi"], [57, 1, 1, "", "Si"], [57, 1, 1, "", "erf"], [57, 1, 1, "", "erf2"], [57, 1, 1, "", "erf2inv"], [57, 1, 1, "", "erfc"], [57, 1, 1, "", "erfcinv"], [57, 1, 1, "", "erfi"], [57, 1, 1, "", "erfinv"], [57, 1, 1, "", "expint"], [57, 1, 1, "", "fresnelc"], [57, 1, 1, "", "fresnels"], [57, 1, 1, "", "li"]], "sympy.functions.special.error_functions.erf": [[57, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfc": [[57, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfcinv": [[57, 2, 1, "", "inverse"]], "sympy.functions.special.error_functions.erfinv": [[57, 2, 1, "", "inverse"]], "sympy.functions.special.gamma_functions": [[57, 1, 1, "", "digamma"], [57, 1, 1, "", "gamma"], [57, 1, 1, "", "loggamma"], [57, 1, 1, "", "lowergamma"], [57, 1, 1, "", "multigamma"], [57, 1, 1, "", "polygamma"], [57, 1, 1, "", "trigamma"], [57, 1, 1, "", "uppergamma"]], "sympy.functions.special.hyper": [[57, 1, 1, "", "appellf1"], [57, 1, 1, "", "hyper"], [57, 1, 1, "", "meijerg"]], "sympy.functions.special.hyper.hyper": [[57, 4, 1, "", "ap"], [57, 4, 1, "", "argument"], [57, 4, 1, "", "bq"], [57, 4, 1, "", "convergence_statement"], [57, 4, 1, "", "eta"], [57, 4, 1, "", "radius_of_convergence"]], "sympy.functions.special.hyper.meijerg": [[57, 4, 1, "", "an"], [57, 4, 1, "", "aother"], [57, 4, 1, "", "ap"], [57, 4, 1, "", "argument"], [57, 4, 1, "", "bm"], [57, 4, 1, "", "bother"], [57, 4, 1, "", "bq"], [57, 4, 1, "", "delta"], [57, 2, 1, "", "get_period"], [57, 2, 1, "", "integrand"], [57, 4, 1, "", "is_number"], [57, 4, 1, "", "nu"]], "sympy.functions.special.mathieu_functions": [[57, 1, 1, "", "MathieuBase"], [57, 1, 1, "", "mathieuc"], [57, 1, 1, "", "mathieucprime"], [57, 1, 1, "", "mathieus"], [57, 1, 1, "", "mathieusprime"]], "sympy.functions.special.polynomials": [[57, 1, 1, "", "assoc_laguerre"], [57, 1, 1, "", "assoc_legendre"], [57, 1, 1, "", "chebyshevt"], [57, 1, 1, "", "chebyshevt_root"], [57, 1, 1, "", "chebyshevu"], [57, 1, 1, "", "chebyshevu_root"], [57, 1, 1, "", "gegenbauer"], [57, 1, 1, "", "hermite"], [57, 1, 1, "", "jacobi"], [57, 3, 1, "", "jacobi_normalized"], [57, 1, 1, "", "laguerre"], [57, 1, 1, "", "legendre"]], "sympy.functions.special.singularity_functions": [[57, 1, 1, "", "SingularityFunction"]], "sympy.functions.special.singularity_functions.SingularityFunction": [[57, 2, 1, "", "eval"], [57, 2, 1, "", "fdiff"]], "sympy.functions.special.spherical_harmonics": [[57, 1, 1, "", "Ynm"], [57, 3, 1, "", "Ynm_c"], [57, 1, 1, "", "Znm"]], "sympy.functions.special.tensor_functions": [[57, 3, 1, "", "Eijk"], [57, 1, 1, "", "KroneckerDelta"], [57, 1, 1, "", "LeviCivita"], [57, 3, 1, "", "eval_levicivita"]], "sympy.functions.special.tensor_functions.KroneckerDelta": [[57, 2, 1, "", "eval"], [57, 4, 1, "", "indices_contain_equal_information"], [57, 4, 1, "", "is_above_fermi"], [57, 4, 1, "", "is_below_fermi"], [57, 4, 1, "", "is_only_above_fermi"], [57, 4, 1, "", "is_only_below_fermi"], [57, 4, 1, "", "killable_index"], [57, 4, 1, "", "preferred_index"]], "sympy.functions.special.zeta_functions": [[57, 1, 1, "", "dirichlet_eta"], [57, 1, 1, "", "lerchphi"], [57, 1, 1, "", "polylog"], [57, 1, 1, "", "stieltjes"], [57, 1, 1, "", "zeta"]], "sympy.geometry": [[58, 0, 0, "-", "curve"], [59, 0, 0, "-", "ellipse"], [60, 0, 0, "-", "entity"], [62, 0, 0, "-", "line"], [63, 0, 0, "-", "plane"], [64, 0, 0, "-", "point"], [65, 0, 0, "-", "polygon"], [66, 0, 0, "-", "util"]], "sympy.geometry.curve": [[58, 1, 1, "", "Curve"]], "sympy.geometry.curve.Curve": [[58, 4, 1, "", "ambient_dimension"], [58, 2, 1, "", "arbitrary_point"], [58, 4, 1, "", "free_symbols"], [58, 4, 1, "", "functions"], [58, 4, 1, "", "length"], [58, 4, 1, "", "limits"], [58, 4, 1, "", "parameter"], [58, 2, 1, "", "plot_interval"], [58, 2, 1, "", "rotate"], [58, 2, 1, "", "scale"], [58, 2, 1, "", "translate"]], "sympy.geometry.ellipse": [[59, 1, 1, "", "Circle"], [59, 1, 1, "", "Ellipse"]], "sympy.geometry.ellipse.Circle": [[59, 4, 1, "", "circumference"], [59, 2, 1, "", "equation"], [59, 2, 1, "", "intersection"], [59, 4, 1, "", "radius"], [59, 2, 1, "", "reflect"], [59, 2, 1, "", "scale"], [59, 4, 1, "", "vradius"]], "sympy.geometry.ellipse.Ellipse": [[59, 4, 1, "", "apoapsis"], [59, 2, 1, "", "arbitrary_point"], [59, 4, 1, "", "area"], [59, 2, 1, "", "auxiliary_circle"], [59, 4, 1, "", "bounds"], [59, 4, 1, "", "center"], [59, 4, 1, "", "circumference"], [59, 2, 1, "", "director_circle"], [59, 4, 1, "", "eccentricity"], [59, 2, 1, "", "encloses_point"], [59, 2, 1, "", "equation"], [59, 2, 1, "", "evolute"], [59, 4, 1, "", "foci"], [59, 4, 1, "", "focus_distance"], [59, 4, 1, "", "hradius"], [59, 2, 1, "", "intersection"], [59, 2, 1, "", "is_tangent"], [59, 4, 1, "", "major"], [59, 4, 1, "", "minor"], [59, 2, 1, "", "normal_lines"], [59, 4, 1, "", "periapsis"], [59, 2, 1, "", "plot_interval"], [59, 2, 1, "", "polar_second_moment_of_area"], [59, 2, 1, "", "random_point"], [59, 2, 1, "", "reflect"], [59, 2, 1, "", "rotate"], [59, 2, 1, "", "scale"], [59, 2, 1, "", "second_moment_of_area"], [59, 2, 1, "", "section_modulus"], [59, 4, 1, "", "semilatus_rectum"], [59, 2, 1, "", "tangent_lines"], [59, 4, 1, "", "vradius"]], "sympy.geometry.entity": [[60, 1, 1, "", "GeometryEntity"]], "sympy.geometry.entity.GeometryEntity": [[60, 4, 1, "", "ambient_dimension"], [60, 4, 1, "", "bounds"], [60, 2, 1, "", "encloses"], [60, 2, 1, "", "intersection"], [60, 2, 1, "", "is_similar"], [60, 2, 1, "", "parameter_value"], [60, 2, 1, "", "reflect"], [60, 2, 1, "", "rotate"], [60, 2, 1, "", "scale"], [60, 2, 1, "", "translate"]], "sympy.geometry.line": [[62, 1, 1, "", "Line"], [62, 1, 1, "", "Line2D"], [62, 1, 1, "", "Line3D"], [62, 1, 1, "", "LinearEntity"], [62, 1, 1, "", "LinearEntity2D"], [62, 1, 1, "", "LinearEntity3D"], [62, 1, 1, "", "Ray"], [62, 1, 1, "", "Ray2D"], [62, 1, 1, "", "Ray3D"], [62, 1, 1, "", "Segment"], [62, 1, 1, "", "Segment2D"], [62, 1, 1, "", "Segment3D"]], "sympy.geometry.line.Line": [[62, 2, 1, "", "contains"], [62, 2, 1, "", "distance"], [62, 2, 1, "", "equals"], [62, 2, 1, "", "plot_interval"]], "sympy.geometry.line.Line2D": [[62, 4, 1, "", "coefficients"], [62, 2, 1, "", "equation"]], "sympy.geometry.line.Line3D": [[62, 2, 1, "", "equation"]], "sympy.geometry.line.LinearEntity": [[62, 4, 1, "", "ambient_dimension"], [62, 2, 1, "", "angle_between"], [62, 2, 1, "", "arbitrary_point"], [62, 2, 1, "", "are_concurrent"], [62, 2, 1, "", "bisectors"], [62, 2, 1, "", "contains"], [62, 4, 1, "", "direction"], [62, 2, 1, "", "intersection"], [62, 2, 1, "", "is_parallel"], [62, 2, 1, "", "is_perpendicular"], [62, 2, 1, "", "is_similar"], [62, 4, 1, "", "length"], [62, 4, 1, "", "p1"], [62, 4, 1, "", "p2"], [62, 2, 1, "", "parallel_line"], [62, 2, 1, "", "perpendicular_line"], [62, 2, 1, "", "perpendicular_segment"], [62, 4, 1, "", "points"], [62, 2, 1, "", "projection"], [62, 2, 1, "", "random_point"], [62, 2, 1, "", "smallest_angle_between"]], "sympy.geometry.line.LinearEntity2D": [[62, 4, 1, "", "bounds"], [62, 2, 1, "", "perpendicular_line"], [62, 4, 1, "", "slope"]], "sympy.geometry.line.LinearEntity3D": [[62, 4, 1, "", "direction_cosine"], [62, 4, 1, "", "direction_ratio"]], "sympy.geometry.line.Ray": [[62, 2, 1, "", "contains"], [62, 2, 1, "", "distance"], [62, 2, 1, "", "equals"], [62, 2, 1, "", "plot_interval"], [62, 4, 1, "", "source"]], "sympy.geometry.line.Ray2D": [[62, 2, 1, "", "closing_angle"], [62, 4, 1, "", "xdirection"], [62, 4, 1, "", "ydirection"]], "sympy.geometry.line.Ray3D": [[62, 4, 1, "", "xdirection"], [62, 4, 1, "", "ydirection"], [62, 4, 1, "", "zdirection"]], "sympy.geometry.line.Segment": [[62, 2, 1, "", "contains"], [62, 2, 1, "", "distance"], [62, 2, 1, "", "equals"], [62, 4, 1, "", "length"], [62, 4, 1, "", "midpoint"], [62, 2, 1, "", "perpendicular_bisector"], [62, 2, 1, "", "plot_interval"]], "sympy.geometry.plane": [[63, 1, 1, "", "Plane"]], "sympy.geometry.plane.Plane": [[63, 2, 1, "", "angle_between"], [63, 2, 1, "", "arbitrary_point"], [63, 2, 1, "", "are_concurrent"], [63, 2, 1, "", "distance"], [63, 2, 1, "", "equals"], [63, 2, 1, "", "equation"], [63, 2, 1, "", "intersection"], [63, 2, 1, "", "is_coplanar"], [63, 2, 1, "", "is_parallel"], [63, 2, 1, "", "is_perpendicular"], [63, 4, 1, "", "normal_vector"], [63, 4, 1, "", "p1"], [63, 2, 1, "", "parallel_plane"], [63, 2, 1, "", "parameter_value"], [63, 2, 1, "", "perpendicular_line"], [63, 2, 1, "", "perpendicular_plane"], [63, 2, 1, "", "projection"], [63, 2, 1, "", "projection_line"], [63, 2, 1, "", "random_point"]], "sympy.geometry.point": [[64, 1, 1, "", "Point"], [64, 1, 1, "", "Point2D"], [64, 1, 1, "", "Point3D"]], "sympy.geometry.point.Point": [[64, 2, 1, "", "affine_rank"], [64, 4, 1, "", "ambient_dimension"], [64, 2, 1, "", "are_coplanar"], [64, 2, 1, "", "canberra_distance"], [64, 2, 1, "", "distance"], [64, 2, 1, "", "dot"], [64, 2, 1, "", "equals"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "is_collinear"], [64, 2, 1, "", "is_concyclic"], [64, 4, 1, "", "is_nonzero"], [64, 2, 1, "", "is_scalar_multiple"], [64, 4, 1, "", "is_zero"], [64, 4, 1, "", "length"], [64, 2, 1, "", "midpoint"], [64, 4, 1, "", "origin"], [64, 4, 1, "", "orthogonal_direction"], [64, 2, 1, "", "project"], [64, 2, 1, "", "taxicab_distance"], [64, 4, 1, "", "unit"]], "sympy.geometry.point.Point2D": [[64, 4, 1, "", "bounds"], [64, 4, 1, "", "coordinates"], [64, 2, 1, "", "rotate"], [64, 2, 1, "", "scale"], [64, 2, 1, "", "transform"], [64, 2, 1, "", "translate"], [64, 4, 1, "", "x"], [64, 4, 1, "", "y"]], "sympy.geometry.point.Point3D": [[64, 2, 1, "", "are_collinear"], [64, 4, 1, "", "coordinates"], [64, 2, 1, "", "direction_cosine"], [64, 2, 1, "", "direction_ratio"], [64, 2, 1, "", "intersection"], [64, 2, 1, "", "scale"], [64, 2, 1, "", "transform"], [64, 2, 1, "", "translate"], [64, 4, 1, "", "x"], [64, 4, 1, "", "y"], [64, 4, 1, "", "z"]], "sympy.geometry.polygon": [[65, 1, 1, "", "Polygon"], [65, 1, 1, "", "RegularPolygon"], [65, 1, 1, "", "Triangle"]], "sympy.geometry.polygon.Polygon": [[65, 4, 1, "", "angles"], [65, 2, 1, "", "arbitrary_point"], [65, 4, 1, "", "area"], [65, 2, 1, "", "bisectors"], [65, 4, 1, "", "bounds"], [65, 4, 1, "", "centroid"], [65, 2, 1, "", "cut_section"], [65, 2, 1, "", "distance"], [65, 2, 1, "", "encloses_point"], [65, 2, 1, "", "first_moment_of_area"], [65, 2, 1, "", "intersection"], [65, 2, 1, "", "is_convex"], [65, 4, 1, "", "perimeter"], [65, 2, 1, "", "plot_interval"], [65, 2, 1, "", "polar_second_moment_of_area"], [65, 2, 1, "", "second_moment_of_area"], [65, 2, 1, "", "section_modulus"], [65, 4, 1, "", "sides"], [65, 4, 1, "", "vertices"]], "sympy.geometry.polygon.RegularPolygon": [[65, 4, 1, "", "angles"], [65, 4, 1, "", "apothem"], [65, 4, 1, "", "area"], [65, 4, 1, "", "args"], [65, 4, 1, "", "center"], [65, 4, 1, "", "centroid"], [65, 4, 1, "", "circumcenter"], [65, 4, 1, "", "circumcircle"], [65, 4, 1, "", "circumradius"], [65, 2, 1, "", "encloses_point"], [65, 4, 1, "", "exterior_angle"], [65, 4, 1, "", "incircle"], [65, 4, 1, "", "inradius"], [65, 4, 1, "", "interior_angle"], [65, 4, 1, "", "length"], [65, 4, 1, "", "radius"], [65, 2, 1, "", "reflect"], [65, 2, 1, "", "rotate"], [65, 4, 1, "", "rotation"], [65, 2, 1, "", "scale"], [65, 2, 1, "", "spin"], [65, 4, 1, "", "vertices"]], "sympy.geometry.polygon.Triangle": [[65, 4, 1, "", "altitudes"], [65, 2, 1, "", "bisectors"], [65, 4, 1, "", "circumcenter"], [65, 4, 1, "", "circumcircle"], [65, 4, 1, "", "circumradius"], [65, 4, 1, "", "eulerline"], [65, 4, 1, "", "excenters"], [65, 4, 1, "", "exradii"], [65, 4, 1, "", "incenter"], [65, 4, 1, "", "incircle"], [65, 4, 1, "", "inradius"], [65, 2, 1, "", "is_equilateral"], [65, 2, 1, "", "is_isosceles"], [65, 2, 1, "", "is_right"], [65, 2, 1, "", "is_scalene"], [65, 2, 1, "", "is_similar"], [65, 4, 1, "", "medial"], [65, 4, 1, "", "medians"], [65, 4, 1, "", "nine_point_circle"], [65, 4, 1, "", "orthocenter"], [65, 4, 1, "", "vertices"]], "sympy.geometry.util": [[66, 3, 1, "", "are_similar"], [66, 3, 1, "", "centroid"], [66, 3, 1, "", "convex_hull"], [66, 3, 1, "", "idiff"], [66, 3, 1, "", "intersection"]], "sympy.holonomic.holonomic": [[72, 1, 1, "", "DifferentialOperator"], [72, 1, 1, "", "DifferentialOperatorAlgebra"], [72, 3, 1, "", "DifferentialOperators"], [72, 1, 1, "", "HolonomicFunction"], [70, 3, 1, "", "_convert_poly_rat_alg"], [70, 3, 1, "", "_create_table"], [68, 3, 1, "", "expr_to_holonomic"], [68, 3, 1, "", "from_hyper"], [68, 3, 1, "", "from_meijerg"]], "sympy.holonomic.holonomic.DifferentialOperator": [[72, 2, 1, "", "is_singular"]], "sympy.holonomic.holonomic.HolonomicFunction": [[71, 2, 1, "", "composition"], [71, 2, 1, "", "diff"], [71, 2, 1, "", "evalf"], [71, 2, 1, "", "integrate"], [71, 2, 1, "", "series"], [71, 2, 1, "", "to_expr"], [71, 2, 1, "", "to_hyper"], [71, 2, 1, "", "to_meijerg"], [71, 2, 1, "", "to_sequence"]], "sympy.integrals.deltafunctions": [[76, 3, 1, "", "deltaintegrate"]], "sympy.integrals.heurisch": [[76, 3, 1, "", "components"], [76, 3, 1, "", "heurisch"]], "sympy.integrals.integrals": [[76, 1, 1, "", "Integral"], [76, 3, 1, "", "integrate"], [76, 3, 1, "", "line_integrate"]], "sympy.integrals.integrals.Integral": [[76, 2, 1, "", "as_sum"], [76, 2, 1, "", "doit"], [76, 4, 1, "", "free_symbols"], [76, 6, 1, "", "is_commutative"], [76, 2, 1, "", "principal_value"], [76, 2, 1, "", "transform"]], "sympy.integrals": [[76, 0, 0, "-", "intpoly"], [74, 0, 0, "-", "meijerint"], [74, 0, 0, "-", "meijerint_doc"], [76, 0, 0, "-", "transforms"]], "sympy.integrals.intpoly": [[76, 3, 1, "", "polytope_integrate"]], "sympy.integrals.manualintegrate": [[76, 3, 1, "", "integral_steps"], [76, 3, 1, "", "manualintegrate"]], "sympy.integrals.meijerint": [[74, 7, 1, "", "_CoeffExpValueError"], [74, 3, 1, "", "_check_antecedents"], [74, 3, 1, "", "_check_antecedents_1"], [74, 3, 1, "", "_check_antecedents_inversion"], [74, 3, 1, "", "_condsimp"], [74, 3, 1, "", "_create_lookup_table"], [74, 3, 1, "", "_dummy"], [74, 3, 1, "", "_dummy_"], [74, 3, 1, "", "_eval_cond"], [74, 3, 1, "", "_exponents"], [74, 3, 1, "", "_find_splitting_points"], [74, 3, 1, "", "_flip_g"], [74, 3, 1, "", "_functions"], [74, 3, 1, "", "_get_coeff_exp"], [74, 3, 1, "", "_guess_expansion"], [74, 3, 1, "", "_inflate_fox_h"], [74, 3, 1, "", "_inflate_g"], [74, 3, 1, "", "_int0oo"], [74, 3, 1, "", "_int0oo_1"], [74, 3, 1, "", "_int_inversion"], [74, 3, 1, "", "_is_analytic"], [74, 3, 1, "", "_meijerint_definite_2"], [74, 3, 1, "", "_meijerint_definite_3"], [74, 3, 1, "", "_meijerint_definite_4"], [74, 3, 1, "", "_meijerint_indefinite_1"], [74, 3, 1, "", "_mul_args"], [74, 3, 1, "", "_mul_as_two_parts"], [74, 3, 1, "", "_my_principal_branch"], [74, 3, 1, "", "_mytype"], [74, 3, 1, "", "_rewrite1"], [74, 3, 1, "", "_rewrite2"], [74, 3, 1, "", "_rewrite_inversion"], [74, 3, 1, "", "_rewrite_saxena"], [74, 3, 1, "", "_rewrite_saxena_1"], [74, 3, 1, "", "_rewrite_single"], [74, 3, 1, "", "_split_mul"], [74, 3, 1, "", "meijerint_definite"], [74, 3, 1, "", "meijerint_indefinite"], [74, 3, 1, "", "meijerint_inversion"]], "sympy.integrals.quadrature": [[76, 3, 1, "", "gauss_chebyshev_t"], [76, 3, 1, "", "gauss_chebyshev_u"], [76, 3, 1, "", "gauss_gen_laguerre"], [76, 3, 1, "", "gauss_hermite"], [76, 3, 1, "", "gauss_jacobi"], [76, 3, 1, "", "gauss_laguerre"], [76, 3, 1, "", "gauss_legendre"], [76, 3, 1, "", "gauss_lobatto"]], "sympy.integrals.rationaltools": [[76, 3, 1, "", "ratint"], [76, 3, 1, "", "ratint_logpart"], [76, 3, 1, "", "ratint_ratpart"]], "sympy.integrals.risch": [[76, 1, 1, "", "NonElementaryIntegral"], [76, 3, 1, "", "risch_integrate"]], "sympy.integrals.singularityfunctions": [[76, 3, 1, "", "singularityintegrate"]], "sympy.integrals.transforms": [[76, 1, 1, "", "CosineTransform"], [76, 1, 1, "", "FourierTransform"], [76, 1, 1, "", "HankelTransform"], [76, 1, 1, "", "IntegralTransform"], [76, 7, 1, "", "IntegralTransformError"], [76, 1, 1, "", "InverseCosineTransform"], [76, 1, 1, "", "InverseFourierTransform"], [76, 1, 1, "", "InverseHankelTransform"], [76, 1, 1, "", "InverseLaplaceTransform"], [76, 1, 1, "", "InverseMellinTransform"], [76, 1, 1, "", "InverseSineTransform"], [76, 1, 1, "", "LaplaceTransform"], [76, 1, 1, "", "MellinTransform"], [76, 1, 1, "", "SineTransform"], [76, 3, 1, "", "_fast_inverse_laplace"], [76, 3, 1, "", "_fourier_transform"], [76, 3, 1, "", "cosine_transform"], [76, 3, 1, "", "fourier_transform"], [76, 3, 1, "", "hankel_transform"], [76, 3, 1, "", "inverse_cosine_transform"], [76, 3, 1, "", "inverse_fourier_transform"], [76, 3, 1, "", "inverse_hankel_transform"], [76, 3, 1, "", "inverse_laplace_transform"], [76, 3, 1, "", "inverse_mellin_transform"], [76, 3, 1, "", "inverse_sine_transform"], [76, 3, 1, "", "laplace_transform"], [76, 3, 1, "", "mellin_transform"], [76, 3, 1, "", "sine_transform"]], "sympy.integrals.transforms.IntegralTransform": [[76, 2, 1, "", "doit"], [76, 4, 1, "", "function"], [76, 4, 1, "", "function_variable"], [76, 4, 1, "", "transform_variable"]], "sympy.integrals.trigonometry": [[76, 3, 1, "", "trigintegrate"]], "sympy.interactive": [[77, 0, 0, "-", "printing"], [77, 0, 0, "-", "session"]], "sympy.interactive.printing": [[77, 3, 1, "", "init_printing"]], "sympy.interactive.session": [[77, 3, 1, "", "enable_automatic_int_sympification"], [77, 3, 1, "", "enable_automatic_symbols"], [77, 3, 1, "", "init_ipython_session"], [77, 3, 1, "", "init_python_session"], [77, 3, 1, "", "init_session"], [77, 3, 1, "", "int_to_Integer"]], "sympy.liealgebras.cartan_matrix": [[78, 3, 1, "", "CartanMatrix"]], "sympy.liealgebras.cartan_type": [[78, 1, 1, "", "CartanType_generator"], [78, 1, 1, "", "Standard_Cartan"]], "sympy.liealgebras.cartan_type.Standard_Cartan": [[78, 2, 1, "", "rank"], [78, 2, 1, "", "series"]], "sympy.liealgebras.dynkin_diagram": [[78, 3, 1, "", "DynkinDiagram"]], "sympy.liealgebras.root_system": [[78, 1, 1, "", "RootSystem"]], "sympy.liealgebras.root_system.RootSystem": [[78, 2, 1, "", "add_as_roots"], [78, 2, 1, "", "add_simple_roots"], [78, 2, 1, "", "all_roots"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dynkin_diagram"], [78, 2, 1, "", "root_space"], [78, 2, 1, "", "simple_roots"]], "sympy.liealgebras.type_a": [[78, 1, 1, "", "TypeA"]], "sympy.liealgebras.type_a.TypeA": [[78, 2, 1, "", "basic_root"], [78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "highest_root"], [78, 2, 1, "", "lie_algebra"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_b": [[78, 1, 1, "", "TypeB"]], "sympy.liealgebras.type_b.TypeB": [[78, 2, 1, "", "basic_root"], [78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "lie_algebra"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_c": [[78, 1, 1, "", "TypeC"]], "sympy.liealgebras.type_c.TypeC": [[78, 2, 1, "", "basic_root"], [78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "lie_algebra"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_d": [[78, 1, 1, "", "TypeD"]], "sympy.liealgebras.type_d.TypeD": [[78, 2, 1, "", "basic_root"], [78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "lie_algebra"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_e": [[78, 1, 1, "", "TypeE"]], "sympy.liealgebras.type_e.TypeE": [[78, 2, 1, "", "basic_root"], [78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_f": [[78, 1, 1, "", "TypeF"]], "sympy.liealgebras.type_f.TypeF": [[78, 2, 1, "", "basic_root"], [78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.type_g": [[78, 1, 1, "", "TypeG"]], "sympy.liealgebras.type_g.TypeG": [[78, 2, 1, "", "basis"], [78, 2, 1, "", "cartan_matrix"], [78, 2, 1, "", "dimension"], [78, 2, 1, "", "positive_roots"], [78, 2, 1, "", "roots"], [78, 2, 1, "", "simple_root"]], "sympy.liealgebras.weyl_group": [[78, 1, 1, "", "WeylGroup"]], "sympy.liealgebras.weyl_group.WeylGroup": [[78, 2, 1, "", "coxeter_diagram"], [78, 2, 1, "", "delete_doubles"], [78, 2, 1, "", "element_order"], [78, 2, 1, "", "generators"], [78, 2, 1, "", "group_name"], [78, 2, 1, "", "group_order"], [78, 2, 1, "", "matrix_form"]], "sympy.logic.boolalg": [[79, 3, 1, "", "ANFform"], [79, 1, 1, "", "And"], [79, 1, 1, "", "Boolean"], [79, 1, 1, "", "BooleanFalse"], [79, 1, 1, "", "BooleanTrue"], [79, 1, 1, "", "Equivalent"], [79, 1, 1, "", "Exclusive"], [79, 1, 1, "", "ITE"], [79, 1, 1, "", "Implies"], [79, 1, 1, "", "Nand"], [79, 1, 1, "", "Nor"], [79, 1, 1, "", "Not"], [79, 1, 1, "", "Or"], [79, 3, 1, "", "POSform"], [79, 3, 1, "", "SOPform"], [79, 1, 1, "", "Xnor"], [79, 1, 1, "", "Xor"], [79, 3, 1, "", "anf_coeffs"], [79, 3, 1, "", "bool_map"], [79, 3, 1, "", "bool_maxterm"], [79, 3, 1, "", "bool_minterm"], [79, 3, 1, "", "bool_monomial"], [79, 3, 1, "", "distribute_and_over_or"], [79, 3, 1, "", "distribute_or_over_and"], [79, 3, 1, "", "distribute_xor_over_and"], [79, 3, 1, "", "eliminate_implications"], [79, 3, 1, "", "gateinputcount"], [79, 3, 1, "", "integer_to_term"], [79, 3, 1, "", "is_anf"], [79, 3, 1, "", "is_cnf"], [79, 3, 1, "", "is_dnf"], [79, 3, 1, "", "is_nnf"], [79, 3, 1, "", "simplify_logic"], [79, 3, 1, "", "term_to_integer"], [79, 3, 1, "", "to_anf"], [79, 3, 1, "", "to_cnf"], [79, 3, 1, "", "to_dnf"], [79, 3, 1, "", "to_int_repr"], [79, 3, 1, "", "to_nnf"], [79, 3, 1, "", "truth_table"]], "sympy.logic.boolalg.Boolean": [[79, 2, 1, "", "as_set"], [79, 2, 1, "", "equals"]], "sympy.logic.boolalg.BooleanFalse": [[79, 2, 1, "", "as_set"]], "sympy.logic.boolalg.BooleanTrue": [[79, 2, 1, "", "as_set"]], "sympy.logic": [[79, 0, 0, "-", "inference"]], "sympy.logic.inference": [[79, 3, 1, "", "satisfiable"]], "sympy.matrices": [[80, 0, 0, "-", "common"], [82, 0, 0, "-", "expressions"], [83, 0, 0, "-", "immutable"], [85, 0, 0, "-", "matrices"], [87, 0, 0, "-", "sparse"], [88, 0, 0, "-", "sparsetools"]], "sympy.matrices.common": [[80, 1, 1, "", "MatrixCommon"], [80, 1, 1, "", "MatrixKind"]], "sympy.matrices.common.MatrixCommon": [[80, 4, 1, "", "C"], [80, 4, 1, "", "H"], [80, 4, 1, "", "T"], [80, 2, 1, "", "__abs__"], [80, 2, 1, "", "__add__"], [80, 2, 1, "", "__getitem__"], [80, 2, 1, "", "__len__"], [80, 2, 1, "", "__mul__"], [80, 2, 1, "", "__pow__"], [80, 5, 1, "", "__weakref__"], [80, 2, 1, "", "adjoint"], [80, 2, 1, "", "applyfunc"], [80, 2, 1, "", "as_real_imag"], [80, 2, 1, "", "atoms"], [80, 2, 1, "", "col"], [80, 2, 1, "", "col_del"], [80, 2, 1, "", "col_insert"], [80, 2, 1, "", "col_join"], [80, 2, 1, "", "companion"], [80, 2, 1, "", "conjugate"], [80, 2, 1, "", "diag"], [80, 2, 1, "", "diagonal"], [80, 2, 1, "", "evalf"], [80, 2, 1, "", "expand"], [80, 2, 1, "", "extract"], [80, 2, 1, "", "eye"], [80, 4, 1, "", "free_symbols"], [80, 2, 1, "", "get_diag_blocks"], [80, 2, 1, "", "has"], [80, 2, 1, "", "hstack"], [80, 2, 1, "", "is_anti_symmetric"], [80, 2, 1, "", "is_diagonal"], [80, 4, 1, "", "is_hermitian"], [80, 4, 1, "", "is_lower"], [80, 4, 1, "", "is_lower_hessenberg"], [80, 4, 1, "", "is_square"], [80, 4, 1, "", "is_strongly_diagonally_dominant"], [80, 2, 1, "", "is_symbolic"], [80, 2, 1, "", "is_symmetric"], [80, 4, 1, "", "is_upper"], [80, 4, 1, "", "is_upper_hessenberg"], [80, 4, 1, "", "is_weakly_diagonally_dominant"], [80, 4, 1, "", "is_zero_matrix"], [80, 2, 1, "", "jordan_block"], [80, 2, 1, "", "lower_triangular"], [80, 2, 1, "", "multiply"], [80, 2, 1, "", "multiply_elementwise"], [80, 2, 1, "", "n"], [80, 2, 1, "", "ones"], [80, 2, 1, "", "permute"], [80, 2, 1, "", "permute_cols"], [80, 2, 1, "", "permute_rows"], [80, 2, 1, "", "pow"], [80, 2, 1, "", "refine"], [80, 2, 1, "", "replace"], [80, 2, 1, "", "reshape"], [80, 2, 1, "", "rmultiply"], [80, 2, 1, "", "rot90"], [80, 2, 1, "", "row"], [80, 2, 1, "", "row_del"], [80, 2, 1, "", "row_insert"], [80, 2, 1, "", "row_join"], [80, 4, 1, "", "shape"], [80, 2, 1, "", "simplify"], [80, 2, 1, "", "subs"], [80, 2, 1, "", "todod"], [80, 2, 1, "", "todok"], [80, 2, 1, "", "tolist"], [80, 2, 1, "", "trace"], [80, 2, 1, "", "transpose"], [80, 2, 1, "", "upper_triangular"], [80, 2, 1, "", "values"], [80, 2, 1, "", "vec"], [80, 2, 1, "", "vech"], [80, 2, 1, "", "vstack"], [80, 2, 1, "", "wilkinson"], [80, 2, 1, "", "xreplace"], [80, 2, 1, "", "zeros"]], "sympy.matrices.dense": [[81, 1, 1, "", "DenseMatrix"], [85, 3, 1, "", "GramSchmidt"], [81, 5, 1, "", "Matrix"], [81, 1, 1, "", "MutableDenseMatrix"], [85, 3, 1, "", "casoratian"], [85, 3, 1, "", "diag"], [85, 3, 1, "", "eye"], [85, 3, 1, "", "hessian"], [85, 3, 1, "", "jordan_cell"], [85, 3, 1, "", "list2numpy"], [85, 3, 1, "", "matrix2numpy"], [85, 3, 1, "", "matrix_multiply_elementwise"], [85, 3, 1, "", "ones"], [85, 3, 1, "", "randMatrix"], [85, 3, 1, "", "rot_axis1"], [85, 3, 1, "", "rot_axis2"], [85, 3, 1, "", "rot_axis3"], [85, 3, 1, "", "symarray"], [85, 3, 1, "", "wronskian"], [85, 3, 1, "", "zeros"]], "sympy.matrices.dense.DenseMatrix": [[81, 2, 1, "", "LDLdecomposition"], [81, 2, 1, "", "as_immutable"], [81, 2, 1, "", "as_mutable"], [81, 2, 1, "", "cholesky"], [81, 2, 1, "", "lower_triangular_solve"], [81, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.dense.MutableDenseMatrix": [[81, 2, 1, "", "simplify"]], "sympy.matrices.expressions": [[82, 1, 1, "", "CompanionMatrix"], [82, 1, 1, "", "FunctionMatrix"], [82, 1, 1, "", "HadamardPower"], [82, 1, 1, "", "HadamardProduct"], [82, 1, 1, "", "Identity"], [82, 1, 1, "", "Inverse"], [82, 1, 1, "", "MatAdd"], [82, 1, 1, "", "MatMul"], [82, 1, 1, "", "MatPow"], [82, 1, 1, "", "MatrixExpr"], [82, 1, 1, "", "MatrixPermute"], [82, 1, 1, "", "MatrixSet"], [82, 1, 1, "", "MatrixSymbol"], [82, 1, 1, "", "PermutationMatrix"], [82, 1, 1, "", "Trace"], [82, 1, 1, "", "Transpose"], [82, 1, 1, "", "ZeroMatrix"], [82, 0, 0, "-", "blockmatrix"]], "sympy.matrices.expressions.MatrixExpr": [[82, 4, 1, "", "T"], [82, 2, 1, "", "as_coeff_Mul"], [82, 2, 1, "", "as_explicit"], [82, 2, 1, "", "as_mutable"], [82, 2, 1, "", "equals"], [82, 2, 1, "", "from_index_summation"]], "sympy.matrices.expressions.blockmatrix": [[82, 1, 1, "", "BlockDiagMatrix"], [82, 1, 1, "", "BlockMatrix"], [82, 3, 1, "", "block_collapse"]], "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix": [[82, 2, 1, "", "get_diag_blocks"]], "sympy.matrices.expressions.blockmatrix.BlockMatrix": [[82, 2, 1, "", "LDUdecomposition"], [82, 2, 1, "", "LUdecomposition"], [82, 2, 1, "", "UDLdecomposition"], [82, 2, 1, "", "schur"], [82, 2, 1, "", "transpose"]], "sympy.matrices.immutable": [[83, 1, 1, "", "ImmutableDenseMatrix"], [83, 5, 1, "", "ImmutableMatrix"], [87, 1, 1, "", "ImmutableSparseMatrix"]], "sympy.matrices.matrices": [[85, 1, 1, "", "MatrixBase"], [85, 1, 1, "", "MatrixCalculus"], [85, 1, 1, "", "MatrixDeterminant"], [85, 1, 1, "", "MatrixEigen"], [85, 1, 1, "", "MatrixError"], [85, 1, 1, "", "MatrixReductions"], [85, 1, 1, "", "MatrixSubspaces"], [85, 1, 1, "", "NonSquareMatrixError"], [85, 1, 1, "", "ShapeError"], [85, 3, 1, "", "a2idx"]], "sympy.matrices.matrices.MatrixBase": [[85, 4, 1, "", "D"], [85, 2, 1, "", "LDLdecomposition"], [85, 2, 1, "", "LDLsolve"], [85, 2, 1, "", "LUdecomposition"], [85, 2, 1, "", "LUdecompositionFF"], [85, 2, 1, "", "LUdecomposition_Simple"], [85, 2, 1, "", "LUsolve"], [85, 2, 1, "", "QRdecomposition"], [85, 2, 1, "", "QRsolve"], [85, 2, 1, "", "add"], [85, 2, 1, "", "analytic_func"], [85, 2, 1, "", "cholesky"], [85, 2, 1, "", "cholesky_solve"], [85, 2, 1, "", "condition_number"], [85, 2, 1, "", "connected_components"], [85, 2, 1, "", "connected_components_decomposition"], [85, 2, 1, "", "copy"], [85, 2, 1, "", "cross"], [85, 2, 1, "", "diagonal_solve"], [85, 2, 1, "", "dot"], [85, 2, 1, "", "dual"], [85, 2, 1, "", "exp"], [85, 2, 1, "", "gauss_jordan_solve"], [85, 2, 1, "", "inv"], [85, 2, 1, "", "inv_mod"], [85, 2, 1, "", "inverse_ADJ"], [85, 2, 1, "", "inverse_BLOCK"], [85, 2, 1, "", "inverse_CH"], [85, 2, 1, "", "inverse_GE"], [85, 2, 1, "", "inverse_LDL"], [85, 2, 1, "", "inverse_LU"], [85, 2, 1, "", "inverse_QR"], [85, 2, 1, "", "irregular"], [85, 2, 1, "", "is_nilpotent"], [85, 2, 1, "", "key2bounds"], [85, 2, 1, "", "key2ij"], [85, 2, 1, "", "log"], [85, 2, 1, "", "lower_triangular_solve"], [85, 2, 1, "", "norm"], [85, 2, 1, "", "normalized"], [85, 2, 1, "", "pinv"], [85, 2, 1, "", "pinv_solve"], [85, 2, 1, "", "print_nonzero"], [85, 2, 1, "", "project"], [85, 2, 1, "", "rank_decomposition"], [85, 2, 1, "", "singular_value_decomposition"], [85, 2, 1, "", "solve"], [85, 2, 1, "", "solve_least_squares"], [85, 2, 1, "", "strongly_connected_components"], [85, 2, 1, "", "strongly_connected_components_decomposition"], [85, 2, 1, "", "table"], [85, 2, 1, "", "upper_hessenberg_decomposition"], [85, 2, 1, "", "upper_triangular_solve"]], "sympy.matrices.matrices.MatrixCalculus": [[85, 2, 1, "", "diff"], [85, 2, 1, "", "integrate"], [85, 2, 1, "", "jacobian"], [85, 2, 1, "", "limit"]], "sympy.matrices.matrices.MatrixDeterminant": [[85, 2, 1, "", "adjugate"], [85, 2, 1, "", "charpoly"], [85, 2, 1, "", "cofactor"], [85, 2, 1, "", "cofactor_matrix"], [85, 2, 1, "", "det"], [85, 2, 1, "", "minor"], [85, 2, 1, "", "minor_submatrix"], [85, 2, 1, "", "per"]], "sympy.matrices.matrices.MatrixEigen": [[85, 2, 1, "", "bidiagonal_decomposition"], [85, 2, 1, "", "bidiagonalize"], [85, 2, 1, "", "diagonalize"], [85, 2, 1, "", "eigenvals"], [85, 2, 1, "", "eigenvects"], [85, 2, 1, "", "is_diagonalizable"], [85, 4, 1, "", "is_indefinite"], [85, 4, 1, "", "is_negative_definite"], [85, 4, 1, "", "is_negative_semidefinite"], [85, 4, 1, "", "is_positive_definite"], [85, 4, 1, "", "is_positive_semidefinite"], [85, 2, 1, "", "jordan_form"], [85, 2, 1, "", "left_eigenvects"], [85, 2, 1, "", "singular_values"]], "sympy.matrices.matrices.MatrixReductions": [[85, 2, 1, "", "echelon_form"], [85, 2, 1, "", "elementary_col_op"], [85, 2, 1, "", "elementary_row_op"], [85, 4, 1, "", "is_echelon"], [85, 2, 1, "", "rank"], [85, 2, 1, "", "rref"]], "sympy.matrices.matrices.MatrixSubspaces": [[85, 2, 1, "", "columnspace"], [85, 2, 1, "", "nullspace"], [85, 2, 1, "", "orthogonalize"], [85, 2, 1, "", "rowspace"]], "sympy.matrices.normalforms": [[86, 3, 1, "", "hermite_normal_form"], [86, 3, 1, "", "smith_normal_form"]], "sympy.matrices.sparse": [[87, 1, 1, "", "MutableSparseMatrix"], [87, 5, 1, "", "SparseMatrix"]], "sympy.matrices.sparsetools": [[88, 2, 1, "", "_csrtodok"], [88, 2, 1, "", "_doktocsr"], [88, 2, 1, "", "banded"]], "sympy.ntheory": [[89, 0, 0, "-", "bbp_pi"], [89, 0, 0, "-", "continued_fraction"], [89, 0, 0, "-", "digits"], [89, 0, 0, "-", "ecm"], [89, 0, 0, "-", "egyptian_fraction"], [89, 0, 0, "-", "factor_"], [89, 0, 0, "-", "generate"], [89, 1, 1, "", "mobius"], [89, 0, 0, "-", "modular"], [89, 0, 0, "-", "multinomial"], [89, 0, 0, "-", "partitions_"], [89, 0, 0, "-", "primetest"], [89, 0, 0, "-", "qs"], [89, 0, 0, "-", "residue_ntheory"]], "sympy.ntheory.bbp_pi": [[89, 3, 1, "", "pi_hex_digits"]], "sympy.ntheory.continued_fraction": [[89, 3, 1, "", "continued_fraction"], [89, 3, 1, "", "continued_fraction_convergents"], [89, 3, 1, "", "continued_fraction_iterator"], [89, 3, 1, "", "continued_fraction_periodic"], [89, 3, 1, "", "continued_fraction_reduce"]], "sympy.ntheory.digits": [[89, 3, 1, "", "count_digits"], [89, 3, 1, "", "digits"], [89, 3, 1, "", "is_palindromic"]], "sympy.ntheory.ecm": [[89, 3, 1, "", "ecm"]], "sympy.ntheory.egyptian_fraction": [[89, 3, 1, "", "egyptian_fraction"]], "sympy.ntheory.factor_": [[89, 3, 1, "", "abundance"], [89, 3, 1, "", "antidivisor_count"], [89, 3, 1, "", "antidivisors"], [89, 3, 1, "", "core"], [89, 3, 1, "", "digits"], [89, 3, 1, "", "divisor_count"], [89, 1, 1, "", "divisor_sigma"], [89, 3, 1, "", "divisors"], [89, 3, 1, "", "factorint"], [89, 3, 1, "", "factorrat"], [89, 3, 1, "", "is_abundant"], [89, 3, 1, "", "is_amicable"], [89, 3, 1, "", "is_deficient"], [89, 3, 1, "", "is_mersenne_prime"], [89, 3, 1, "", "is_perfect"], [89, 3, 1, "", "mersenne_prime_exponent"], [89, 3, 1, "", "multiplicity"], [89, 3, 1, "", "perfect_power"], [89, 3, 1, "", "pollard_pm1"], [89, 3, 1, "", "pollard_rho"], [89, 3, 1, "", "primefactors"], [89, 1, 1, "", "primenu"], [89, 1, 1, "", "primeomega"], [89, 3, 1, "", "proper_divisor_count"], [89, 3, 1, "", "proper_divisors"], [89, 1, 1, "", "reduced_totient"], [89, 3, 1, "", "smoothness"], [89, 3, 1, "", "smoothness_p"], [89, 1, 1, "", "totient"], [89, 3, 1, "", "trailing"], [89, 3, 1, "", "udivisor_count"], [89, 1, 1, "", "udivisor_sigma"], [89, 3, 1, "", "udivisors"]], "sympy.ntheory.generate": [[89, 1, 1, "", "Sieve"], [89, 3, 1, "", "composite"], [89, 3, 1, "", "compositepi"], [89, 3, 1, "", "cycle_length"], [89, 3, 1, "", "nextprime"], [89, 3, 1, "", "prevprime"], [89, 3, 1, "", "prime"], [89, 3, 1, "", "primepi"], [89, 3, 1, "", "primerange"], [89, 3, 1, "", "primorial"], [89, 3, 1, "", "randprime"]], "sympy.ntheory.generate.Sieve": [[89, 2, 1, "", "extend"], [89, 2, 1, "", "extend_to_no"], [89, 2, 1, "", "mobiusrange"], [89, 2, 1, "", "primerange"], [89, 2, 1, "", "search"], [89, 2, 1, "", "totientrange"]], "sympy.ntheory.modular": [[89, 3, 1, "", "crt"], [89, 3, 1, "", "crt1"], [89, 3, 1, "", "crt2"], [89, 3, 1, "", "solve_congruence"], [89, 3, 1, "", "symmetric_residue"]], "sympy.ntheory.multinomial": [[89, 3, 1, "", "binomial_coefficients"], [89, 3, 1, "", "binomial_coefficients_list"], [89, 3, 1, "", "multinomial_coefficients"], [89, 3, 1, "", "multinomial_coefficients_iterator"]], "sympy.ntheory.partitions_": [[89, 3, 1, "", "npartitions"]], "sympy.ntheory.primetest": [[89, 3, 1, "", "is_euler_pseudoprime"], [89, 3, 1, "", "is_extra_strong_lucas_prp"], [89, 3, 1, "", "is_gaussian_prime"], [89, 3, 1, "", "is_lucas_prp"], [89, 3, 1, "", "is_square"], [89, 3, 1, "", "is_strong_lucas_prp"], [89, 3, 1, "", "isprime"], [89, 3, 1, "", "mr"]], "sympy.ntheory.qs": [[89, 3, 1, "", "qs"]], "sympy.ntheory.residue_ntheory": [[89, 3, 1, "", "discrete_log"], [89, 3, 1, "", "is_nthpow_residue"], [89, 3, 1, "", "is_primitive_root"], [89, 3, 1, "", "is_quad_residue"], [89, 3, 1, "", "jacobi_symbol"], [89, 3, 1, "", "legendre_symbol"], [89, 3, 1, "", "n_order"], [89, 3, 1, "", "nthroot_mod"], [89, 3, 1, "", "primitive_root"], [89, 3, 1, "", "quadratic_residues"], [89, 3, 1, "", "sqrt_mod"], [89, 3, 1, "", "sqrt_mod_iter"]], "sympy.parsing.latex": [[91, 1, 1, "", "LaTeXParsingError"], [91, 3, 1, "", "parse_latex"]], "sympy.parsing.mathematica": [[91, 3, 1, "", "parse_mathematica"]], "sympy.parsing.maxima": [[91, 3, 1, "", "parse_maxima"]], "sympy.parsing": [[91, 0, 0, "-", "sym_expr"]], "sympy.parsing.sym_expr": [[91, 1, 1, "", "SymPyExpression"]], "sympy.parsing.sym_expr.SymPyExpression": [[91, 2, 1, "", "convert_to_c"], [91, 2, 1, "", "convert_to_expr"], [91, 2, 1, "", "convert_to_fortran"], [91, 2, 1, "", "convert_to_python"], [91, 2, 1, "", "return_expr"]], "sympy.parsing.sympy_parser": [[91, 3, 1, "", "auto_number"], [91, 3, 1, "", "auto_symbol"], [91, 3, 1, "", "convert_xor"], [91, 3, 1, "", "eval_expr"], [91, 3, 1, "", "factorial_notation"], [91, 3, 1, "", "function_exponentiation"], [91, 3, 1, "", "implicit_application"], [91, 3, 1, "", "implicit_multiplication"], [91, 3, 1, "", "implicit_multiplication_application"], [91, 3, 1, "", "lambda_notation"], [91, 3, 1, "", "parse_expr"], [91, 3, 1, "", "rationalize"], [91, 3, 1, "", "repeated_decimals"], [91, 3, 1, "", "split_symbols"], [91, 3, 1, "", "split_symbols_custom"], [91, 6, 1, "", "standard_transformations"], [91, 3, 1, "", "stringify_expr"]], "sympy.physics.continuum_mechanics": [[92, 0, 0, "-", "beam"]], "sympy.physics.continuum_mechanics.beam": [[92, 1, 1, "", "Beam"], [92, 1, 1, "", "Beam3D"]], "sympy.physics.continuum_mechanics.beam.Beam": [[92, 4, 1, "", "applied_loads"], [92, 2, 1, "", "apply_load"], [92, 2, 1, "", "apply_support"], [92, 4, 1, "", "area"], [92, 2, 1, "", "bending_moment"], [92, 4, 1, "", "boundary_conditions"], [92, 4, 1, "", "cross_section"], [92, 2, 1, "", "deflection"], [92, 2, 1, "", "draw"], [92, 4, 1, "", "elastic_modulus"], [92, 4, 1, "", "ild_moment"], [92, 4, 1, "", "ild_reactions"], [92, 4, 1, "", "ild_shear"], [92, 2, 1, "", "join"], [92, 4, 1, "", "length"], [92, 4, 1, "", "load"], [92, 2, 1, "", "max_bmoment"], [92, 2, 1, "", "max_deflection"], [92, 2, 1, "", "max_shear_force"], [92, 2, 1, "", "plot_bending_moment"], [92, 2, 1, "", "plot_deflection"], [92, 2, 1, "", "plot_ild_moment"], [92, 2, 1, "", "plot_ild_reactions"], [92, 2, 1, "", "plot_ild_shear"], [92, 2, 1, "", "plot_loading_results"], [92, 2, 1, "", "plot_shear_force"], [92, 2, 1, "", "plot_shear_stress"], [92, 2, 1, "", "plot_slope"], [92, 2, 1, "", "point_cflexure"], [92, 4, 1, "", "reaction_loads"], [92, 2, 1, "", "remove_load"], [92, 4, 1, "", "second_moment"], [92, 2, 1, "", "shear_force"], [92, 2, 1, "", "shear_stress"], [92, 2, 1, "", "slope"], [92, 2, 1, "", "solve_for_ild_moment"], [92, 2, 1, "", "solve_for_ild_reactions"], [92, 2, 1, "", "solve_for_ild_shear"], [92, 2, 1, "", "solve_for_reaction_loads"], [92, 4, 1, "", "variable"]], "sympy.physics.continuum_mechanics.beam.Beam3D": [[92, 2, 1, "", "apply_load"], [92, 2, 1, "", "apply_moment_load"], [92, 4, 1, "", "area"], [92, 2, 1, "", "axial_force"], [92, 2, 1, "", "axial_stress"], [92, 2, 1, "", "bending_moment"], [92, 4, 1, "", "boundary_conditions"], [92, 2, 1, "", "deflection"], [92, 4, 1, "", "load_vector"], [92, 2, 1, "", "max_bending_moment"], [92, 2, 1, "", "max_bmoment"], [92, 2, 1, "", "max_deflection"], [92, 2, 1, "", "max_shear_force"], [92, 4, 1, "", "moment_load_vector"], [92, 2, 1, "", "plot_bending_moment"], [92, 2, 1, "", "plot_deflection"], [92, 2, 1, "", "plot_loading_results"], [92, 2, 1, "", "plot_shear_force"], [92, 2, 1, "", "plot_shear_stress"], [92, 2, 1, "", "plot_slope"], [92, 2, 1, "", "polar_moment"], [92, 4, 1, "", "second_moment"], [92, 2, 1, "", "shear_force"], [92, 4, 1, "", "shear_modulus"], [92, 2, 1, "", "shear_stress"], [92, 2, 1, "", "slope"], [92, 2, 1, "", "solve_for_reaction_loads"], [92, 2, 1, "", "torsional_moment"]], "sympy.physics": [[97, 0, 0, "-", "control"], [100, 0, 0, "-", "hydrogen"], [101, 0, 0, "-", "matrices"], [120, 0, 0, "-", "mechanics"], [134, 0, 0, "-", "paulialgebra"], [135, 0, 0, "-", "qho_1d"], [159, 0, 0, "-", "secondquant"], [160, 0, 0, "-", "sho"], [175, 0, 0, "-", "vector"], [178, 0, 0, "-", "wigner"]], "sympy.physics.control.control_plots": [[96, 2, 1, "", "bode_magnitude_numerical_data"], [96, 2, 1, "", "bode_magnitude_plot"], [96, 2, 1, "", "bode_phase_numerical_data"], [96, 2, 1, "", "bode_phase_plot"], [96, 2, 1, "", "bode_plot"], [96, 2, 1, "", "impulse_response_numerical_data"], [96, 2, 1, "", "impulse_response_plot"], [96, 2, 1, "", "pole_zero_numerical_data"], [96, 2, 1, "", "pole_zero_plot"], [96, 2, 1, "", "ramp_response_numerical_data"], [96, 2, 1, "", "ramp_response_plot"], [96, 2, 1, "", "step_response_numerical_data"], [96, 2, 1, "", "step_response_plot"]], "sympy.physics.control": [[98, 0, 0, "-", "lti"]], "sympy.physics.control.lti": [[98, 1, 1, "", "Feedback"], [98, 1, 1, "", "MIMOFeedback"], [98, 1, 1, "", "MIMOParallel"], [98, 1, 1, "", "MIMOSeries"], [98, 1, 1, "", "Parallel"], [98, 1, 1, "", "Series"], [98, 1, 1, "", "TransferFunction"], [98, 1, 1, "", "TransferFunctionMatrix"]], "sympy.physics.control.lti.Feedback": [[98, 2, 1, "", "doit"], [98, 4, 1, "", "sensitivity"], [98, 4, 1, "", "sign"], [98, 4, 1, "", "sys1"], [98, 4, 1, "", "sys2"], [98, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOFeedback": [[98, 2, 1, "", "doit"], [98, 4, 1, "", "sensitivity"], [98, 4, 1, "", "sign"], [98, 4, 1, "", "sys1"], [98, 4, 1, "", "sys2"], [98, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOParallel": [[98, 2, 1, "", "doit"], [98, 4, 1, "", "num_inputs"], [98, 4, 1, "", "num_outputs"], [98, 4, 1, "", "shape"], [98, 4, 1, "", "var"]], "sympy.physics.control.lti.MIMOSeries": [[98, 2, 1, "", "doit"], [98, 4, 1, "", "num_inputs"], [98, 4, 1, "", "num_outputs"], [98, 4, 1, "", "shape"], [98, 4, 1, "", "var"]], "sympy.physics.control.lti.Parallel": [[98, 2, 1, "", "doit"], [98, 4, 1, "", "is_biproper"], [98, 4, 1, "", "is_proper"], [98, 4, 1, "", "is_strictly_proper"], [98, 2, 1, "", "to_expr"], [98, 4, 1, "", "var"]], "sympy.physics.control.lti.Series": [[98, 2, 1, "", "doit"], [98, 4, 1, "", "is_biproper"], [98, 4, 1, "", "is_proper"], [98, 4, 1, "", "is_strictly_proper"], [98, 2, 1, "", "to_expr"], [98, 4, 1, "", "var"]], "sympy.physics.control.lti.TransferFunction": [[98, 2, 1, "", "dc_gain"], [98, 4, 1, "", "den"], [98, 2, 1, "", "expand"], [98, 2, 1, "", "from_rational_expression"], [98, 4, 1, "", "is_biproper"], [98, 4, 1, "", "is_proper"], [98, 2, 1, "", "is_stable"], [98, 4, 1, "", "is_strictly_proper"], [98, 4, 1, "", "num"], [98, 2, 1, "", "poles"], [98, 2, 1, "", "to_expr"], [98, 4, 1, "", "var"], [98, 2, 1, "", "zeros"]], "sympy.physics.control.lti.TransferFunctionMatrix": [[98, 2, 1, "", "elem_poles"], [98, 2, 1, "", "elem_zeros"], [98, 2, 1, "", "expand"], [98, 2, 1, "", "from_Matrix"], [98, 4, 1, "", "num_inputs"], [98, 4, 1, "", "num_outputs"], [98, 4, 1, "", "shape"], [98, 2, 1, "", "transpose"], [98, 4, 1, "", "var"]], "sympy.physics.hep": [[99, 0, 0, "-", "gamma_matrices"]], "sympy.physics.hep.gamma_matrices": [[99, 3, 1, "", "extract_type_tens"], [99, 3, 1, "", "gamma_trace"], [99, 3, 1, "", "kahane_simplify"], [99, 3, 1, "", "simplify_gpgp"]], "sympy.physics.hydrogen": [[100, 3, 1, "", "E_nl"], [100, 3, 1, "", "E_nl_dirac"], [100, 3, 1, "", "Psi_nlm"], [100, 3, 1, "", "R_nl"]], "sympy.physics.matrices": [[101, 3, 1, "", "mdft"], [101, 3, 1, "", "mgamma"], [101, 3, 1, "", "msigma"], [101, 3, 1, "", "pat_matrix"]], "sympy.physics.mechanics": [[103, 0, 0, "-", "body"], [104, 3, 1, "", "find_dynamicsymbols"], [105, 0, 0, "-", "joint"], [106, 0, 0, "-", "kane"], [106, 0, 0, "-", "lagrange"], [107, 0, 0, "-", "linearize"], [104, 3, 1, "", "msubs"], [108, 0, 0, "-", "particle"], [108, 0, 0, "-", "rigidbody"], [110, 0, 0, "-", "system"]], "sympy.physics.mechanics.body": [[103, 1, 1, "", "Body"]], "sympy.physics.mechanics.body.Body": [[103, 2, 1, "", "ang_vel_in"], [103, 2, 1, "", "apply_force"], [103, 2, 1, "", "apply_torque"], [103, 2, 1, "", "clear_loads"], [103, 2, 1, "", "dcm"], [103, 2, 1, "", "kinetic_energy"], [103, 2, 1, "", "masscenter_vel"], [103, 2, 1, "", "remove_load"], [103, 4, 1, "", "x"], [103, 4, 1, "", "y"], [103, 4, 1, "", "z"]], "sympy.physics.mechanics.functions": [[108, 3, 1, "", "Lagrangian"], [108, 3, 1, "", "angular_momentum"], [108, 3, 1, "", "inertia"], [108, 3, 1, "", "inertia_of_point_mass"], [108, 3, 1, "", "kinetic_energy"], [108, 3, 1, "", "linear_momentum"], [108, 3, 1, "", "potential_energy"]], "sympy.physics.mechanics.joint": [[105, 1, 1, "", "Joint"], [105, 1, 1, "", "PinJoint"], [105, 1, 1, "", "PrismaticJoint"]], "sympy.physics.mechanics.joint.Joint": [[105, 4, 1, "", "child"], [105, 4, 1, "", "child_axis"], [105, 4, 1, "", "child_point"], [105, 4, 1, "", "coordinates"], [105, 4, 1, "", "kdes"], [105, 4, 1, "", "parent"], [105, 4, 1, "", "parent_axis"], [105, 4, 1, "", "parent_point"], [105, 4, 1, "", "speeds"]], "sympy.physics.mechanics.kane": [[106, 1, 1, "", "KanesMethod"]], "sympy.physics.mechanics.kane.KanesMethod": [[106, 4, 1, "", "auxiliary_eqs"], [106, 4, 1, "", "forcing"], [106, 4, 1, "", "forcing_full"], [106, 2, 1, "", "kanes_equations"], [106, 2, 1, "", "kindiffdict"], [106, 2, 1, "", "linearize"], [106, 4, 1, "", "mass_matrix"], [106, 4, 1, "", "mass_matrix_full"], [106, 2, 1, "", "rhs"], [106, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.lagrange": [[106, 1, 1, "", "LagrangesMethod"]], "sympy.physics.mechanics.lagrange.LagrangesMethod": [[106, 4, 1, "", "forcing"], [106, 4, 1, "", "forcing_full"], [106, 2, 1, "", "form_lagranges_equations"], [106, 2, 1, "", "linearize"], [106, 4, 1, "", "mass_matrix"], [106, 4, 1, "", "mass_matrix_full"], [106, 2, 1, "", "rhs"], [106, 2, 1, "", "solve_multipliers"], [106, 2, 1, "", "to_linearizer"]], "sympy.physics.mechanics.linearize": [[107, 1, 1, "", "Linearizer"]], "sympy.physics.mechanics.linearize.Linearizer": [[107, 2, 1, "", "linearize"]], "sympy.physics.mechanics.particle": [[108, 1, 1, "", "Particle"]], "sympy.physics.mechanics.particle.Particle": [[108, 2, 1, "", "angular_momentum"], [108, 2, 1, "", "kinetic_energy"], [108, 2, 1, "", "linear_momentum"], [108, 4, 1, "", "mass"], [108, 2, 1, "", "parallel_axis"], [108, 4, 1, "", "point"], [108, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.rigidbody": [[108, 1, 1, "", "RigidBody"]], "sympy.physics.mechanics.rigidbody.RigidBody": [[108, 2, 1, "", "angular_momentum"], [108, 4, 1, "", "central_inertia"], [108, 2, 1, "", "kinetic_energy"], [108, 2, 1, "", "linear_momentum"], [108, 2, 1, "", "parallel_axis"], [108, 4, 1, "", "potential_energy"]], "sympy.physics.mechanics.system": [[110, 1, 1, "", "SymbolicSystem"]], "sympy.physics.mechanics.system.SymbolicSystem": [[110, 4, 1, "", "alg_con"], [110, 4, 1, "", "bodies"], [110, 4, 1, "", "comb_explicit_rhs"], [110, 4, 1, "", "comb_implicit_mat"], [110, 4, 1, "", "comb_implicit_rhs"], [110, 2, 1, "", "compute_explicit_form"], [110, 2, 1, "", "constant_symbols"], [110, 4, 1, "", "coordinates"], [110, 4, 1, "", "dyn_implicit_mat"], [110, 4, 1, "", "dyn_implicit_rhs"], [110, 2, 1, "", "dynamic_symbols"], [110, 4, 1, "", "kin_explicit_rhs"], [110, 4, 1, "", "loads"], [110, 4, 1, "", "speeds"], [110, 4, 1, "", "states"]], "sympy.physics.optics": [[128, 0, 0, "-", "gaussopt"], [130, 0, 0, "-", "medium"], [131, 0, 0, "-", "polarization"], [132, 0, 0, "-", "utils"], [133, 0, 0, "-", "waves"]], "sympy.physics.optics.gaussopt": [[128, 1, 1, "", "BeamParameter"], [128, 1, 1, "", "CurvedMirror"], [128, 1, 1, "", "CurvedRefraction"], [128, 1, 1, "", "FlatMirror"], [128, 1, 1, "", "FlatRefraction"], [128, 1, 1, "", "FreeSpace"], [128, 1, 1, "", "GeometricRay"], [128, 1, 1, "", "RayTransferMatrix"], [128, 1, 1, "", "ThinLens"], [128, 3, 1, "", "conjugate_gauss_beams"], [128, 3, 1, "", "gaussian_conj"], [128, 3, 1, "", "geometric_conj_ab"], [128, 3, 1, "", "geometric_conj_af"], [128, 3, 1, "", "geometric_conj_bf"], [128, 3, 1, "", "rayleigh2waist"], [128, 3, 1, "", "waist2rayleigh"]], "sympy.physics.optics.gaussopt.BeamParameter": [[128, 4, 1, "", "divergence"], [128, 4, 1, "", "gouy"], [128, 4, 1, "", "q"], [128, 4, 1, "", "radius"], [128, 4, 1, "", "w"], [128, 4, 1, "", "w_0"], [128, 4, 1, "", "waist_approximation_limit"]], "sympy.physics.optics.gaussopt.GeometricRay": [[128, 4, 1, "", "angle"], [128, 4, 1, "", "height"]], "sympy.physics.optics.gaussopt.RayTransferMatrix": [[128, 4, 1, "", "A"], [128, 4, 1, "", "B"], [128, 4, 1, "", "C"], [128, 4, 1, "", "D"]], "sympy.physics.optics.medium": [[130, 1, 1, "", "Medium"]], "sympy.physics.optics.medium.Medium": [[130, 4, 1, "", "refractive_index"], [130, 4, 1, "", "speed"]], "sympy.physics.optics.polarization": [[131, 3, 1, "", "half_wave_retarder"], [131, 3, 1, "", "jones_2_stokes"], [131, 3, 1, "", "jones_vector"], [131, 3, 1, "", "linear_polarizer"], [131, 3, 1, "", "mueller_matrix"], [131, 3, 1, "", "phase_retarder"], [131, 3, 1, "", "polarizing_beam_splitter"], [131, 3, 1, "", "quarter_wave_retarder"], [131, 3, 1, "", "reflective_filter"], [131, 3, 1, "", "stokes_vector"], [131, 3, 1, "", "transmissive_filter"]], "sympy.physics.optics.utils": [[132, 3, 1, "", "brewster_angle"], [132, 3, 1, "", "critical_angle"], [132, 3, 1, "", "deviation"], [132, 3, 1, "", "fresnel_coefficients"], [132, 3, 1, "", "hyperfocal_distance"], [132, 3, 1, "", "lens_formula"], [132, 3, 1, "", "lens_makers_formula"], [132, 3, 1, "", "mirror_formula"], [132, 3, 1, "", "refraction_angle"], [132, 3, 1, "", "transverse_magnification"]], "sympy.physics.optics.waves": [[133, 1, 1, "", "TWave"]], "sympy.physics.optics.waves.TWave": [[133, 4, 1, "", "amplitude"], [133, 4, 1, "", "angular_velocity"], [133, 4, 1, "", "frequency"], [133, 4, 1, "", "n"], [133, 4, 1, "", "phase"], [133, 4, 1, "", "speed"], [133, 4, 1, "", "time_period"], [133, 4, 1, "", "wavelength"], [133, 4, 1, "", "wavenumber"]], "sympy.physics.paulialgebra": [[134, 3, 1, "", "evaluate_pauli_product"]], "sympy.physics.qho_1d": [[135, 3, 1, "", "E_n"], [135, 3, 1, "", "coherent_state"], [135, 3, 1, "", "psi_n"]], "sympy.physics.quantum": [[136, 0, 0, "-", "anticommutator"], [137, 0, 0, "-", "cartesian"], [138, 0, 0, "-", "cg"], [139, 0, 0, "-", "circuitplot"], [140, 0, 0, "-", "commutator"], [141, 0, 0, "-", "constants"], [142, 0, 0, "-", "dagger"], [143, 0, 0, "-", "gate"], [144, 0, 0, "-", "grover"], [145, 0, 0, "-", "hilbert"], [147, 0, 0, "-", "innerproduct"], [148, 0, 0, "-", "operator"], [149, 0, 0, "-", "operatorset"], [150, 0, 0, "-", "piab"], [151, 0, 0, "-", "qapply"], [152, 0, 0, "-", "qft"], [153, 0, 0, "-", "qubit"], [154, 0, 0, "-", "represent"], [155, 0, 0, "-", "shor"], [156, 0, 0, "-", "spin"], [157, 0, 0, "-", "state"], [158, 0, 0, "-", "tensorproduct"]], "sympy.physics.quantum.anticommutator": [[136, 1, 1, "", "AntiCommutator"]], "sympy.physics.quantum.anticommutator.AntiCommutator": [[136, 2, 1, "", "doit"]], "sympy.physics.quantum.cartesian": [[137, 1, 1, "", "PositionBra3D"], [137, 1, 1, "", "PositionKet3D"], [137, 1, 1, "", "PositionState3D"], [137, 1, 1, "", "PxBra"], [137, 1, 1, "", "PxKet"], [137, 1, 1, "", "PxOp"], [137, 1, 1, "", "XBra"], [137, 1, 1, "", "XKet"], [137, 1, 1, "", "XOp"], [137, 1, 1, "", "YOp"], [137, 1, 1, "", "ZOp"]], "sympy.physics.quantum.cartesian.PositionState3D": [[137, 4, 1, "", "position_x"], [137, 4, 1, "", "position_y"], [137, 4, 1, "", "position_z"]], "sympy.physics.quantum.cartesian.PxBra": [[137, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.PxKet": [[137, 4, 1, "", "momentum"]], "sympy.physics.quantum.cartesian.XBra": [[137, 4, 1, "", "position"]], "sympy.physics.quantum.cartesian.XKet": [[137, 4, 1, "", "position"]], "sympy.physics.quantum.cg": [[138, 1, 1, "", "CG"], [138, 1, 1, "", "Wigner3j"], [138, 1, 1, "", "Wigner6j"], [138, 1, 1, "", "Wigner9j"], [138, 3, 1, "", "cg_simp"]], "sympy.physics.quantum.circuitplot": [[139, 1, 1, "", "CircuitPlot"], [139, 3, 1, "", "CreateCGate"], [139, 1, 1, "", "Mx"], [139, 1, 1, "", "Mz"], [139, 3, 1, "", "circuit_plot"], [139, 3, 1, "", "labeller"]], "sympy.physics.quantum.circuitplot.CircuitPlot": [[139, 2, 1, "", "control_line"], [139, 2, 1, "", "control_point"], [139, 2, 1, "", "not_point"], [139, 2, 1, "", "one_qubit_box"], [139, 2, 1, "", "swap_point"], [139, 2, 1, "", "two_qubit_box"], [139, 2, 1, "", "update"]], "sympy.physics.quantum.commutator": [[140, 1, 1, "", "Commutator"]], "sympy.physics.quantum.commutator.Commutator": [[140, 2, 1, "", "doit"]], "sympy.physics.quantum.constants": [[141, 1, 1, "", "HBar"]], "sympy.physics.quantum.dagger": [[142, 1, 1, "", "Dagger"]], "sympy.physics.quantum.gate": [[143, 1, 1, "", "CGate"], [143, 1, 1, "", "CGateS"], [143, 5, 1, "", "CNOT"], [143, 1, 1, "", "CNotGate"], [143, 1, 1, "", "Gate"], [143, 5, 1, "", "H"], [143, 1, 1, "", "HadamardGate"], [143, 1, 1, "", "IdentityGate"], [143, 1, 1, "", "OneQubitGate"], [143, 5, 1, "", "Phase"], [143, 1, 1, "", "PhaseGate"], [143, 5, 1, "", "S"], [143, 5, 1, "", "SWAP"], [143, 1, 1, "", "SwapGate"], [143, 5, 1, "", "T"], [143, 1, 1, "", "TGate"], [143, 1, 1, "", "TwoQubitGate"], [143, 1, 1, "", "UGate"], [143, 5, 1, "", "X"], [143, 1, 1, "", "XGate"], [143, 5, 1, "", "Y"], [143, 1, 1, "", "YGate"], [143, 5, 1, "", "Z"], [143, 1, 1, "", "ZGate"], [143, 3, 1, "", "gate_simp"], [143, 3, 1, "", "gate_sort"], [143, 3, 1, "", "normalized"], [143, 3, 1, "", "random_circuit"]], "sympy.physics.quantum.gate.CGate": [[143, 4, 1, "", "controls"], [143, 2, 1, "", "decompose"], [143, 2, 1, "", "eval_controls"], [143, 4, 1, "", "gate"], [143, 4, 1, "", "min_qubits"], [143, 4, 1, "", "nqubits"], [143, 2, 1, "", "plot_gate"], [143, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.CNotGate": [[143, 4, 1, "", "controls"], [143, 4, 1, "", "gate"], [143, 4, 1, "", "min_qubits"], [143, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.Gate": [[143, 2, 1, "", "get_target_matrix"], [143, 4, 1, "", "min_qubits"], [143, 4, 1, "", "nqubits"], [143, 4, 1, "", "targets"]], "sympy.physics.quantum.gate.SwapGate": [[143, 2, 1, "", "decompose"]], "sympy.physics.quantum.gate.UGate": [[143, 2, 1, "", "get_target_matrix"], [143, 4, 1, "", "targets"]], "sympy.physics.quantum.grover": [[144, 1, 1, "", "OracleGate"], [144, 1, 1, "", "WGate"], [144, 3, 1, "", "apply_grover"], [144, 3, 1, "", "grover_iteration"], [144, 3, 1, "", "superposition_basis"]], "sympy.physics.quantum.grover.OracleGate": [[144, 4, 1, "", "search_function"], [144, 4, 1, "", "targets"]], "sympy.physics.quantum.hilbert": [[145, 1, 1, "", "ComplexSpace"], [145, 1, 1, "", "DirectSumHilbertSpace"], [145, 1, 1, "", "FockSpace"], [145, 1, 1, "", "HilbertSpace"], [145, 1, 1, "", "L2"], [145, 1, 1, "", "TensorPowerHilbertSpace"], [145, 1, 1, "", "TensorProductHilbertSpace"]], "sympy.physics.quantum.hilbert.DirectSumHilbertSpace": [[145, 2, 1, "", "eval"], [145, 4, 1, "", "spaces"]], "sympy.physics.quantum.hilbert.HilbertSpace": [[145, 4, 1, "", "dimension"]], "sympy.physics.quantum.hilbert.TensorProductHilbertSpace": [[145, 2, 1, "", "eval"], [145, 4, 1, "", "spaces"]], "sympy.physics.quantum.innerproduct": [[147, 1, 1, "", "InnerProduct"]], "sympy.physics.quantum.operator": [[148, 1, 1, "", "DifferentialOperator"], [148, 1, 1, "", "HermitianOperator"], [148, 1, 1, "", "IdentityOperator"], [148, 1, 1, "", "Operator"], [148, 1, 1, "", "OuterProduct"], [148, 1, 1, "", "UnitaryOperator"]], "sympy.physics.quantum.operator.DifferentialOperator": [[148, 4, 1, "", "expr"], [148, 4, 1, "", "free_symbols"], [148, 4, 1, "", "function"], [148, 4, 1, "", "variables"]], "sympy.physics.quantum.operator.OuterProduct": [[148, 4, 1, "", "bra"], [148, 4, 1, "", "ket"]], "sympy.physics.quantum.operatorset": [[149, 3, 1, "", "operators_to_state"], [149, 3, 1, "", "state_to_operators"]], "sympy.physics.quantum.piab": [[150, 1, 1, "", "PIABBra"], [150, 1, 1, "", "PIABHamiltonian"], [150, 1, 1, "", "PIABKet"]], "sympy.physics.quantum.qapply": [[151, 3, 1, "", "qapply"]], "sympy.physics.quantum.qft": [[152, 1, 1, "", "IQFT"], [152, 1, 1, "", "QFT"], [152, 5, 1, "", "Rk"], [152, 1, 1, "", "RkGate"]], "sympy.physics.quantum.qft.IQFT": [[152, 2, 1, "", "decompose"]], "sympy.physics.quantum.qft.QFT": [[152, 2, 1, "", "decompose"]], "sympy.physics.quantum.qubit": [[153, 1, 1, "", "IntQubit"], [153, 1, 1, "", "IntQubitBra"], [153, 1, 1, "", "Qubit"], [153, 1, 1, "", "QubitBra"], [153, 3, 1, "", "matrix_to_density"], [153, 3, 1, "", "matrix_to_qubit"], [153, 3, 1, "", "measure_all"], [153, 3, 1, "", "measure_all_oneshot"], [153, 3, 1, "", "measure_partial"], [153, 3, 1, "", "measure_partial_oneshot"], [153, 3, 1, "", "qubit_to_matrix"]], "sympy.physics.quantum.represent": [[154, 3, 1, "", "enumerate_states"], [154, 3, 1, "", "get_basis"], [154, 3, 1, "", "integrate_result"], [154, 3, 1, "", "rep_expectation"], [154, 3, 1, "", "rep_innerproduct"], [154, 3, 1, "", "represent"]], "sympy.physics.quantum.shor": [[155, 1, 1, "", "CMod"], [155, 3, 1, "", "period_find"], [155, 3, 1, "", "shor"]], "sympy.physics.quantum.shor.CMod": [[155, 4, 1, "", "N"], [155, 4, 1, "", "a"], [155, 4, 1, "", "t"]], "sympy.physics.quantum.spin": [[156, 1, 1, "", "J2Op"], [156, 1, 1, "", "JxBra"], [156, 1, 1, "", "JxBraCoupled"], [156, 1, 1, "", "JxKet"], [156, 1, 1, "", "JxKetCoupled"], [156, 1, 1, "", "JyBra"], [156, 1, 1, "", "JyBraCoupled"], [156, 1, 1, "", "JyKet"], [156, 1, 1, "", "JyKetCoupled"], [156, 1, 1, "", "JzBra"], [156, 1, 1, "", "JzBraCoupled"], [156, 1, 1, "", "JzKet"], [156, 1, 1, "", "JzKetCoupled"], [156, 1, 1, "", "JzOp"], [156, 1, 1, "", "Rotation"], [156, 1, 1, "", "WignerD"], [156, 3, 1, "", "couple"], [156, 3, 1, "", "uncouple"]], "sympy.physics.quantum.spin.Rotation": [[156, 2, 1, "", "D"], [156, 2, 1, "", "d"]], "sympy.physics.quantum.state": [[157, 1, 1, "", "Bra"], [157, 1, 1, "", "BraBase"], [157, 1, 1, "", "Ket"], [157, 1, 1, "", "KetBase"], [157, 1, 1, "", "OrthogonalBra"], [157, 1, 1, "", "OrthogonalKet"], [157, 1, 1, "", "OrthogonalState"], [157, 1, 1, "", "State"], [157, 1, 1, "", "StateBase"], [157, 1, 1, "", "TimeDepBra"], [157, 1, 1, "", "TimeDepKet"], [157, 1, 1, "", "TimeDepState"], [157, 1, 1, "", "Wavefunction"]], "sympy.physics.quantum.state.StateBase": [[157, 4, 1, "", "dual"], [157, 2, 1, "", "dual_class"], [157, 4, 1, "", "operators"]], "sympy.physics.quantum.state.TimeDepState": [[157, 4, 1, "", "label"], [157, 4, 1, "", "time"]], "sympy.physics.quantum.state.Wavefunction": [[157, 4, 1, "", "expr"], [157, 4, 1, "", "is_commutative"], [157, 4, 1, "", "is_normalized"], [157, 4, 1, "", "limits"], [157, 4, 1, "", "norm"], [157, 2, 1, "", "normalize"], [157, 2, 1, "", "prob"], [157, 4, 1, "", "variables"]], "sympy.physics.quantum.tensorproduct": [[158, 1, 1, "", "TensorProduct"], [158, 3, 1, "", "tensor_product_simp"]], "sympy.physics.secondquant": [[159, 1, 1, "", "AnnihilateBoson"], [159, 1, 1, "", "AnnihilateFermion"], [159, 1, 1, "", "AntiSymmetricTensor"], [159, 5, 1, "", "B"], [159, 5, 1, "", "BBra"], [159, 5, 1, "", "BKet"], [159, 5, 1, "", "Bd"], [159, 1, 1, "", "BosonicBasis"], [159, 1, 1, "", "Commutator"], [159, 1, 1, "", "CreateBoson"], [159, 1, 1, "", "CreateFermion"], [159, 1, 1, "", "Dagger"], [159, 5, 1, "", "F"], [159, 5, 1, "", "FBra"], [159, 5, 1, "", "FKet"], [159, 5, 1, "", "Fd"], [159, 1, 1, "", "FixedBosonicBasis"], [159, 1, 1, "", "FockState"], [159, 1, 1, "", "FockStateBosonBra"], [159, 1, 1, "", "FockStateBosonKet"], [159, 1, 1, "", "FockStateBra"], [159, 1, 1, "", "FockStateFermionBra"], [159, 1, 1, "", "FockStateFermionKet"], [159, 1, 1, "", "FockStateKet"], [159, 1, 1, "", "InnerProduct"], [159, 1, 1, "", "KroneckerDelta"], [159, 1, 1, "", "NO"], [159, 1, 1, "", "PermutationOperator"], [159, 1, 1, "", "VarBosonicBasis"], [159, 3, 1, "", "apply_operators"], [159, 3, 1, "", "contraction"], [159, 3, 1, "", "evaluate_deltas"], [159, 3, 1, "", "matrix_rep"], [159, 3, 1, "", "simplify_index_permutations"], [159, 3, 1, "", "substitute_dummies"], [159, 3, 1, "", "wicks"]], "sympy.physics.secondquant.AnnihilateBoson": [[159, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.AnnihilateFermion": [[159, 2, 1, "", "apply_operator"], [159, 4, 1, "", "is_only_q_annihilator"], [159, 4, 1, "", "is_only_q_creator"], [159, 4, 1, "", "is_q_annihilator"], [159, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.AntiSymmetricTensor": [[159, 2, 1, "", "doit"], [159, 4, 1, "", "lower"], [159, 4, 1, "", "symbol"], [159, 4, 1, "", "upper"]], "sympy.physics.secondquant.Commutator": [[159, 2, 1, "", "doit"], [159, 2, 1, "", "eval"]], "sympy.physics.secondquant.CreateBoson": [[159, 2, 1, "", "apply_operator"]], "sympy.physics.secondquant.CreateFermion": [[159, 2, 1, "", "apply_operator"], [159, 4, 1, "", "is_only_q_annihilator"], [159, 4, 1, "", "is_only_q_creator"], [159, 4, 1, "", "is_q_annihilator"], [159, 4, 1, "", "is_q_creator"]], "sympy.physics.secondquant.Dagger": [[159, 2, 1, "", "eval"]], "sympy.physics.secondquant.FixedBosonicBasis": [[159, 2, 1, "", "index"], [159, 2, 1, "", "state"]], "sympy.physics.secondquant.InnerProduct": [[159, 4, 1, "", "bra"], [159, 4, 1, "", "ket"]], "sympy.physics.secondquant.KroneckerDelta": [[159, 2, 1, "", "eval"], [159, 4, 1, "", "indices_contain_equal_information"], [159, 4, 1, "", "is_above_fermi"], [159, 4, 1, "", "is_below_fermi"], [159, 4, 1, "", "is_only_above_fermi"], [159, 4, 1, "", "is_only_below_fermi"], [159, 4, 1, "", "killable_index"], [159, 4, 1, "", "preferred_index"]], "sympy.physics.secondquant.NO": [[159, 2, 1, "", "doit"], [159, 2, 1, "", "get_subNO"], [159, 4, 1, "", "has_q_annihilators"], [159, 4, 1, "", "has_q_creators"], [159, 2, 1, "", "iter_q_annihilators"], [159, 2, 1, "", "iter_q_creators"]], "sympy.physics.secondquant.PermutationOperator": [[159, 2, 1, "", "get_permuted"]], "sympy.physics.secondquant.VarBosonicBasis": [[159, 2, 1, "", "index"], [159, 2, 1, "", "state"]], "sympy.physics.sho": [[160, 3, 1, "", "E_nl"], [160, 3, 1, "", "R_nl"]], "sympy.physics.units": [[161, 0, 0, "-", "dimensions"], [165, 0, 0, "-", "prefixes"], [166, 0, 0, "-", "quantities"], [167, 0, 0, "-", "unitsystem"], [166, 0, 0, "-", "util"]], "sympy.physics.units.dimensions": [[161, 1, 1, "", "Dimension"], [161, 1, 1, "", "DimensionSystem"]], "sympy.physics.units.dimensions.Dimension": [[161, 2, 1, "", "has_integer_powers"]], "sympy.physics.units.dimensions.DimensionSystem": [[161, 4, 1, "", "can_transf_matrix"], [161, 4, 1, "", "dim"], [161, 2, 1, "", "dim_can_vector"], [161, 2, 1, "", "dim_vector"], [161, 4, 1, "", "inv_can_transf_matrix"], [161, 4, 1, "", "is_consistent"], [161, 2, 1, "", "is_dimensionless"], [161, 4, 1, "", "list_can_dims"], [161, 2, 1, "", "print_dim_base"]], "sympy.physics.units.prefixes": [[165, 1, 1, "", "Prefix"]], "sympy.physics.units.quantities": [[166, 1, 1, "", "Quantity"]], "sympy.physics.units.quantities.Quantity": [[166, 4, 1, "", "abbrev"], [166, 2, 1, "", "convert_to"], [166, 4, 1, "", "free_symbols"], [166, 4, 1, "", "is_prefixed"], [166, 4, 1, "", "scale_factor"], [166, 2, 1, "", "set_global_relative_scale_factor"]], "sympy.physics.units.unitsystem": [[167, 1, 1, "", "UnitSystem"]], "sympy.physics.units.unitsystem.UnitSystem": [[167, 4, 1, "", "dim"], [167, 2, 1, "", "extend"], [167, 2, 1, "", "get_units_non_prefixed"], [167, 4, 1, "", "is_consistent"]], "sympy.physics.units.util": [[166, 3, 1, "", "convert_to"]], "sympy.physics.vector.dyadic": [[169, 1, 1, "", "Dyadic"]], "sympy.physics.vector.dyadic.Dyadic": [[169, 2, 1, "", "applyfunc"], [169, 2, 1, "", "cross"], [169, 2, 1, "", "doit"], [169, 2, 1, "", "dot"], [169, 2, 1, "", "dt"], [169, 2, 1, "", "express"], [169, 4, 1, "", "func"], [169, 2, 1, "", "simplify"], [169, 2, 1, "", "subs"], [169, 2, 1, "", "to_matrix"], [169, 2, 1, "", "xreplace"]], "sympy.physics.vector": [[171, 3, 1, "", "dynamicsymbols"], [172, 0, 0, "-", "functions"], [172, 0, 0, "-", "point"]], "sympy.physics.vector.fieldfunctions": [[170, 3, 1, "", "curl"], [170, 3, 1, "", "divergence"], [170, 3, 1, "", "gradient"], [170, 3, 1, "", "is_conservative"], [170, 3, 1, "", "is_solenoidal"], [170, 3, 1, "", "scalar_potential"], [170, 3, 1, "", "scalar_potential_difference"]], "sympy.physics.vector.frame": [[169, 1, 1, "", "CoordinateSym"], [169, 1, 1, "", "ReferenceFrame"]], "sympy.physics.vector.frame.ReferenceFrame": [[169, 2, 1, "", "ang_acc_in"], [169, 2, 1, "", "ang_vel_in"], [169, 2, 1, "", "dcm"], [169, 2, 1, "", "orient"], [169, 2, 1, "", "orient_axis"], [169, 2, 1, "", "orient_body_fixed"], [169, 2, 1, "", "orient_explicit"], [169, 2, 1, "", "orient_quaternion"], [169, 2, 1, "", "orient_space_fixed"], [169, 2, 1, "", "orientnew"], [169, 2, 1, "", "partial_velocity"], [169, 2, 1, "", "set_ang_acc"], [169, 2, 1, "", "set_ang_vel"], [169, 2, 1, "", "variable_map"], [169, 4, 1, "", "x"], [169, 4, 1, "", "y"], [169, 4, 1, "", "z"]], "sympy.physics.vector.functions": [[171, 3, 1, "", "cross"], [171, 3, 1, "", "dot"], [171, 3, 1, "", "express"], [172, 3, 1, "", "get_motion_params"], [172, 3, 1, "", "kinematic_equations"], [171, 3, 1, "", "outer"], [172, 3, 1, "", "partial_velocity"], [171, 3, 1, "", "time_derivative"]], "sympy.physics.vector.point": [[172, 1, 1, "", "Point"]], "sympy.physics.vector.point.Point": [[172, 2, 1, "", "a1pt_theory"], [172, 2, 1, "", "a2pt_theory"], [172, 2, 1, "", "acc"], [172, 2, 1, "", "locatenew"], [172, 2, 1, "", "partial_velocity"], [172, 2, 1, "", "pos_from"], [172, 2, 1, "", "set_acc"], [172, 2, 1, "", "set_pos"], [172, 2, 1, "", "set_vel"], [172, 2, 1, "", "v1pt_theory"], [172, 2, 1, "", "v2pt_theory"], [172, 2, 1, "", "vel"]], "sympy.physics.vector.printing": [[173, 3, 1, "", "init_vprinting"], [173, 3, 1, "", "vlatex"], [173, 3, 1, "", "vpprint"], [173, 3, 1, "", "vprint"]], "sympy.physics.vector.vector": [[169, 1, 1, "", "Vector"]], "sympy.physics.vector.vector.Vector": [[169, 2, 1, "", "angle_between"], [169, 2, 1, "", "applyfunc"], [169, 2, 1, "", "cross"], [169, 2, 1, "", "diff"], [169, 2, 1, "", "doit"], [169, 2, 1, "", "dot"], [169, 2, 1, "", "dt"], [169, 2, 1, "", "express"], [169, 2, 1, "", "free_dynamicsymbols"], [169, 2, 1, "", "free_symbols"], [169, 4, 1, "", "func"], [169, 2, 1, "", "magnitude"], [169, 2, 1, "", "normalize"], [169, 2, 1, "", "outer"], [169, 2, 1, "", "separate"], [169, 2, 1, "", "simplify"], [169, 2, 1, "", "subs"], [169, 2, 1, "", "to_matrix"], [169, 2, 1, "", "xreplace"]], "sympy.physics.wigner": [[178, 3, 1, "", "clebsch_gordan"], [178, 3, 1, "", "dot_rot_grad_Ynm"], [178, 3, 1, "", "gaunt"], [178, 3, 1, "", "racah"], [178, 3, 1, "", "wigner_3j"], [178, 3, 1, "", "wigner_6j"], [178, 3, 1, "", "wigner_9j"], [178, 3, 1, "", "wigner_d"], [178, 3, 1, "", "wigner_d_small"]], "sympy.plotting": [[179, 0, 0, "-", "plot"], [179, 0, 0, "-", "pygletplot"]], "sympy.plotting.plot": [[179, 1, 1, "", "BaseBackend"], [179, 1, 1, "", "BaseSeries"], [179, 1, 1, "", "Line2DBaseSeries"], [179, 1, 1, "", "Line3DBaseSeries"], [179, 1, 1, "", "LineOver1DRangeSeries"], [179, 1, 1, "", "MatplotlibBackend"], [179, 1, 1, "", "Parametric2DLineSeries"], [179, 1, 1, "", "Parametric3DLineSeries"], [179, 1, 1, "", "ParametricSurfaceSeries"], [179, 1, 1, "", "Plot"], [179, 1, 1, "", "PlotGrid"], [179, 1, 1, "", "SurfaceBaseSeries"], [179, 1, 1, "", "SurfaceOver2DRangeSeries"], [179, 1, 1, "", "TextBackend"], [179, 3, 1, "", "plot"], [179, 3, 1, "", "plot3d"], [179, 3, 1, "", "plot3d_parametric_line"], [179, 3, 1, "", "plot3d_parametric_surface"], [179, 3, 1, "", "plot_parametric"]], "sympy.plotting.plot.Line2DBaseSeries": [[179, 2, 1, "", "get_data"]], "sympy.plotting.plot.LineOver1DRangeSeries": [[179, 2, 1, "", "get_points"]], "sympy.plotting.plot.MatplotlibBackend": [[179, 2, 1, "", "get_segments"], [179, 2, 1, "", "process_series"]], "sympy.plotting.plot.Parametric2DLineSeries": [[179, 2, 1, "", "get_points"]], "sympy.plotting.plot.Plot": [[179, 2, 1, "", "append"], [179, 2, 1, "", "extend"]], "sympy.plotting.plot_implicit": [[179, 1, 1, "", "ImplicitSeries"], [179, 3, 1, "", "plot_implicit"]], "sympy.plotting.textplot": [[179, 3, 1, "", "textplot"]], "sympy.polys.agca.extensions": [[180, 1, 1, "", "ExtensionElement"], [180, 1, 1, "", "MonogenicFiniteExtension"]], "sympy.polys.agca.extensions.ExtensionElement": [[180, 2, 1, "", "inverse"]], "sympy.polys.agca.extensions.MonogenicFiniteExtension": [[180, 5, 1, "", "dtype"]], "sympy.polys.agca.homomorphisms": [[180, 1, 1, "", "ModuleHomomorphism"], [180, 3, 1, "", "homomorphism"]], "sympy.polys.agca.homomorphisms.ModuleHomomorphism": [[180, 2, 1, "", "image"], [180, 2, 1, "", "is_injective"], [180, 2, 1, "", "is_isomorphism"], [180, 2, 1, "", "is_surjective"], [180, 2, 1, "", "is_zero"], [180, 2, 1, "", "kernel"], [180, 2, 1, "", "quotient_codomain"], [180, 2, 1, "", "quotient_domain"], [180, 2, 1, "", "restrict_codomain"], [180, 2, 1, "", "restrict_domain"]], "sympy.polys.agca.ideals": [[180, 1, 1, "", "Ideal"]], "sympy.polys.agca.ideals.Ideal": [[180, 2, 1, "", "contains"], [180, 2, 1, "", "depth"], [180, 2, 1, "", "height"], [180, 2, 1, "", "intersect"], [180, 2, 1, "", "is_maximal"], [180, 2, 1, "", "is_primary"], [180, 2, 1, "", "is_prime"], [180, 2, 1, "", "is_principal"], [180, 2, 1, "", "is_radical"], [180, 2, 1, "", "is_whole_ring"], [180, 2, 1, "", "is_zero"], [180, 2, 1, "", "product"], [180, 2, 1, "", "quotient"], [180, 2, 1, "", "radical"], [180, 2, 1, "", "reduce_element"], [180, 2, 1, "", "saturate"], [180, 2, 1, "", "subset"], [180, 2, 1, "", "union"]], "sympy.polys.agca.modules": [[180, 1, 1, "", "FreeModule"], [180, 1, 1, "", "FreeModuleElement"], [180, 1, 1, "", "Module"], [180, 1, 1, "", "QuotientModule"], [180, 1, 1, "", "QuotientModuleElement"], [180, 1, 1, "", "SubModule"], [180, 1, 1, "", "SubQuotientModule"]], "sympy.polys.agca.modules.FreeModule": [[180, 2, 1, "", "basis"], [180, 2, 1, "", "convert"], [180, 5, 1, "", "dtype"], [180, 2, 1, "", "identity_hom"], [180, 2, 1, "", "is_submodule"], [180, 2, 1, "", "is_zero"], [180, 2, 1, "", "multiply_ideal"], [180, 2, 1, "", "quotient_module"]], "sympy.polys.agca.modules.Module": [[180, 2, 1, "", "contains"], [180, 2, 1, "", "convert"], [180, 2, 1, "", "identity_hom"], [180, 2, 1, "", "is_submodule"], [180, 2, 1, "", "is_zero"], [180, 2, 1, "", "multiply_ideal"], [180, 2, 1, "", "quotient_module"], [180, 2, 1, "", "submodule"], [180, 2, 1, "", "subset"]], "sympy.polys.agca.modules.QuotientModule": [[180, 2, 1, "", "convert"], [180, 5, 1, "", "dtype"], [180, 2, 1, "", "identity_hom"], [180, 2, 1, "", "is_submodule"], [180, 2, 1, "", "is_zero"], [180, 2, 1, "", "quotient_hom"], [180, 2, 1, "", "submodule"]], "sympy.polys.agca.modules.QuotientModuleElement": [[180, 2, 1, "", "eq"]], "sympy.polys.agca.modules.SubModule": [[180, 2, 1, "", "convert"], [180, 2, 1, "", "identity_hom"], [180, 2, 1, "", "in_terms_of_generators"], [180, 2, 1, "", "inclusion_hom"], [180, 2, 1, "", "intersect"], [180, 2, 1, "", "is_full_module"], [180, 2, 1, "", "is_submodule"], [180, 2, 1, "", "is_zero"], [180, 2, 1, "", "module_quotient"], [180, 2, 1, "", "multiply_ideal"], [180, 2, 1, "", "quotient_module"], [180, 2, 1, "", "reduce_element"], [180, 2, 1, "", "submodule"], [180, 2, 1, "", "syzygy_module"], [180, 2, 1, "", "union"]], "sympy.polys.agca.modules.SubQuotientModule": [[180, 2, 1, "", "is_full_module"], [180, 2, 1, "", "quotient_hom"]], "sympy.polys.constructor": [[189, 3, 1, "", "construct_domain"]], "sympy.polys.densearith": [[186, 3, 1, "", "dmp_abs"], [186, 3, 1, "", "dmp_add"], [186, 3, 1, "", "dmp_add_ground"], [186, 3, 1, "", "dmp_add_mul"], [186, 3, 1, "", "dmp_add_term"], [186, 3, 1, "", "dmp_div"], [186, 3, 1, "", "dmp_expand"], [186, 3, 1, "", "dmp_exquo"], [186, 3, 1, "", "dmp_exquo_ground"], [186, 3, 1, "", "dmp_ff_div"], [186, 3, 1, "", "dmp_l1_norm"], [186, 3, 1, "", "dmp_max_norm"], [186, 3, 1, "", "dmp_mul"], [186, 3, 1, "", "dmp_mul_ground"], [186, 3, 1, "", "dmp_mul_term"], [186, 3, 1, "", "dmp_neg"], [186, 3, 1, "", "dmp_pdiv"], [186, 3, 1, "", "dmp_pexquo"], [186, 3, 1, "", "dmp_pow"], [186, 3, 1, "", "dmp_pquo"], [186, 3, 1, "", "dmp_prem"], [186, 3, 1, "", "dmp_quo"], [186, 3, 1, "", "dmp_quo_ground"], [186, 3, 1, "", "dmp_rem"], [186, 3, 1, "", "dmp_rr_div"], [186, 3, 1, "", "dmp_sqr"], [186, 3, 1, "", "dmp_sub"], [186, 3, 1, "", "dmp_sub_ground"], [186, 3, 1, "", "dmp_sub_mul"], [186, 3, 1, "", "dmp_sub_term"], [186, 3, 1, "", "dup_lshift"], [186, 3, 1, "", "dup_rshift"]], "sympy.polys.densebasic": [[186, 3, 1, "", "dmp_LC"], [186, 3, 1, "", "dmp_TC"], [186, 3, 1, "", "dmp_apply_pairs"], [186, 3, 1, "", "dmp_convert"], [186, 3, 1, "", "dmp_copy"], [186, 3, 1, "", "dmp_deflate"], [186, 3, 1, "", "dmp_degree"], [186, 3, 1, "", "dmp_degree_in"], [186, 3, 1, "", "dmp_degree_list"], [186, 3, 1, "", "dmp_eject"], [186, 3, 1, "", "dmp_exclude"], [186, 3, 1, "", "dmp_from_dict"], [186, 3, 1, "", "dmp_from_sympy"], [186, 3, 1, "", "dmp_ground"], [186, 3, 1, "", "dmp_ground_LC"], [186, 3, 1, "", "dmp_ground_TC"], [186, 3, 1, "", "dmp_ground_nth"], [186, 3, 1, "", "dmp_ground_p"], [186, 3, 1, "", "dmp_grounds"], [186, 3, 1, "", "dmp_include"], [186, 3, 1, "", "dmp_inflate"], [186, 3, 1, "", "dmp_inject"], [186, 3, 1, "", "dmp_list_terms"], [186, 3, 1, "", "dmp_multi_deflate"], [186, 3, 1, "", "dmp_negative_p"], [186, 3, 1, "", "dmp_nest"], [186, 3, 1, "", "dmp_normal"], [186, 3, 1, "", "dmp_nth"], [186, 3, 1, "", "dmp_one"], [186, 3, 1, "", "dmp_one_p"], [186, 3, 1, "", "dmp_permute"], [186, 3, 1, "", "dmp_positive_p"], [186, 3, 1, "", "dmp_raise"], [186, 3, 1, "", "dmp_slice"], [186, 3, 1, "", "dmp_strip"], [186, 3, 1, "", "dmp_swap"], [186, 3, 1, "", "dmp_terms_gcd"], [186, 3, 1, "", "dmp_to_dict"], [186, 3, 1, "", "dmp_to_tuple"], [186, 3, 1, "", "dmp_true_LT"], [186, 3, 1, "", "dmp_validate"], [186, 3, 1, "", "dmp_zero"], [186, 3, 1, "", "dmp_zero_p"], [186, 3, 1, "", "dmp_zeros"], [186, 3, 1, "", "dup_random"], [186, 3, 1, "", "dup_reverse"]], "sympy.polys.densetools": [[186, 3, 1, "", "dmp_clear_denoms"], [186, 3, 1, "", "dmp_compose"], [186, 3, 1, "", "dmp_diff"], [186, 3, 1, "", "dmp_diff_eval_in"], [186, 3, 1, "", "dmp_diff_in"], [186, 3, 1, "", "dmp_eval"], [186, 3, 1, "", "dmp_eval_in"], [186, 3, 1, "", "dmp_eval_tail"], [186, 3, 1, "", "dmp_ground_content"], [186, 3, 1, "", "dmp_ground_extract"], [186, 3, 1, "", "dmp_ground_monic"], [186, 3, 1, "", "dmp_ground_primitive"], [186, 3, 1, "", "dmp_ground_trunc"], [186, 3, 1, "", "dmp_integrate"], [186, 3, 1, "", "dmp_integrate_in"], [186, 3, 1, "", "dmp_lift"], [186, 3, 1, "", "dmp_revert"], [186, 3, 1, "", "dmp_trunc"], [186, 3, 1, "", "dup_content"], [186, 3, 1, "", "dup_decompose"], [186, 3, 1, "", "dup_extract"], [186, 3, 1, "", "dup_mirror"], [186, 3, 1, "", "dup_monic"], [186, 3, 1, "", "dup_primitive"], [186, 3, 1, "", "dup_real_imag"], [186, 3, 1, "", "dup_scale"], [186, 3, 1, "", "dup_shift"], [186, 3, 1, "", "dup_sign_variations"], [186, 3, 1, "", "dup_transform"]], "sympy.polys.dispersion": [[189, 3, 1, "", "dispersion"], [189, 3, 1, "", "dispersionset"]], "sympy.polys.distributedmodules": [[186, 3, 1, "", "sdm_LC"], [186, 3, 1, "", "sdm_LM"], [186, 3, 1, "", "sdm_LT"], [186, 3, 1, "", "sdm_add"], [186, 3, 1, "", "sdm_deg"], [186, 3, 1, "", "sdm_ecart"], [186, 3, 1, "", "sdm_from_dict"], [186, 3, 1, "", "sdm_from_vector"], [186, 3, 1, "", "sdm_groebner"], [186, 3, 1, "", "sdm_monomial_deg"], [186, 3, 1, "", "sdm_monomial_divides"], [186, 3, 1, "", "sdm_monomial_mul"], [186, 3, 1, "", "sdm_mul_term"], [186, 3, 1, "", "sdm_nf_mora"], [186, 3, 1, "", "sdm_spoly"], [186, 3, 1, "", "sdm_to_dict"], [186, 3, 1, "", "sdm_to_vector"], [186, 3, 1, "", "sdm_zero"]], "sympy.polys.domains": [[184, 1, 1, "", "AlgebraicField"], [184, 1, 1, "", "ComplexField"], [184, 1, 1, "", "ExpressionDomain"], [184, 1, 1, "", "FiniteField"], [184, 1, 1, "", "FractionField"], [184, 1, 1, "", "GMPYFiniteField"], [184, 1, 1, "", "GMPYIntegerRing"], [184, 1, 1, "", "GMPYRationalField"], [184, 1, 1, "", "IntegerRing"], [184, 1, 1, "", "PolynomialRing"], [184, 1, 1, "", "PythonFiniteField"], [184, 1, 1, "", "PythonIntegerRing"], [184, 1, 1, "", "PythonRationalField"], [184, 1, 1, "", "RationalField"], [184, 1, 1, "", "RealField"]], "sympy.polys.domains.AlgebraicField": [[184, 2, 1, "", "algebraic_field"], [184, 2, 1, "", "denom"], [184, 2, 1, "", "discriminant"], [184, 5, 1, "", "dtype"], [184, 5, 1, "", "ext"], [184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_GaussianIntegerRing"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "integral_basis"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "maximal_order"], [184, 5, 1, "", "mod"], [184, 2, 1, "", "numer"], [184, 5, 1, "", "orig_ext"], [184, 2, 1, "", "primes_above"], [184, 2, 1, "", "to_alg_num"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ComplexField": [[184, 2, 1, "", "almosteq"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "get_exact"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.ExpressionDomain": [[184, 1, 1, "", "Expression"], [184, 2, 1, "", "denom"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "from_ExpressionDomain"], [184, 2, 1, "", "from_FractionField"], [184, 2, 1, "", "from_GaussianIntegerRing"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "from_PolynomialRing"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FiniteField": [[184, 2, 1, "", "characteristic"], [184, 2, 1, "", "from_FF"], [184, 2, 1, "", "from_FF_gmpy"], [184, 2, 1, "", "from_FF_python"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.FractionField": [[184, 2, 1, "", "denom"], [184, 2, 1, "", "factorial"], [184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_ComplexField"], [184, 2, 1, "", "from_FractionField"], [184, 2, 1, "", "from_GaussianIntegerRing"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "from_PolynomialRing"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYIntegerRing": [[184, 2, 1, "", "factorial"], [184, 2, 1, "", "from_FF_gmpy"], [184, 2, 1, "", "from_FF_python"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "gcdex"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "sqrt"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.GMPYRationalField": [[184, 2, 1, "", "denom"], [184, 2, 1, "", "div"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "factorial"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "rem"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.IntegerRing": [[184, 2, 1, "", "algebraic_field"], [184, 2, 1, "", "factorial"], [184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_FF"], [184, 2, 1, "", "from_FF_gmpy"], [184, 2, 1, "", "from_FF_python"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "gcdex"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "log"], [184, 2, 1, "", "sqrt"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.PolynomialRing": [[184, 2, 1, "", "factorial"], [184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_ComplexField"], [184, 2, 1, "", "from_FractionField"], [184, 2, 1, "", "from_GaussianIntegerRing"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "from_GlobalPolynomialRing"], [184, 2, 1, "", "from_PolynomialRing"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "gcdex"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "is_unit"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RationalField": [[184, 2, 1, "", "algebraic_field"], [184, 2, 1, "", "denom"], [184, 2, 1, "", "div"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "rem"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.RealField": [[184, 2, 1, "", "almosteq"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "get_exact"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "to_rational"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.compositedomain": [[184, 1, 1, "", "CompositeDomain"]], "sympy.polys.domains.compositedomain.CompositeDomain": [[184, 2, 1, "", "drop"], [184, 2, 1, "", "inject"]], "sympy.polys.domains.domain": [[184, 1, 1, "", "Domain"]], "sympy.polys.domains.domain.Domain": [[184, 2, 1, "", "abs"], [184, 2, 1, "", "add"], [184, 2, 1, "", "alg_field_from_poly"], [184, 2, 1, "", "algebraic_field"], [184, 2, 1, "", "almosteq"], [184, 2, 1, "", "characteristic"], [184, 2, 1, "", "cofactors"], [184, 2, 1, "", "convert"], [184, 2, 1, "", "convert_from"], [184, 2, 1, "", "cyclotomic_field"], [184, 2, 1, "", "denom"], [184, 2, 1, "", "div"], [184, 2, 1, "", "drop"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "evalf"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "frac_field"], [184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_ComplexField"], [184, 2, 1, "", "from_ExpressionDomain"], [184, 2, 1, "", "from_ExpressionRawDomain"], [184, 2, 1, "", "from_FF"], [184, 2, 1, "", "from_FF_gmpy"], [184, 2, 1, "", "from_FF_python"], [184, 2, 1, "", "from_FractionField"], [184, 2, 1, "", "from_GlobalPolynomialRing"], [184, 2, 1, "", "from_MonogenicFiniteExtension"], [184, 2, 1, "", "from_PolynomialRing"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_RealField"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "gcdex"], [184, 2, 1, "", "get_exact"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "half_gcdex"], [184, 5, 1, "", "has_assoc_Field"], [184, 5, 1, "", "has_assoc_Ring"], [184, 2, 1, "", "inject"], [184, 2, 1, "", "invert"], [184, 5, 1, "", "is_Field"], [184, 5, 1, "", "is_PID"], [184, 5, 1, "", "is_Ring"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_one"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "is_zero"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "log"], [184, 2, 1, "", "map"], [184, 2, 1, "", "mul"], [184, 2, 1, "", "n"], [184, 2, 1, "", "neg"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "of_type"], [184, 2, 1, "", "old_frac_field"], [184, 2, 1, "", "old_poly_ring"], [184, 5, 1, "", "one"], [184, 2, 1, "", "poly_ring"], [184, 2, 1, "", "pos"], [184, 2, 1, "", "pow"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "rem"], [184, 2, 1, "", "revert"], [184, 2, 1, "", "sqrt"], [184, 2, 1, "", "sub"], [184, 2, 1, "", "to_sympy"], [184, 4, 1, "", "tp"], [184, 2, 1, "", "unify"], [184, 5, 1, "", "zero"]], "sympy.polys.domains.domainelement": [[184, 1, 1, "", "DomainElement"]], "sympy.polys.domains.domainelement.DomainElement": [[184, 2, 1, "", "parent"]], "sympy.polys.domains.expressiondomain.ExpressionDomain": [[184, 1, 1, "", "Expression"]], "sympy.polys.domains.field": [[184, 1, 1, "", "Field"]], "sympy.polys.domains.field.Field": [[184, 2, 1, "", "div"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "is_unit"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "rem"], [184, 2, 1, "", "revert"]], "sympy.polys.domains.gaussiandomains": [[184, 1, 1, "", "GaussianDomain"], [184, 1, 1, "", "GaussianElement"], [184, 1, 1, "", "GaussianInteger"], [184, 1, 1, "", "GaussianIntegerRing"], [184, 1, 1, "", "GaussianRational"], [184, 1, 1, "", "GaussianRationalField"]], "sympy.polys.domains.gaussiandomains.GaussianDomain": [[184, 2, 1, "", "from_AlgebraicField"], [184, 2, 1, "", "from_QQ"], [184, 2, 1, "", "from_QQ_gmpy"], [184, 2, 1, "", "from_QQ_python"], [184, 2, 1, "", "from_ZZ"], [184, 2, 1, "", "from_ZZ_gmpy"], [184, 2, 1, "", "from_ZZ_python"], [184, 2, 1, "", "from_sympy"], [184, 2, 1, "", "inject"], [184, 2, 1, "", "is_negative"], [184, 2, 1, "", "is_nonnegative"], [184, 2, 1, "", "is_nonpositive"], [184, 2, 1, "", "is_positive"], [184, 2, 1, "", "to_sympy"]], "sympy.polys.domains.gaussiandomains.GaussianElement": [[184, 2, 1, "", "new"], [184, 2, 1, "", "parent"], [184, 2, 1, "", "quadrant"]], "sympy.polys.domains.gaussiandomains.GaussianIntegerRing": [[184, 5, 1, "", "dtype"], [184, 2, 1, "", "from_GaussianIntegerRing"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "normalize"]], "sympy.polys.domains.gaussiandomains.GaussianRationalField": [[184, 2, 1, "", "as_AlgebraicField"], [184, 2, 1, "", "denom"], [184, 5, 1, "", "dtype"], [184, 2, 1, "", "from_GaussianIntegerRing"], [184, 2, 1, "", "from_GaussianRationalField"], [184, 2, 1, "", "get_field"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "numer"]], "sympy.polys.domains.mpelements": [[184, 1, 1, "", "ComplexElement"], [184, 1, 1, "", "RealElement"]], "sympy.polys.domains.quotientring": [[184, 1, 1, "", "QuotientRing"]], "sympy.polys.domains.ring": [[184, 1, 1, "", "Ring"]], "sympy.polys.domains.ring.Ring": [[184, 2, 1, "", "denom"], [184, 2, 1, "", "div"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "free_module"], [184, 2, 1, "", "get_ring"], [184, 2, 1, "", "ideal"], [184, 2, 1, "", "invert"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "quotient_ring"], [184, 2, 1, "", "rem"], [184, 2, 1, "", "revert"]], "sympy.polys.domains.simpledomain": [[184, 1, 1, "", "SimpleDomain"]], "sympy.polys.domains.simpledomain.SimpleDomain": [[184, 2, 1, "", "inject"]], "sympy.polys.euclidtools": [[186, 3, 1, "", "dmp_cancel"], [186, 3, 1, "", "dmp_content"], [186, 3, 1, "", "dmp_discriminant"], [186, 3, 1, "", "dmp_euclidean_prs"], [186, 3, 1, "", "dmp_ff_prs_gcd"], [186, 3, 1, "", "dmp_gcd"], [186, 3, 1, "", "dmp_gcdex"], [186, 3, 1, "", "dmp_half_gcdex"], [186, 3, 1, "", "dmp_inner_gcd"], [186, 3, 1, "", "dmp_inner_subresultants"], [186, 3, 1, "", "dmp_invert"], [186, 3, 1, "", "dmp_lcm"], [186, 3, 1, "", "dmp_primitive"], [186, 3, 1, "", "dmp_primitive_prs"], [186, 3, 1, "", "dmp_prs_resultant"], [186, 3, 1, "", "dmp_qq_collins_resultant"], [186, 3, 1, "", "dmp_qq_heu_gcd"], [186, 3, 1, "", "dmp_resultant"], [186, 3, 1, "", "dmp_rr_prs_gcd"], [186, 3, 1, "", "dmp_subresultants"], [186, 3, 1, "", "dmp_zz_collins_resultant"], [186, 3, 1, "", "dmp_zz_heu_gcd"], [186, 3, 1, "", "dmp_zz_modular_resultant"]], "sympy.polys.factortools": [[186, 3, 1, "", "dmp_ext_factor"], [186, 3, 1, "", "dmp_factor_list"], [186, 3, 1, "", "dmp_factor_list_include"], [186, 3, 1, "", "dmp_irreducible_p"], [186, 3, 1, "", "dmp_trial_division"], [186, 3, 1, "", "dmp_zz_diophantine"], [186, 3, 1, "", "dmp_zz_factor"], [186, 3, 1, "", "dmp_zz_mignotte_bound"], [186, 3, 1, "", "dmp_zz_wang"], [186, 3, 1, "", "dmp_zz_wang_hensel_lifting"], [186, 3, 1, "", "dmp_zz_wang_lead_coeffs"], [186, 3, 1, "", "dmp_zz_wang_non_divisors"], [186, 3, 1, "", "dmp_zz_wang_test_points"], [186, 3, 1, "", "dup_cyclotomic_p"], [186, 3, 1, "", "dup_gf_factor"], [186, 3, 1, "", "dup_zz_cyclotomic_factor"], [186, 3, 1, "", "dup_zz_cyclotomic_poly"], [186, 3, 1, "", "dup_zz_factor"], [186, 3, 1, "", "dup_zz_factor_sqf"], [186, 3, 1, "", "dup_zz_hensel_lift"], [186, 3, 1, "", "dup_zz_hensel_step"], [186, 3, 1, "", "dup_zz_irreducible_p"], [186, 3, 1, "", "dup_zz_zassenhaus"]], "sympy.polys.fglmtools": [[186, 3, 1, "", "matrix_fglm"]], "sympy.polys.fields": [[184, 1, 1, "", "FracElement"], [184, 1, 1, "", "FracField"], [184, 3, 1, "", "field"], [184, 3, 1, "", "sfield"], [184, 3, 1, "", "vfield"], [184, 3, 1, "", "xfield"]], "sympy.polys.fields.FracElement": [[184, 2, 1, "", "diff"]], "sympy.polys.galoistools": [[186, 3, 1, "", "gf_LC"], [186, 3, 1, "", "gf_Qbasis"], [186, 3, 1, "", "gf_Qmatrix"], [186, 3, 1, "", "gf_TC"], [186, 3, 1, "", "gf_add"], [186, 3, 1, "", "gf_add_ground"], [186, 3, 1, "", "gf_add_mul"], [186, 3, 1, "", "gf_berlekamp"], [186, 3, 1, "", "gf_cofactors"], [186, 3, 1, "", "gf_compose"], [186, 3, 1, "", "gf_compose_mod"], [186, 3, 1, "", "gf_crt"], [186, 3, 1, "", "gf_crt1"], [186, 3, 1, "", "gf_crt2"], [186, 3, 1, "", "gf_csolve"], [186, 3, 1, "", "gf_degree"], [186, 3, 1, "", "gf_diff"], [186, 3, 1, "", "gf_div"], [186, 3, 1, "", "gf_eval"], [186, 3, 1, "", "gf_expand"], [186, 3, 1, "", "gf_exquo"], [186, 3, 1, "", "gf_factor"], [186, 3, 1, "", "gf_factor_sqf"], [186, 3, 1, "", "gf_from_dict"], [186, 3, 1, "", "gf_from_int_poly"], [186, 3, 1, "", "gf_gcd"], [186, 3, 1, "", "gf_gcdex"], [186, 3, 1, "", "gf_int"], [186, 3, 1, "", "gf_irreducible"], [186, 3, 1, "", "gf_irreducible_p"], [186, 3, 1, "", "gf_lcm"], [186, 3, 1, "", "gf_lshift"], [186, 3, 1, "", "gf_monic"], [186, 3, 1, "", "gf_mul"], [186, 3, 1, "", "gf_mul_ground"], [186, 3, 1, "", "gf_multi_eval"], [186, 3, 1, "", "gf_neg"], [186, 3, 1, "", "gf_normal"], [186, 3, 1, "", "gf_pow"], [186, 3, 1, "", "gf_pow_mod"], [186, 3, 1, "", "gf_quo"], [186, 3, 1, "", "gf_quo_ground"], [186, 3, 1, "", "gf_random"], [186, 3, 1, "", "gf_rem"], [186, 3, 1, "", "gf_rshift"], [186, 3, 1, "", "gf_shoup"], [186, 3, 1, "", "gf_sqf_list"], [186, 3, 1, "", "gf_sqf_p"], [186, 3, 1, "", "gf_sqf_part"], [186, 3, 1, "", "gf_sqr"], [186, 3, 1, "", "gf_strip"], [186, 3, 1, "", "gf_sub"], [186, 3, 1, "", "gf_sub_ground"], [186, 3, 1, "", "gf_sub_mul"], [186, 3, 1, "", "gf_to_dict"], [186, 3, 1, "", "gf_to_int_poly"], [186, 3, 1, "", "gf_trace_map"], [186, 3, 1, "", "gf_trunc"], [186, 3, 1, "", "gf_value"], [186, 3, 1, "", "gf_zassenhaus"]], "sympy.polys.groebnertools": [[186, 3, 1, "", "groebner"], [186, 3, 1, "", "is_groebner"], [186, 3, 1, "", "is_minimal"], [186, 3, 1, "", "is_reduced"], [186, 3, 1, "", "red_groebner"], [186, 3, 1, "", "spoly"]], "sympy.polys.matrices.ddm": [[182, 1, 1, "", "DDM"]], "sympy.polys.matrices.ddm.DDM": [[182, 2, 1, "", "add"], [182, 2, 1, "", "charpoly"], [182, 2, 1, "", "det"], [182, 2, 1, "", "hstack"], [182, 2, 1, "", "inv"], [182, 2, 1, "", "is_lower"], [182, 2, 1, "", "is_upper"], [182, 2, 1, "", "is_zero_matrix"], [182, 2, 1, "", "lu"], [182, 2, 1, "", "lu_solve"], [182, 2, 1, "", "matmul"], [182, 2, 1, "", "neg"], [182, 2, 1, "", "rref"], [182, 2, 1, "", "scc"], [182, 2, 1, "", "sub"], [182, 2, 1, "", "vstack"]], "sympy.polys.matrices.domainmatrix": [[182, 1, 1, "", "DomainMatrix"]], "sympy.polys.matrices.domainmatrix.DomainMatrix": [[182, 2, 1, "", "add"], [182, 2, 1, "", "charpoly"], [182, 2, 1, "", "columnspace"], [182, 2, 1, "", "convert_to"], [182, 2, 1, "", "det"], [182, 2, 1, "", "diag"], [182, 2, 1, "", "eye"], [182, 2, 1, "", "from_Matrix"], [182, 2, 1, "", "from_dict_sympy"], [182, 2, 1, "", "from_list"], [182, 2, 1, "", "from_list_sympy"], [182, 2, 1, "", "from_rep"], [182, 2, 1, "", "hstack"], [182, 2, 1, "", "inv"], [182, 4, 1, "", "is_lower"], [182, 4, 1, "", "is_upper"], [182, 2, 1, "", "lu"], [182, 2, 1, "", "lu_solve"], [182, 2, 1, "", "matmul"], [182, 2, 1, "", "mul"], [182, 2, 1, "", "neg"], [182, 2, 1, "", "nullspace"], [182, 2, 1, "", "ones"], [182, 2, 1, "", "pow"], [182, 2, 1, "", "rowspace"], [182, 2, 1, "", "rref"], [182, 2, 1, "", "scc"], [182, 2, 1, "", "sub"], [182, 2, 1, "", "to_Matrix"], [182, 2, 1, "", "to_dense"], [182, 2, 1, "", "to_field"], [182, 2, 1, "", "to_sparse"], [182, 2, 1, "", "transpose"], [182, 2, 1, "", "unify"], [182, 2, 1, "", "vstack"], [182, 2, 1, "", "zeros"]], "sympy.polys.matrices.normalforms": [[182, 3, 1, "", "hermite_normal_form"], [182, 3, 1, "", "smith_normal_form"]], "sympy.polys.matrices.sdm": [[182, 1, 1, "", "SDM"]], "sympy.polys.matrices.sdm.SDM": [[182, 2, 1, "", "add"], [182, 2, 1, "", "charpoly"], [182, 2, 1, "", "convert_to"], [182, 2, 1, "", "copy"], [182, 2, 1, "", "det"], [182, 2, 1, "", "eye"], [182, 2, 1, "", "from_ddm"], [182, 2, 1, "", "from_list"], [182, 2, 1, "", "hstack"], [182, 2, 1, "", "inv"], [182, 2, 1, "", "is_lower"], [182, 2, 1, "", "is_upper"], [182, 2, 1, "", "is_zero_matrix"], [182, 2, 1, "", "lu"], [182, 2, 1, "", "lu_solve"], [182, 2, 1, "", "matmul"], [182, 2, 1, "", "mul"], [182, 2, 1, "", "neg"], [182, 2, 1, "", "new"], [182, 2, 1, "", "nullspace"], [182, 2, 1, "", "rref"], [182, 2, 1, "", "scc"], [182, 2, 1, "", "sub"], [182, 2, 1, "", "to_ddm"], [182, 2, 1, "", "to_list"], [182, 2, 1, "", "transpose"], [182, 2, 1, "", "vstack"], [182, 2, 1, "", "zeros"]], "sympy.polys.modulargcd": [[186, 3, 1, "", "_modgcd_multivariate_p"], [186, 3, 1, "", "func_field_modgcd"], [186, 3, 1, "", "modgcd_bivariate"], [186, 3, 1, "", "modgcd_multivariate"], [186, 3, 1, "", "modgcd_univariate"]], "sympy.polys.monomials": [[189, 1, 1, "", "Monomial"], [189, 3, 1, "", "itermonomials"], [189, 3, 1, "", "monomial_count"]], "sympy.polys.monomials.Monomial": [[189, 2, 1, "", "as_expr"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "lcm"]], "sympy.polys.numberfields.basis": [[188, 3, 1, "", "round_two"]], "sympy.polys.numberfields.minpoly": [[188, 3, 1, "", "minimal_polynomial"], [188, 3, 1, "", "minpoly"]], "sympy.polys.numberfields": [[188, 0, 0, "-", "modules"], [188, 0, 0, "-", "subfield"]], "sympy.polys.numberfields.modules": [[188, 1, 1, "", "EndomorphismRing"], [188, 1, 1, "", "InnerEndomorphism"], [188, 1, 1, "", "Module"], [188, 1, 1, "", "ModuleElement"], [188, 1, 1, "", "ModuleEndomorphism"], [188, 1, 1, "", "ModuleHomomorphism"], [188, 1, 1, "", "PowerBasis"], [188, 1, 1, "", "PowerBasisElement"], [188, 1, 1, "", "Submodule"], [188, 3, 1, "", "find_min_poly"], [188, 3, 1, "", "make_mod_elt"]], "sympy.polys.numberfields.modules.EndomorphismRing": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "inner_endomorphism"], [188, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.InnerEndomorphism": [[188, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.Module": [[188, 2, 1, "", "__call__"], [188, 2, 1, "", "ancestors"], [188, 2, 1, "", "basis_elements"], [188, 2, 1, "", "element_from_rational"], [188, 2, 1, "", "endomorphism_ring"], [188, 2, 1, "", "is_compat_col"], [188, 2, 1, "", "mult_tab"], [188, 4, 1, "", "n"], [188, 2, 1, "", "nearest_common_ancestor"], [188, 4, 1, "", "number_field"], [188, 2, 1, "", "one"], [188, 4, 1, "", "parent"], [188, 2, 1, "", "power_basis_ancestor"], [188, 2, 1, "", "represent"], [188, 2, 1, "", "starts_with_unity"], [188, 2, 1, "", "submodule_from_gens"], [188, 2, 1, "", "submodule_from_matrix"], [188, 2, 1, "", "whole_submodule"], [188, 2, 1, "", "zero"]], "sympy.polys.numberfields.modules.ModuleElement": [[188, 4, 1, "", "QQ_col"], [188, 2, 1, "", "__add__"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "__mod__"], [188, 2, 1, "", "__mul__"], [188, 2, 1, "", "column"], [188, 2, 1, "", "equiv"], [188, 2, 1, "", "from_int_list"], [188, 2, 1, "", "is_compat"], [188, 4, 1, "", "n"], [188, 2, 1, "", "over_power_basis"], [188, 2, 1, "", "reduced"], [188, 2, 1, "", "reduced_mod_p"], [188, 2, 1, "", "to_ancestor"], [188, 2, 1, "", "to_parent"], [188, 2, 1, "", "unify"]], "sympy.polys.numberfields.modules.ModuleEndomorphism": [[188, 2, 1, "", "__init__"]], "sympy.polys.numberfields.modules.ModuleHomomorphism": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "kernel"], [188, 2, 1, "", "matrix"]], "sympy.polys.numberfields.modules.PowerBasis": [[188, 2, 1, "", "__init__"], [188, 2, 1, "", "element_from_ANP"], [188, 2, 1, "", "element_from_alg_num"], [188, 2, 1, "", "element_from_poly"], [188, 2, 1, "", "represent"]], "sympy.polys.numberfields.modules.PowerBasisElement": [[188, 4, 1, "", "T"], [188, 2, 1, "", "as_expr"], [188, 4, 1, "", "generator"], [188, 4, 1, "", "is_rational"], [188, 2, 1, "", "norm"], [188, 2, 1, "", "numerator"], [188, 2, 1, "", "poly"], [188, 2, 1, "", "to_ANP"], [188, 2, 1, "", "to_alg_num"]], "sympy.polys.numberfields.modules.Submodule": [[188, 4, 1, "", "QQ_matrix"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "add"], [188, 2, 1, "", "basis_element_pullbacks"], [188, 2, 1, "", "discard_before"], [188, 2, 1, "", "mul"], [188, 2, 1, "", "reduce_element"], [188, 2, 1, "", "reduced"], [188, 2, 1, "", "represent"]], "sympy.polys.numberfields.primes": [[188, 1, 1, "", "PrimeIdeal"], [188, 3, 1, "", "prime_decomp"], [188, 3, 1, "", "prime_valuation"]], "sympy.polys.numberfields.primes.PrimeIdeal": [[188, 2, 1, "", "__add__"], [188, 2, 1, "", "__init__"], [188, 2, 1, "", "__mul__"], [188, 2, 1, "", "as_submodule"], [188, 4, 1, "", "is_inert"], [188, 2, 1, "", "reduce_ANP"], [188, 2, 1, "", "reduce_alg_num"], [188, 2, 1, "", "reduce_element"], [188, 2, 1, "", "repr"], [188, 2, 1, "", "test_factor"], [188, 2, 1, "", "valuation"]], "sympy.polys.numberfields.subfield": [[188, 3, 1, "", "field_isomorphism"], [188, 3, 1, "", "primitive_element"], [188, 3, 1, "", "to_number_field"]], "sympy.polys.numberfields.utilities": [[188, 1, 1, "", "AlgIntPowers"], [188, 3, 1, "", "coeff_search"], [188, 3, 1, "", "extract_fundamental_discriminant"], [188, 3, 1, "", "get_num_denom"], [188, 3, 1, "", "is_int"], [188, 3, 1, "", "is_rat"], [188, 3, 1, "", "isolate"], [188, 3, 1, "", "supplement_a_subspace"]], "sympy.polys.numberfields.utilities.AlgIntPowers": [[188, 2, 1, "", "__init__"]], "sympy.polys.orderings": [[189, 1, 1, "", "GradedLexOrder"], [189, 1, 1, "", "LexOrder"], [189, 1, 1, "", "MonomialOrder"], [189, 1, 1, "", "ReversedGradedLexOrder"]], "sympy.polys.orthopolys": [[189, 3, 1, "", "chebyshevt_poly"], [189, 3, 1, "", "chebyshevu_poly"], [189, 3, 1, "", "gegenbauer_poly"], [189, 3, 1, "", "hermite_poly"], [189, 3, 1, "", "jacobi_poly"], [189, 3, 1, "", "laguerre_poly"], [189, 3, 1, "", "legendre_poly"], [189, 3, 1, "", "spherical_bessel_fn"]], "sympy.polys.partfrac": [[189, 3, 1, "", "apart"], [189, 3, 1, "", "apart_list"], [189, 3, 1, "", "assemble_partfrac_list"]], "sympy.polys.polyclasses": [[184, 1, 1, "", "ANP"], [184, 1, 1, "", "DMF"], [184, 1, 1, "", "DMP"]], "sympy.polys.polyclasses.ANP": [[184, 2, 1, "", "LC"], [184, 2, 1, "", "TC"], [184, 4, 1, "", "is_ground"], [184, 4, 1, "", "is_one"], [184, 4, 1, "", "is_zero"], [184, 2, 1, "", "pow"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_list"], [184, 2, 1, "", "to_sympy_dict"], [184, 2, 1, "", "to_sympy_list"], [184, 2, 1, "", "to_tuple"], [184, 2, 1, "", "unify"]], "sympy.polys.polyclasses.DMF": [[184, 2, 1, "", "add"], [184, 2, 1, "", "cancel"], [184, 2, 1, "", "denom"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "frac_unify"], [184, 2, 1, "", "half_per"], [184, 2, 1, "", "invert"], [184, 4, 1, "", "is_one"], [184, 4, 1, "", "is_zero"], [184, 2, 1, "", "mul"], [184, 2, 1, "", "neg"], [184, 2, 1, "", "numer"], [184, 2, 1, "", "per"], [184, 2, 1, "", "poly_unify"], [184, 2, 1, "", "pow"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "sub"]], "sympy.polys.polyclasses.DMP": [[184, 2, 1, "", "LC"], [184, 2, 1, "", "TC"], [184, 2, 1, "", "abs"], [184, 2, 1, "", "add"], [184, 2, 1, "", "add_ground"], [184, 2, 1, "", "all_coeffs"], [184, 2, 1, "", "all_monoms"], [184, 2, 1, "", "all_terms"], [184, 2, 1, "", "cancel"], [184, 2, 1, "", "cauchy_lower_bound"], [184, 2, 1, "", "cauchy_upper_bound"], [184, 2, 1, "", "clear_denoms"], [184, 2, 1, "", "coeffs"], [184, 2, 1, "", "cofactors"], [184, 2, 1, "", "compose"], [184, 2, 1, "", "content"], [184, 2, 1, "", "convert"], [184, 2, 1, "", "count_complex_roots"], [184, 2, 1, "", "count_real_roots"], [184, 2, 1, "", "decompose"], [184, 2, 1, "", "deflate"], [184, 2, 1, "", "degree"], [184, 2, 1, "", "degree_list"], [184, 2, 1, "", "diff"], [184, 2, 1, "", "discriminant"], [184, 2, 1, "", "div"], [184, 2, 1, "", "eject"], [184, 2, 1, "", "eval"], [184, 2, 1, "", "exclude"], [184, 2, 1, "", "exquo"], [184, 2, 1, "", "exquo_ground"], [184, 2, 1, "", "factor_list"], [184, 2, 1, "", "factor_list_include"], [184, 2, 1, "", "from_dict"], [184, 2, 1, "", "from_list"], [184, 2, 1, "", "from_sympy_list"], [184, 2, 1, "", "gcd"], [184, 2, 1, "", "gcdex"], [184, 2, 1, "", "gff_list"], [184, 2, 1, "", "half_gcdex"], [184, 2, 1, "", "homogeneous_order"], [184, 2, 1, "", "homogenize"], [184, 2, 1, "", "inject"], [184, 2, 1, "", "integrate"], [184, 2, 1, "", "intervals"], [184, 2, 1, "", "invert"], [184, 4, 1, "", "is_cyclotomic"], [184, 4, 1, "", "is_ground"], [184, 4, 1, "", "is_homogeneous"], [184, 4, 1, "", "is_irreducible"], [184, 4, 1, "", "is_linear"], [184, 4, 1, "", "is_monic"], [184, 4, 1, "", "is_monomial"], [184, 4, 1, "", "is_one"], [184, 4, 1, "", "is_primitive"], [184, 4, 1, "", "is_quadratic"], [184, 4, 1, "", "is_sqf"], [184, 4, 1, "", "is_zero"], [184, 2, 1, "", "l1_norm"], [184, 2, 1, "", "l2_norm_squared"], [184, 2, 1, "", "lcm"], [184, 2, 1, "", "lift"], [184, 2, 1, "", "max_norm"], [184, 2, 1, "", "mignotte_sep_bound_squared"], [184, 2, 1, "", "monic"], [184, 2, 1, "", "monoms"], [184, 2, 1, "", "mul"], [184, 2, 1, "", "mul_ground"], [184, 2, 1, "", "neg"], [184, 2, 1, "", "norm"], [184, 2, 1, "", "nth"], [184, 2, 1, "", "pdiv"], [184, 2, 1, "", "per"], [184, 2, 1, "", "permute"], [184, 2, 1, "", "pexquo"], [184, 2, 1, "", "pow"], [184, 2, 1, "", "pquo"], [184, 2, 1, "", "prem"], [184, 2, 1, "", "primitive"], [184, 2, 1, "", "quo"], [184, 2, 1, "", "quo_ground"], [184, 2, 1, "", "refine_root"], [184, 2, 1, "", "rem"], [184, 2, 1, "", "resultant"], [184, 2, 1, "", "revert"], [184, 2, 1, "", "shift"], [184, 2, 1, "", "slice"], [184, 2, 1, "", "sqf_list"], [184, 2, 1, "", "sqf_list_include"], [184, 2, 1, "", "sqf_norm"], [184, 2, 1, "", "sqf_part"], [184, 2, 1, "", "sqr"], [184, 2, 1, "", "sturm"], [184, 2, 1, "", "sub"], [184, 2, 1, "", "sub_ground"], [184, 2, 1, "", "subresultants"], [184, 2, 1, "", "terms"], [184, 2, 1, "", "terms_gcd"], [184, 2, 1, "", "to_dict"], [184, 2, 1, "", "to_exact"], [184, 2, 1, "", "to_field"], [184, 2, 1, "", "to_list"], [184, 2, 1, "", "to_ring"], [184, 2, 1, "", "to_sympy_dict"], [184, 2, 1, "", "to_sympy_list"], [184, 2, 1, "", "to_tuple"], [184, 2, 1, "", "total_degree"], [184, 2, 1, "", "transform"], [184, 2, 1, "", "trunc"], [184, 2, 1, "", "unify"]], "sympy.polys": [[186, 0, 0, "-", "polyconfig"], [186, 0, 0, "-", "polyoptions"], [191, 0, 0, "-", "solvers"]], "sympy.polys.polyconfig": [[186, 3, 1, "", "setup"]], "sympy.polys.polyerrors": [[186, 1, 1, "", "BasePolynomialError"], [186, 1, 1, "", "CoercionFailed"], [186, 1, 1, "", "ComputationFailed"], [186, 1, 1, "", "DomainError"], [186, 1, 1, "", "EvaluationFailed"], [186, 1, 1, "", "ExactQuotientFailed"], [186, 1, 1, "", "ExtraneousFactors"], [186, 1, 1, "", "FlagError"], [186, 1, 1, "", "GeneratorsError"], [186, 1, 1, "", "GeneratorsNeeded"], [186, 1, 1, "", "HeuristicGCDFailed"], [186, 1, 1, "", "HomomorphismFailed"], [186, 1, 1, "", "IsomorphismFailed"], [186, 1, 1, "", "MultivariatePolynomialError"], [186, 1, 1, "", "NotAlgebraic"], [186, 1, 1, "", "NotInvertible"], [186, 1, 1, "", "NotReversible"], [186, 1, 1, "", "OperationNotSupported"], [186, 1, 1, "", "OptionError"], [186, 1, 1, "", "PolificationFailed"], [186, 1, 1, "", "PolynomialError"], [186, 1, 1, "", "RefinementFailed"], [186, 1, 1, "", "UnificationFailed"], [186, 1, 1, "", "UnivariatePolynomialError"]], "sympy.polys.polyfuncs": [[189, 3, 1, "", "horner"], [189, 3, 1, "", "interpolate"], [189, 3, 1, "", "symmetrize"], [189, 3, 1, "", "viete"]], "sympy.polys.polyoptions": [[186, 1, 1, "", "Options"], [186, 3, 1, "", "build_options"]], "sympy.polys.polyoptions.Options": [[186, 2, 1, "", "clone"]], "sympy.polys.polyroots": [[189, 3, 1, "", "roots"]], "sympy.polys.polytools": [[189, 1, 1, "", "GroebnerBasis"], [189, 3, 1, "", "LC"], [189, 3, 1, "", "LM"], [189, 3, 1, "", "LT"], [189, 1, 1, "", "Poly"], [189, 1, 1, "", "PurePoly"], [189, 3, 1, "", "cancel"], [189, 3, 1, "", "cofactors"], [189, 3, 1, "", "compose"], [189, 3, 1, "", "content"], [189, 3, 1, "", "count_roots"], [189, 3, 1, "", "decompose"], [189, 3, 1, "", "degree"], [189, 3, 1, "", "degree_list"], [189, 3, 1, "", "discriminant"], [189, 3, 1, "", "div"], [189, 3, 1, "", "exquo"], [189, 3, 1, "", "factor"], [189, 3, 1, "", "factor_list"], [189, 3, 1, "", "gcd"], [189, 3, 1, "", "gcd_list"], [189, 3, 1, "", "gcdex"], [189, 3, 1, "", "gff"], [189, 3, 1, "", "gff_list"], [189, 3, 1, "", "groebner"], [189, 3, 1, "", "ground_roots"], [189, 3, 1, "", "half_gcdex"], [189, 3, 1, "", "intervals"], [189, 3, 1, "", "invert"], [189, 3, 1, "", "is_zero_dimensional"], [189, 3, 1, "", "lcm"], [189, 3, 1, "", "lcm_list"], [189, 3, 1, "", "monic"], [189, 3, 1, "", "nroots"], [189, 3, 1, "", "nth_power_roots_poly"], [189, 3, 1, "", "parallel_poly_from_expr"], [189, 3, 1, "", "pdiv"], [189, 3, 1, "", "pexquo"], [189, 3, 1, "", "poly"], [189, 3, 1, "", "poly_from_expr"], [189, 3, 1, "", "pquo"], [189, 3, 1, "", "prem"], [189, 3, 1, "", "primitive"], [189, 3, 1, "", "quo"], [189, 3, 1, "", "real_roots"], [189, 3, 1, "", "reduced"], [189, 3, 1, "", "refine_root"], [189, 3, 1, "", "rem"], [189, 3, 1, "", "resultant"], [189, 3, 1, "", "sqf"], [189, 3, 1, "", "sqf_list"], [189, 3, 1, "", "sqf_norm"], [189, 3, 1, "", "sqf_part"], [189, 3, 1, "", "sturm"], [189, 3, 1, "", "subresultants"], [189, 3, 1, "", "terms_gcd"], [189, 3, 1, "", "trunc"]], "sympy.polys.polytools.GroebnerBasis": [[189, 2, 1, "", "contains"], [189, 2, 1, "", "fglm"], [189, 4, 1, "", "is_zero_dimensional"], [189, 2, 1, "", "reduce"]], "sympy.polys.polytools.Poly": [[189, 2, 1, "", "EC"], [189, 2, 1, "", "EM"], [189, 2, 1, "", "ET"], [189, 2, 1, "", "LC"], [189, 2, 1, "", "LM"], [189, 2, 1, "", "LT"], [189, 2, 1, "", "TC"], [189, 2, 1, "", "abs"], [189, 2, 1, "", "add"], [189, 2, 1, "", "add_ground"], [189, 2, 1, "", "all_coeffs"], [189, 2, 1, "", "all_monoms"], [189, 2, 1, "", "all_roots"], [189, 2, 1, "", "all_terms"], [189, 2, 1, "", "as_dict"], [189, 2, 1, "", "as_expr"], [189, 2, 1, "", "as_list"], [189, 2, 1, "", "as_poly"], [189, 2, 1, "", "cancel"], [189, 2, 1, "", "clear_denoms"], [189, 2, 1, "", "coeff_monomial"], [189, 2, 1, "", "coeffs"], [189, 2, 1, "", "cofactors"], [189, 2, 1, "", "compose"], [189, 2, 1, "", "content"], [189, 2, 1, "", "count_roots"], [189, 2, 1, "", "decompose"], [189, 2, 1, "", "deflate"], [189, 2, 1, "", "degree"], [189, 2, 1, "", "degree_list"], [189, 2, 1, "", "diff"], [189, 2, 1, "", "discriminant"], [189, 2, 1, "", "dispersion"], [189, 2, 1, "", "dispersionset"], [189, 2, 1, "", "div"], [189, 4, 1, "", "domain"], [189, 2, 1, "", "eject"], [189, 2, 1, "", "eval"], [189, 2, 1, "", "exclude"], [189, 2, 1, "", "exquo"], [189, 2, 1, "", "exquo_ground"], [189, 2, 1, "", "factor_list"], [189, 2, 1, "", "factor_list_include"], [189, 4, 1, "", "free_symbols"], [189, 4, 1, "", "free_symbols_in_domain"], [189, 2, 1, "", "from_dict"], [189, 2, 1, "", "from_expr"], [189, 2, 1, "", "from_list"], [189, 2, 1, "", "from_poly"], [189, 2, 1, "", "gcd"], [189, 2, 1, "", "gcdex"], [189, 4, 1, "", "gen"], [189, 2, 1, "", "get_domain"], [189, 2, 1, "", "get_modulus"], [189, 2, 1, "", "gff_list"], [189, 2, 1, "", "ground_roots"], [189, 2, 1, "", "half_gcdex"], [189, 2, 1, "", "has_only_gens"], [189, 2, 1, "", "homogeneous_order"], [189, 2, 1, "", "homogenize"], [189, 2, 1, "", "inject"], [189, 2, 1, "", "integrate"], [189, 2, 1, "", "intervals"], [189, 2, 1, "", "invert"], [189, 4, 1, "", "is_cyclotomic"], [189, 4, 1, "", "is_ground"], [189, 4, 1, "", "is_homogeneous"], [189, 4, 1, "", "is_irreducible"], [189, 4, 1, "", "is_linear"], [189, 4, 1, "", "is_monic"], [189, 4, 1, "", "is_monomial"], [189, 4, 1, "", "is_multivariate"], [189, 4, 1, "", "is_one"], [189, 4, 1, "", "is_primitive"], [189, 4, 1, "", "is_quadratic"], [189, 4, 1, "", "is_sqf"], [189, 4, 1, "", "is_univariate"], [189, 4, 1, "", "is_zero"], [189, 2, 1, "", "l1_norm"], [189, 2, 1, "", "lcm"], [189, 2, 1, "", "length"], [189, 2, 1, "", "lift"], [189, 2, 1, "", "ltrim"], [189, 2, 1, "", "match"], [189, 2, 1, "", "max_norm"], [189, 2, 1, "", "monic"], [189, 2, 1, "", "monoms"], [189, 2, 1, "", "mul"], [189, 2, 1, "", "mul_ground"], [189, 2, 1, "", "neg"], [189, 2, 1, "", "new"], [189, 2, 1, "", "norm"], [189, 2, 1, "", "nroots"], [189, 2, 1, "", "nth"], [189, 2, 1, "", "nth_power_roots_poly"], [189, 4, 1, "", "one"], [189, 2, 1, "", "pdiv"], [189, 2, 1, "", "per"], [189, 2, 1, "", "pexquo"], [189, 2, 1, "", "pow"], [189, 2, 1, "", "pquo"], [189, 2, 1, "", "prem"], [189, 2, 1, "", "primitive"], [189, 2, 1, "", "quo"], [189, 2, 1, "", "quo_ground"], [189, 2, 1, "", "rat_clear_denoms"], [189, 2, 1, "", "real_roots"], [189, 2, 1, "", "refine_root"], [189, 2, 1, "", "rem"], [189, 2, 1, "", "reorder"], [189, 2, 1, "", "replace"], [189, 2, 1, "", "resultant"], [189, 2, 1, "", "retract"], [189, 2, 1, "", "revert"], [189, 2, 1, "", "root"], [189, 2, 1, "", "same_root"], [189, 2, 1, "", "set_domain"], [189, 2, 1, "", "set_modulus"], [189, 2, 1, "", "shift"], [189, 2, 1, "", "slice"], [189, 2, 1, "", "sqf_list"], [189, 2, 1, "", "sqf_list_include"], [189, 2, 1, "", "sqf_norm"], [189, 2, 1, "", "sqf_part"], [189, 2, 1, "", "sqr"], [189, 2, 1, "", "sturm"], [189, 2, 1, "", "sub"], [189, 2, 1, "", "sub_ground"], [189, 2, 1, "", "subresultants"], [189, 2, 1, "", "terms"], [189, 2, 1, "", "terms_gcd"], [189, 2, 1, "", "termwise"], [189, 2, 1, "", "to_exact"], [189, 2, 1, "", "to_field"], [189, 2, 1, "", "to_ring"], [189, 2, 1, "", "total_degree"], [189, 2, 1, "", "transform"], [189, 2, 1, "", "trunc"], [189, 2, 1, "", "unify"], [189, 4, 1, "", "unit"], [189, 4, 1, "", "zero"]], "sympy.polys.polytools.PurePoly": [[189, 4, 1, "", "free_symbols"]], "sympy.polys.rationaltools": [[189, 3, 1, "", "together"]], "sympy.polys.ring_series": [[190, 3, 1, "", "_tan1"], [190, 3, 1, "", "mul_xin"], [190, 3, 1, "", "pow_xin"], [190, 3, 1, "", "rs_LambertW"], [190, 3, 1, "", "rs_asin"], [190, 3, 1, "", "rs_atan"], [190, 3, 1, "", "rs_atanh"], [190, 3, 1, "", "rs_compose_add"], [190, 3, 1, "", "rs_cos"], [190, 3, 1, "", "rs_cos_sin"], [190, 3, 1, "", "rs_cosh"], [190, 3, 1, "", "rs_cot"], [190, 3, 1, "", "rs_diff"], [190, 3, 1, "", "rs_exp"], [190, 3, 1, "", "rs_fun"], [190, 3, 1, "", "rs_hadamard_exp"], [190, 3, 1, "", "rs_integrate"], [190, 3, 1, "", "rs_is_puiseux"], [190, 3, 1, "", "rs_log"], [190, 3, 1, "", "rs_mul"], [190, 3, 1, "", "rs_newton"], [190, 3, 1, "", "rs_nth_root"], [190, 3, 1, "", "rs_pow"], [190, 3, 1, "", "rs_puiseux"], [190, 3, 1, "", "rs_puiseux2"], [190, 3, 1, "", "rs_series_from_list"], [190, 3, 1, "", "rs_series_inversion"], [190, 3, 1, "", "rs_series_reversion"], [190, 3, 1, "", "rs_sin"], [190, 3, 1, "", "rs_sinh"], [190, 3, 1, "", "rs_square"], [190, 3, 1, "", "rs_subs"], [190, 3, 1, "", "rs_tan"], [190, 3, 1, "", "rs_tanh"], [190, 3, 1, "", "rs_trunc"]], "sympy.polys.rings": [[184, 1, 1, "", "PolyElement"], [184, 1, 1, "", "PolyRing"], [184, 3, 1, "", "ring"], [184, 3, 1, "", "sring"], [184, 3, 1, "", "vring"], [184, 3, 1, "", "xring"]], "sympy.polys.rings.PolyElement": [[184, 2, 1, "", "almosteq"], [184, 2, 1, "", "cancel"], [184, 2, 1, "", "coeff"], [184, 2, 1, "", "coeffs"], [184, 2, 1, "", "const"], [184, 2, 1, "", "content"], [184, 2, 1, "", "copy"], [184, 2, 1, "", "degree"], [184, 2, 1, "", "degrees"], [184, 2, 1, "", "diff"], [184, 2, 1, "", "div"], [184, 2, 1, "", "imul_num"], [184, 2, 1, "", "itercoeffs"], [184, 2, 1, "", "itermonoms"], [184, 2, 1, "", "iterterms"], [184, 2, 1, "", "leading_expv"], [184, 2, 1, "", "leading_monom"], [184, 2, 1, "", "leading_term"], [184, 2, 1, "", "listcoeffs"], [184, 2, 1, "", "listmonoms"], [184, 2, 1, "", "listterms"], [184, 2, 1, "", "monic"], [184, 2, 1, "", "monoms"], [184, 2, 1, "", "primitive"], [184, 2, 1, "", "square"], [184, 2, 1, "", "strip_zero"], [184, 2, 1, "", "tail_degree"], [184, 2, 1, "", "tail_degrees"], [184, 2, 1, "", "terms"]], "sympy.polys.rings.PolyRing": [[184, 2, 1, "", "add"], [184, 2, 1, "", "add_gens"], [184, 2, 1, "", "compose"], [184, 2, 1, "", "drop"], [184, 2, 1, "", "drop_to_ground"], [184, 2, 1, "", "index"], [184, 2, 1, "", "monomial_basis"], [184, 2, 1, "", "mul"]], "sympy.polys.rootoftools": [[189, 1, 1, "", "ComplexRootOf"], [189, 1, 1, "", "RootOf"], [189, 1, 1, "", "RootSum"], [189, 3, 1, "", "rootof"]], "sympy.polys.rootoftools.ComplexRootOf": [[189, 2, 1, "", "_all_roots"], [189, 2, 1, "", "_complexes_index"], [189, 2, 1, "", "_complexes_sorted"], [189, 2, 1, "", "_count_roots"], [189, 2, 1, "", "_ensure_complexes_init"], [189, 2, 1, "", "_ensure_reals_init"], [189, 2, 1, "", "_eval_evalf"], [189, 2, 1, "", "_eval_is_imaginary"], [189, 2, 1, "", "_eval_is_real"], [189, 2, 1, "", "_get_complexes"], [189, 2, 1, "", "_get_complexes_sqf"], [189, 2, 1, "", "_get_interval"], [189, 2, 1, "", "_get_reals"], [189, 2, 1, "", "_get_reals_sqf"], [189, 2, 1, "", "_get_roots"], [189, 2, 1, "", "_indexed_root"], [189, 2, 1, "", "_new"], [189, 2, 1, "", "_postprocess_root"], [189, 2, 1, "", "_preprocess_roots"], [189, 2, 1, "", "_real_roots"], [189, 2, 1, "", "_reals_index"], [189, 2, 1, "", "_reals_sorted"], [189, 2, 1, "", "_refine_complexes"], [189, 2, 1, "", "_reset"], [189, 2, 1, "", "_roots_trivial"], [189, 2, 1, "", "_set_interval"], [189, 2, 1, "", "all_roots"], [189, 2, 1, "", "clear_cache"], [189, 2, 1, "", "eval_approx"], [189, 2, 1, "", "eval_rational"], [189, 2, 1, "", "real_roots"]], "sympy.polys.rootoftools.RootSum": [[189, 2, 1, "", "new"]], "sympy.polys.solvers": [[191, 3, 1, "", "_solve_lin_sys"], [191, 3, 1, "", "_solve_lin_sys_component"], [191, 3, 1, "", "eqs_to_matrix"], [191, 3, 1, "", "solve_lin_sys"], [191, 3, 1, "", "sympy_eqs_to_ring"]], "sympy.polys.specialpolys": [[189, 3, 1, "", "cyclotomic_poly"], [189, 3, 1, "", "interpolating_poly"], [189, 3, 1, "", "random_poly"], [189, 3, 1, "", "swinnerton_dyer_poly"], [189, 3, 1, "", "symmetric_poly"]], "sympy.printing": [[193, 0, 0, "-", "aesaracode"], [193, 0, 0, "-", "c"], [193, 0, 0, "-", "codeprinter"], [193, 0, 0, "-", "conventions"], [193, 0, 0, "-", "cxx"], [193, 0, 0, "-", "fortran"], [193, 0, 0, "-", "gtk"], [193, 0, 0, "-", "jscode"], [193, 0, 0, "-", "julia"], [193, 0, 0, "-", "lambdarepr"], [193, 0, 0, "-", "latex"], [193, 0, 0, "-", "maple"], [193, 0, 0, "-", "mathematica"], [193, 0, 0, "-", "mathml"], [193, 0, 0, "-", "octave"], [193, 0, 0, "-", "precedence"], [193, 0, 0, "-", "pretty"], [193, 0, 0, "-", "preview"], [193, 0, 0, "-", "printer"], [193, 0, 0, "-", "pycode"], [193, 0, 0, "-", "python"], [193, 0, 0, "-", "rcode"], [193, 0, 0, "-", "repr"], [193, 0, 0, "-", "rust"], [193, 0, 0, "-", "str"], [193, 0, 0, "-", "tree"]], "sympy.printing.aesaracode": [[193, 1, 1, "", "AesaraPrinter"], [193, 3, 1, "", "aesara_code"], [193, 3, 1, "", "aesara_function"], [193, 3, 1, "", "dim_handling"]], "sympy.printing.aesaracode.AesaraPrinter": [[193, 2, 1, "", "doprint"], [193, 5, 1, "", "printmethod"]], "sympy.printing.c": [[193, 1, 1, "", "C89CodePrinter"], [193, 1, 1, "", "C99CodePrinter"], [193, 3, 1, "", "ccode"], [193, 6, 1, "", "known_functions_C89"], [193, 6, 1, "", "known_functions_C99"], [193, 3, 1, "", "print_ccode"]], "sympy.printing.c.C89CodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.c.C99CodePrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.codeprinter": [[193, 7, 1, "", "AssignmentError"], [193, 1, 1, "", "CodePrinter"], [193, 3, 1, "", "cxxcode"]], "sympy.printing.codeprinter.CodePrinter": [[193, 2, 1, "", "doprint"], [193, 5, 1, "", "printmethod"]], "sympy.printing.conventions": [[193, 3, 1, "", "split_super_sub"]], "sympy.printing.cxx": [[193, 1, 1, "", "CXX11CodePrinter"], [193, 1, 1, "", "CXX98CodePrinter"]], "sympy.printing.cxx.CXX11CodePrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.cxx.CXX98CodePrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.dot": [[193, 3, 1, "", "dotprint"]], "sympy.printing.fortran": [[193, 1, 1, "", "FCodePrinter"], [193, 3, 1, "", "fcode"], [193, 3, 1, "", "print_fcode"]], "sympy.printing.fortran.FCodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.gtk": [[193, 3, 1, "", "print_gtk"]], "sympy.printing.jscode": [[193, 1, 1, "", "JavascriptCodePrinter"], [193, 3, 1, "", "jscode"], [193, 6, 1, "", "known_functions"]], "sympy.printing.jscode.JavascriptCodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.julia": [[193, 1, 1, "", "JuliaCodePrinter"], [193, 3, 1, "", "julia_code"], [193, 6, 1, "", "known_fcns_src1"], [193, 6, 1, "", "known_fcns_src2"]], "sympy.printing.julia.JuliaCodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.lambdarepr": [[193, 1, 1, "", "LambdaPrinter"], [193, 3, 1, "", "lambdarepr"]], "sympy.printing.lambdarepr.LambdaPrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.latex": [[193, 1, 1, "", "LatexPrinter"], [193, 6, 1, "", "accepted_latex_functions"], [193, 3, 1, "", "latex"], [193, 3, 1, "", "print_latex"]], "sympy.printing.latex.LatexPrinter": [[193, 2, 1, "", "parenthesize_super"], [193, 5, 1, "", "printmethod"]], "sympy.printing.maple": [[193, 1, 1, "", "MapleCodePrinter"], [193, 3, 1, "", "maple_code"], [193, 3, 1, "", "print_maple_code"]], "sympy.printing.maple.MapleCodePrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.mathematica": [[193, 1, 1, "", "MCodePrinter"], [193, 6, 1, "", "known_functions"], [193, 3, 1, "", "mathematica_code"]], "sympy.printing.mathematica.MCodePrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.mathml": [[193, 1, 1, "", "MathMLContentPrinter"], [193, 1, 1, "", "MathMLPresentationPrinter"], [193, 1, 1, "", "MathMLPrinterBase"], [193, 3, 1, "", "mathml"], [193, 3, 1, "", "print_mathml"]], "sympy.printing.mathml.MathMLContentPrinter": [[193, 2, 1, "", "mathml_tag"], [193, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPresentationPrinter": [[193, 2, 1, "", "mathml_tag"], [193, 5, 1, "", "printmethod"]], "sympy.printing.mathml.MathMLPrinterBase": [[193, 2, 1, "", "doprint"]], "sympy.printing.octave": [[193, 1, 1, "", "OctaveCodePrinter"], [193, 6, 1, "", "known_fcns_src1"], [193, 6, 1, "", "known_fcns_src2"], [193, 3, 1, "", "octave_code"]], "sympy.printing.octave.OctaveCodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.precedence": [[193, 6, 1, "", "PRECEDENCE"], [193, 6, 1, "", "PRECEDENCE_FUNCTIONS"], [193, 6, 1, "", "PRECEDENCE_VALUES"], [193, 3, 1, "", "precedence"]], "sympy.printing.pretty": [[193, 0, 0, "-", "pretty"], [193, 0, 0, "-", "pretty_symbology"], [193, 0, 0, "-", "stringpict"]], "sympy.printing.pretty.pretty": [[193, 1, 1, "", "PrettyPrinter"], [193, 3, 1, "", "pretty"], [193, 3, 1, "", "pretty_print"]], "sympy.printing.pretty.pretty.PrettyPrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.pretty.pretty_symbology": [[193, 3, 1, "", "G"], [193, 3, 1, "", "U"], [193, 3, 1, "", "VF"], [193, 3, 1, "", "annotated"], [193, 6, 1, "", "atoms_table"], [193, 6, 1, "", "digit_2txt"], [193, 6, 1, "", "frac"], [193, 3, 1, "", "g"], [193, 6, 1, "", "greek_letters"], [193, 3, 1, "", "hobj"], [193, 3, 1, "", "pretty_atom"], [193, 3, 1, "", "pretty_symbol"], [193, 3, 1, "", "pretty_try_use_unicode"], [193, 3, 1, "", "pretty_use_unicode"], [193, 6, 1, "", "root"], [193, 6, 1, "", "sub"], [193, 6, 1, "", "sup"], [193, 6, 1, "", "symb_2txt"], [193, 3, 1, "", "vobj"], [193, 3, 1, "", "xobj"], [193, 3, 1, "", "xstr"], [193, 3, 1, "", "xsym"]], "sympy.printing.pretty.stringpict": [[193, 1, 1, "", "prettyForm"], [193, 1, 1, "", "stringPict"]], "sympy.printing.pretty.stringpict.prettyForm": [[193, 2, 1, "", "apply"]], "sympy.printing.pretty.stringpict.stringPict": [[193, 2, 1, "", "above"], [193, 2, 1, "", "below"], [193, 2, 1, "", "height"], [193, 2, 1, "", "left"], [193, 2, 1, "", "leftslash"], [193, 2, 1, "", "next"], [193, 2, 1, "", "parens"], [193, 2, 1, "", "render"], [193, 2, 1, "", "right"], [193, 2, 1, "", "root"], [193, 2, 1, "", "stack"], [193, 2, 1, "", "terminal_width"], [193, 2, 1, "", "width"]], "sympy.printing.preview": [[193, 3, 1, "", "preview"]], "sympy.printing.printer": [[193, 1, 1, "", "Printer"]], "sympy.printing.printer.Printer": [[193, 2, 1, "", "_print"], [193, 2, 1, "", "doprint"], [193, 5, 1, "", "printmethod"], [193, 2, 1, "", "set_global_settings"]], "sympy.printing.pycode": [[193, 1, 1, "", "MpmathPrinter"], [193, 3, 1, "", "pycode"]], "sympy.printing.rcode": [[193, 1, 1, "", "RCodePrinter"], [193, 6, 1, "", "known_functions"], [193, 3, 1, "", "print_rcode"], [193, 3, 1, "", "rcode"]], "sympy.printing.rcode.RCodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.repr": [[193, 1, 1, "", "ReprPrinter"], [193, 3, 1, "", "srepr"]], "sympy.printing.repr.ReprPrinter": [[193, 2, 1, "", "emptyPrinter"], [193, 5, 1, "", "printmethod"], [193, 2, 1, "", "reprify"]], "sympy.printing.rust": [[193, 1, 1, "", "RustCodePrinter"], [193, 6, 1, "", "known_functions"], [193, 3, 1, "", "rust_code"]], "sympy.printing.rust.RustCodePrinter": [[193, 2, 1, "", "indent_code"], [193, 5, 1, "", "printmethod"]], "sympy.printing.str": [[193, 1, 1, "", "StrPrinter"], [193, 3, 1, "", "sstr"], [193, 3, 1, "", "sstrrepr"]], "sympy.printing.str.StrPrinter": [[193, 5, 1, "", "printmethod"]], "sympy.printing.tree": [[193, 3, 1, "", "pprint_nodes"], [193, 3, 1, "", "print_node"], [193, 3, 1, "", "print_tree"], [193, 3, 1, "", "tree"]], "sympy.series.acceleration": [[200, 3, 1, "", "richardson"], [200, 3, 1, "", "shanks"]], "sympy.series.formal": [[195, 1, 1, "", "FiniteFormalPowerSeries"], [195, 1, 1, "", "FormalPowerSeries"], [195, 1, 1, "", "FormalPowerSeriesCompose"], [195, 1, 1, "", "FormalPowerSeriesInverse"], [195, 1, 1, "", "FormalPowerSeriesProduct"], [195, 3, 1, "", "compute_fps"], [195, 3, 1, "", "exp_re"], [195, 3, 1, "", "fps"], [195, 3, 1, "", "hyper_algorithm"], [195, 3, 1, "", "hyper_re"], [195, 3, 1, "", "rational_algorithm"], [195, 3, 1, "", "rational_independent"], [195, 3, 1, "", "rsolve_hypergeometric"], [195, 3, 1, "", "simpleDE"], [195, 3, 1, "", "solve_de"]], "sympy.series.formal.FormalPowerSeries": [[195, 2, 1, "", "coeff_bell"], [195, 2, 1, "", "compose"], [195, 4, 1, "", "infinite"], [195, 2, 1, "", "integrate"], [195, 2, 1, "", "inverse"], [195, 2, 1, "", "polynomial"], [195, 2, 1, "", "product"], [195, 2, 1, "", "truncate"]], "sympy.series.formal.FormalPowerSeriesCompose": [[195, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesInverse": [[195, 4, 1, "", "function"]], "sympy.series.formal.FormalPowerSeriesProduct": [[195, 4, 1, "", "function"]], "sympy.series.fourier": [[196, 1, 1, "", "FourierSeries"], [196, 3, 1, "", "fourier_series"]], "sympy.series.fourier.FourierSeries": [[196, 2, 1, "", "scale"], [196, 2, 1, "", "scalex"], [196, 2, 1, "", "shift"], [196, 2, 1, "", "shiftx"], [196, 2, 1, "", "sigma_approximation"], [196, 2, 1, "", "truncate"]], "sympy.series.gruntz": [[200, 1, 1, "", "SubsSet"], [200, 3, 1, "", "build_expression_tree"], [200, 3, 1, "", "calculate_series"], [200, 3, 1, "", "compare"], [200, 3, 1, "", "gruntz"], [200, 3, 1, "", "limitinf"], [200, 3, 1, "", "mrv"], [200, 3, 1, "", "mrv_leadterm"], [200, 3, 1, "", "mrv_max1"], [200, 3, 1, "", "mrv_max3"], [200, 3, 1, "", "rewrite"], [200, 3, 1, "", "sign"]], "sympy.series.gruntz.SubsSet": [[200, 2, 1, "", "copy"], [200, 2, 1, "", "do_subs"], [200, 2, 1, "", "meets"], [200, 2, 1, "", "union"]], "sympy.series.limits": [[200, 1, 1, "", "Limit"], [200, 3, 1, "", "limit"]], "sympy.series.limits.Limit": [[200, 2, 1, "", "doit"]], "sympy.series.limitseq": [[198, 3, 1, "", "difference_delta"], [198, 3, 1, "", "dominant"], [198, 3, 1, "", "limit_seq"]], "sympy.series.order": [[200, 1, 1, "", "Order"]], "sympy.series.order.Order": [[200, 2, 1, "", "contains"]], "sympy.series.residues": [[200, 3, 1, "", "residue"]], "sympy.series.sequences": [[199, 1, 1, "", "EmptySequence"], [199, 1, 1, "", "RecursiveSeq"], [199, 1, 1, "", "SeqAdd"], [199, 1, 1, "", "SeqBase"], [199, 1, 1, "", "SeqFormula"], [199, 1, 1, "", "SeqMul"], [199, 1, 1, "", "SeqPer"], [199, 3, 1, "", "sequence"]], "sympy.series.sequences.EmptySequence": [[199, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.RecursiveSeq": [[199, 4, 1, "", "initial"], [199, 4, 1, "", "interval"], [199, 4, 1, "", "n"], [199, 4, 1, "", "recurrence"], [199, 4, 1, "", "start"], [199, 4, 1, "", "stop"], [199, 4, 1, "", "y"], [199, 4, 1, "", "yn"]], "sympy.series.sequences.SeqAdd": [[199, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqBase": [[199, 2, 1, "", "coeff"], [199, 2, 1, "", "coeff_mul"], [199, 2, 1, "", "find_linear_recurrence"], [199, 4, 1, "", "free_symbols"], [199, 4, 1, "", "gen"], [199, 4, 1, "", "interval"], [199, 4, 1, "", "length"], [199, 4, 1, "", "start"], [199, 4, 1, "", "stop"], [199, 4, 1, "", "variables"]], "sympy.series.sequences.SeqFormula": [[199, 2, 1, "", "coeff_mul"]], "sympy.series.sequences.SeqMul": [[199, 2, 1, "", "reduce"]], "sympy.series.sequences.SeqPer": [[199, 2, 1, "", "coeff_mul"]], "sympy.series.series": [[200, 3, 1, "", "series"]], "sympy.sets": [[201, 0, 0, "-", "conditionset"], [201, 0, 0, "-", "fancysets"], [201, 0, 0, "-", "powerset"], [201, 0, 0, "-", "sets"]], "sympy.sets.conditionset": [[201, 1, 1, "", "ConditionSet"], [201, 1, 1, "", "Contains"], [201, 1, 1, "", "SetKind"]], "sympy.sets.fancysets": [[201, 1, 1, "", "CartesianComplexRegion"], [201, 1, 1, "", "ComplexRegion"], [201, 1, 1, "", "Complexes"], [201, 1, 1, "", "ImageSet"], [201, 1, 1, "", "Integers"], [201, 1, 1, "", "Naturals"], [201, 1, 1, "", "Naturals0"], [201, 1, 1, "", "PolarComplexRegion"], [201, 1, 1, "", "Range"], [201, 1, 1, "", "Rationals"], [201, 1, 1, "", "Reals"], [201, 3, 1, "", "normalize_theta_set"]], "sympy.sets.fancysets.ComplexRegion": [[201, 4, 1, "", "a_interval"], [201, 4, 1, "", "b_interval"], [201, 2, 1, "", "from_real"], [201, 4, 1, "", "psets"], [201, 4, 1, "", "sets"]], "sympy.sets.fancysets.Range": [[201, 2, 1, "", "as_relational"], [201, 4, 1, "", "reversed"]], "sympy.sets.powerset": [[201, 1, 1, "", "PowerSet"]], "sympy.sets.sets": [[201, 1, 1, "", "Complement"], [201, 1, 1, "", "DisjointUnion"], [201, 1, 1, "", "EmptySet"], [201, 1, 1, "", "FiniteSet"], [201, 1, 1, "", "Intersection"], [201, 1, 1, "", "Interval"], [201, 1, 1, "", "ProductSet"], [201, 1, 1, "", "Set"], [201, 1, 1, "", "SymmetricDifference"], [201, 1, 1, "", "Union"], [201, 1, 1, "", "UniversalSet"], [201, 3, 1, "", "imageset"]], "sympy.sets.sets.Complement": [[201, 2, 1, "", "as_relational"], [201, 2, 1, "", "reduce"]], "sympy.sets.sets.FiniteSet": [[201, 2, 1, "", "as_relational"]], "sympy.sets.sets.Intersection": [[201, 2, 1, "", "as_relational"]], "sympy.sets.sets.Interval": [[201, 2, 1, "", "Lopen"], [201, 2, 1, "", "Ropen"], [201, 2, 1, "", "as_relational"], [201, 4, 1, "", "end"], [201, 4, 1, "", "is_left_unbounded"], [201, 4, 1, "", "is_right_unbounded"], [201, 4, 1, "", "left_open"], [201, 2, 1, "", "open"], [201, 4, 1, "", "right_open"], [201, 4, 1, "", "start"]], "sympy.sets.sets.ProductSet": [[201, 4, 1, "", "is_iterable"]], "sympy.sets.sets.Set": [[201, 4, 1, "", "boundary"], [201, 4, 1, "", "closure"], [201, 2, 1, "", "complement"], [201, 2, 1, "", "contains"], [201, 4, 1, "", "inf"], [201, 4, 1, "", "interior"], [201, 2, 1, "", "intersect"], [201, 2, 1, "", "intersection"], [201, 4, 1, "", "is_closed"], [201, 2, 1, "", "is_disjoint"], [201, 4, 1, "", "is_open"], [201, 2, 1, "", "is_proper_subset"], [201, 2, 1, "", "is_proper_superset"], [201, 2, 1, "", "is_subset"], [201, 2, 1, "", "is_superset"], [201, 2, 1, "", "isdisjoint"], [201, 2, 1, "", "issubset"], [201, 2, 1, "", "issuperset"], [201, 4, 1, "", "kind"], [201, 4, 1, "", "measure"], [201, 2, 1, "", "powerset"], [201, 4, 1, "", "sup"], [201, 2, 1, "", "symmetric_difference"], [201, 2, 1, "", "union"]], "sympy.sets.sets.SymmetricDifference": [[201, 2, 1, "", "as_relational"]], "sympy.sets.sets.Union": [[201, 2, 1, "", "as_relational"]], "sympy.simplify": [[205, 0, 0, "-", "combsimp"], [205, 0, 0, "-", "cse_main"], [205, 0, 0, "-", "epathtools"], [205, 0, 0, "-", "hyperexpand"], [203, 0, 0, "-", "hyperexpand_doc"], [205, 0, 0, "-", "powsimp"], [205, 0, 0, "-", "radsimp"], [205, 0, 0, "-", "ratsimp"], [11, 0, 0, "-", "simplify"], [205, 0, 0, "-", "sqrtdenest"], [205, 0, 0, "-", "trigsimp"]], "sympy.simplify.combsimp": [[205, 3, 1, "", "combsimp"]], "sympy.simplify.cse_main": [[205, 3, 1, "", "cse"], [205, 3, 1, "", "opt_cse"], [205, 3, 1, "", "tree_cse"]], "sympy.simplify.epathtools": [[205, 1, 1, "", "EPath"], [205, 3, 1, "", "epath"]], "sympy.simplify.epathtools.EPath": [[205, 2, 1, "", "apply"], [205, 2, 1, "", "select"]], "sympy.simplify.fu": [[202, 3, 1, "", "TR0"], [202, 3, 1, "", "TR1"], [202, 3, 1, "", "TR10"], [202, 3, 1, "", "TR10i"], [202, 3, 1, "", "TR11"], [202, 3, 1, "", "TR111"], [202, 3, 1, "", "TR12"], [202, 3, 1, "", "TR12i"], [202, 3, 1, "", "TR13"], [202, 3, 1, "", "TR14"], [202, 3, 1, "", "TR15"], [202, 3, 1, "", "TR16"], [202, 3, 1, "", "TR2"], [202, 3, 1, "", "TR22"], [202, 3, 1, "", "TR2i"], [202, 3, 1, "", "TR3"], [202, 3, 1, "", "TR4"], [202, 3, 1, "", "TR5"], [202, 3, 1, "", "TR6"], [202, 3, 1, "", "TR7"], [202, 3, 1, "", "TR8"], [202, 3, 1, "", "TR9"], [202, 3, 1, "", "TRmorrie"], [202, 3, 1, "", "TRpower"], [202, 3, 1, "", "fu"]], "sympy.simplify.hyperexpand": [[205, 3, 1, "", "hyperexpand"]], "sympy.simplify.powsimp": [[205, 3, 1, "", "powdenest"], [205, 3, 1, "", "powsimp"]], "sympy.simplify.radsimp": [[205, 3, 1, "", "collect"], [205, 3, 1, "", "collect_const"], [205, 3, 1, "", "collect_sqrt"], [205, 3, 1, "", "fraction"], [205, 3, 1, "", "rad_rationalize"], [205, 3, 1, "", "radsimp"], [205, 3, 1, "", "rcollect"]], "sympy.simplify.ratsimp": [[205, 3, 1, "", "ratsimp"], [205, 3, 1, "", "ratsimpmodprime"]], "sympy.simplify.simplify": [[205, 3, 1, "", "besselsimp"], [205, 3, 1, "", "hypersimilar"], [205, 3, 1, "", "hypersimp"], [205, 3, 1, "", "kroneckersimp"], [205, 3, 1, "", "logcombine"], [205, 3, 1, "", "nsimplify"], [205, 3, 1, "", "nthroot"], [205, 3, 1, "", "posify"], [205, 3, 1, "", "separatevars"], [205, 3, 1, "", "simplify"]], "sympy.simplify.sqrtdenest": [[205, 3, 1, "", "sqrtdenest"]], "sympy.simplify.trigsimp": [[205, 3, 1, "", "trigsimp"]], "sympy.solvers.deutils": [[211, 3, 1, "", "ode_order"]], "sympy.solvers.diophantine.diophantine": [[206, 1, 1, "", "BinaryQuadratic"], [206, 1, 1, "", "CubicThue"], [206, 1, 1, "", "DiophantineEquationType"], [206, 1, 1, "", "DiophantineSolutionSet"], [206, 1, 1, "", "GeneralPythagorean"], [206, 1, 1, "", "GeneralSumOfEvenPowers"], [206, 1, 1, "", "GeneralSumOfSquares"], [206, 1, 1, "", "HomogeneousGeneralQuadratic"], [206, 1, 1, "", "HomogeneousTernaryQuadratic"], [206, 1, 1, "", "HomogeneousTernaryQuadraticNormal"], [206, 1, 1, "", "InhomogeneousGeneralQuadratic"], [206, 1, 1, "", "InhomogeneousTernaryQuadratic"], [206, 1, 1, "", "Linear"], [206, 3, 1, "", "PQa"], [206, 1, 1, "", "Univariate"], [206, 3, 1, "", "base_solution_linear"], [206, 3, 1, "", "classify_diop"], [206, 3, 1, "", "cornacchia"], [206, 3, 1, "", "descent"], [206, 3, 1, "", "diop_DN"], [206, 3, 1, "", "diop_bf_DN"], [206, 3, 1, "", "diop_general_pythagorean"], [206, 3, 1, "", "diop_general_sum_of_even_powers"], [206, 3, 1, "", "diop_general_sum_of_squares"], [206, 3, 1, "", "diop_linear"], [206, 3, 1, "", "diop_quadratic"], [206, 3, 1, "", "diop_solve"], [206, 3, 1, "", "diop_ternary_quadratic"], [206, 3, 1, "", "diop_ternary_quadratic_normal"], [206, 3, 1, "", "diophantine"], [206, 3, 1, "", "divisible"], [206, 3, 1, "", "equivalent"], [206, 3, 1, "", "find_DN"], [206, 3, 1, "", "gaussian_reduce"], [206, 3, 1, "", "holzer"], [206, 3, 1, "", "ldescent"], [206, 3, 1, "", "merge_solution"], [206, 3, 1, "", "parametrize_ternary_quadratic"], [206, 3, 1, "", "partition"], [206, 3, 1, "", "power_representation"], [206, 3, 1, "", "prime_as_sum_of_two_squares"], [206, 3, 1, "", "reconstruct"], [206, 3, 1, "", "sqf_normal"], [206, 3, 1, "", "square_factor"], [206, 3, 1, "", "sum_of_four_squares"], [206, 3, 1, "", "sum_of_powers"], [206, 3, 1, "", "sum_of_squares"], [206, 3, 1, "", "sum_of_three_squares"], [206, 3, 1, "", "transformation_to_DN"], [206, 3, 1, "", "transformation_to_normal"]], "sympy.solvers.diophantine.diophantine.DiophantineEquationType": [[206, 2, 1, "", "matches"]], "sympy.solvers": [[208, 0, 0, "-", "inequalities"], [209, 0, 0, "-", "ode"], [210, 0, 0, "-", "pde"], [211, 0, 0, "-", "recurr"], [212, 0, 0, "-", "solveset"]], "sympy.solvers.inequalities": [[208, 3, 1, "", "reduce_abs_inequalities"], [208, 3, 1, "", "reduce_abs_inequality"], [208, 3, 1, "", "reduce_inequalities"], [208, 3, 1, "", "reduce_rational_inequalities"], [208, 3, 1, "", "solve_poly_inequalities"], [208, 3, 1, "", "solve_poly_inequality"], [208, 3, 1, "", "solve_rational_inequalities"], [208, 3, 1, "", "solve_univariate_inequality"]], "sympy.solvers.ode": [[209, 6, 1, "", "allhints"], [209, 3, 1, "", "checkinfsol"], [209, 3, 1, "", "checkodesol"], [209, 3, 1, "", "classify_ode"], [209, 3, 1, "", "constantsimp"], [209, 3, 1, "", "dsolve"], [209, 3, 1, "", "homogeneous_order"], [209, 3, 1, "", "infinitesimals"], [209, 0, 0, "-", "ode"]], "sympy.solvers.ode.lie_group": [[209, 3, 1, "", "lie_heuristic_abaco1_product"], [209, 3, 1, "", "lie_heuristic_abaco1_simple"], [209, 3, 1, "", "lie_heuristic_abaco2_similar"], [209, 3, 1, "", "lie_heuristic_abaco2_unique_general"], [209, 3, 1, "", "lie_heuristic_abaco2_unique_unknown"], [209, 3, 1, "", "lie_heuristic_bivariate"], [209, 3, 1, "", "lie_heuristic_chi"], [209, 3, 1, "", "lie_heuristic_function_sum"], [209, 3, 1, "", "lie_heuristic_linear"]], "sympy.solvers.ode.ode": [[209, 3, 1, "", "_handle_Integral"], [209, 3, 1, "", "_linear_2eq_order1_type6"], [209, 3, 1, "", "_linear_2eq_order1_type7"], [209, 3, 1, "", "_nonlinear_2eq_order1_type1"], [209, 3, 1, "", "_nonlinear_2eq_order1_type2"], [209, 3, 1, "", "_nonlinear_2eq_order1_type3"], [209, 3, 1, "", "_nonlinear_2eq_order1_type4"], [209, 3, 1, "", "_nonlinear_2eq_order1_type5"], [209, 3, 1, "", "_nonlinear_3eq_order1_type1"], [209, 3, 1, "", "_nonlinear_3eq_order1_type2"], [209, 3, 1, "", "_nonlinear_3eq_order1_type3"], [209, 3, 1, "", "_nonlinear_3eq_order1_type4"], [209, 3, 1, "", "_nonlinear_3eq_order1_type5"], [209, 3, 1, "", "constant_renumber"], [209, 3, 1, "", "ode_1st_power_series"], [209, 3, 1, "", "ode_2nd_power_series_ordinary"], [209, 3, 1, "", "ode_2nd_power_series_regular"], [209, 3, 1, "", "ode_sol_simplicity"], [209, 3, 1, "", "odesimp"]], "sympy.solvers.ode.riccati": [[209, 3, 1, "", "compute_m_ybar"], [209, 3, 1, "", "construct_c"], [209, 3, 1, "", "construct_d"], [209, 3, 1, "", "get_gen_sol_from_part_sol"], [209, 3, 1, "", "rational_laurent_series"], [209, 3, 1, "", "remove_redundant_sols"], [209, 3, 1, "", "riccati_inverse_normal"], [209, 3, 1, "", "riccati_normal"], [209, 3, 1, "", "riccati_reduced"], [209, 3, 1, "", "solve_aux_eq"], [209, 3, 1, "", "solve_riccati"]], "sympy.solvers.ode.single": [[209, 1, 1, "", "AlmostLinear"], [209, 1, 1, "", "Bernoulli"], [209, 1, 1, "", "Factorable"], [209, 1, 1, "", "FirstExact"], [209, 1, 1, "", "FirstLinear"], [209, 1, 1, "", "HomogeneousCoeffBest"], [209, 1, 1, "", "HomogeneousCoeffSubsDepDivIndep"], [209, 1, 1, "", "HomogeneousCoeffSubsIndepDivDep"], [209, 1, 1, "", "LieGroup"], [209, 1, 1, "", "LinearCoefficients"], [209, 1, 1, "", "Liouville"], [209, 1, 1, "", "NthAlgebraic"], [209, 1, 1, "", "NthLinearConstantCoeffHomogeneous"], [209, 1, 1, "", "NthLinearConstantCoeffUndeterminedCoefficients"], [209, 1, 1, "", "NthLinearConstantCoeffVariationOfParameters"], [209, 1, 1, "", "NthLinearEulerEqHomogeneous"], [209, 1, 1, "", "NthLinearEulerEqNonhomogeneousUndeterminedCoefficients"], [209, 1, 1, "", "NthLinearEulerEqNonhomogeneousVariationOfParameters"], [209, 1, 1, "", "NthOrderReducible"], [209, 1, 1, "", "RationalRiccati"], [209, 1, 1, "", "RiccatiSpecial"], [209, 1, 1, "", "SecondHypergeometric"], [209, 1, 1, "", "SecondLinearAiry"], [209, 1, 1, "", "SecondLinearBessel"], [209, 1, 1, "", "Separable"], [209, 1, 1, "", "SeparableReduced"]], "sympy.solvers.ode.systems": [[209, 3, 1, "", "canonical_odes"], [209, 3, 1, "", "dsolve_system"], [209, 3, 1, "", "linear_ode_to_matrix"], [209, 3, 1, "", "linodesolve"], [209, 3, 1, "", "linodesolve_type"], [209, 3, 1, "", "matrix_exp"], [209, 3, 1, "", "matrix_exp_jordan_form"]], "sympy.solvers.pde": [[210, 3, 1, "", "checkpdesol"], [210, 3, 1, "", "classify_pde"], [210, 3, 1, "", "pde_1st_linear_constant_coeff"], [210, 3, 1, "", "pde_1st_linear_constant_coeff_homogeneous"], [210, 3, 1, "", "pde_1st_linear_variable_coeff"], [210, 3, 1, "", "pde_separate"], [210, 3, 1, "", "pde_separate_add"], [210, 3, 1, "", "pde_separate_mul"], [210, 3, 1, "", "pdsolve"]], "sympy.solvers.polysys": [[211, 3, 1, "", "solve_poly_system"], [211, 3, 1, "", "solve_triangulated"]], "sympy.solvers.recurr": [[211, 3, 1, "", "rsolve"], [211, 3, 1, "", "rsolve_hyper"], [211, 3, 1, "", "rsolve_poly"], [211, 3, 1, "", "rsolve_ratio"]], "sympy.solvers.solvers": [[211, 3, 1, "", "checksol"], [211, 3, 1, "", "nsolve"], [211, 3, 1, "", "solve"], [211, 3, 1, "", "solve_linear"], [211, 3, 1, "", "solve_linear_system"], [211, 3, 1, "", "solve_linear_system_LU"], [211, 3, 1, "", "solve_undetermined_coeffs"], [211, 3, 1, "", "unrad"]], "sympy.solvers.solveset": [[212, 3, 1, "", "_is_exponential"], [212, 3, 1, "", "_is_logarithmic"], [212, 3, 1, "", "_solve_exponential"], [212, 3, 1, "", "_solve_logarithm"], [212, 3, 1, "", "_transolve"], [212, 3, 1, "", "domain_check"], [212, 3, 1, "", "invert_complex"], [212, 3, 1, "", "invert_real"], [212, 3, 1, "", "linear_eq_to_matrix"], [212, 3, 1, "", "linsolve"], [212, 3, 1, "", "nonlinsolve"], [212, 3, 1, "", "solveset"], [212, 3, 1, "", "solveset_complex"], [212, 3, 1, "", "solveset_real"], [212, 3, 1, "", "solvify"]], "sympy.stats": [[213, 3, 1, "", "Arcsin"], [213, 3, 1, "", "Benini"], [213, 3, 1, "", "Bernoulli"], [213, 1, 1, "", "BernoulliProcess"], [213, 3, 1, "", "Beta"], [213, 3, 1, "", "BetaBinomial"], [213, 3, 1, "", "BetaNoncentral"], [213, 3, 1, "", "BetaPrime"], [213, 3, 1, "", "Binomial"], [213, 3, 1, "", "BoundedPareto"], [213, 3, 1, "", "Cauchy"], [213, 1, 1, "", "CentralMoment"], [213, 3, 1, "", "Chi"], [213, 3, 1, "", "ChiNoncentral"], [213, 3, 1, "", "ChiSquared"], [213, 3, 1, "", "Coin"], [213, 1, 1, "", "ContinuousMarkovChain"], [213, 3, 1, "", "ContinuousRV"], [213, 1, 1, "", "Covariance"], [213, 1, 1, "", "CrossCovarianceMatrix"], [213, 3, 1, "", "Dagum"], [213, 3, 1, "", "Die"], [213, 1, 1, "", "DiscreteMarkovChain"], [213, 3, 1, "", "DiscreteUniform"], [213, 3, 1, "", "E"], [213, 3, 1, "", "Erlang"], [213, 3, 1, "", "ExGaussian"], [213, 1, 1, "", "Expectation"], [213, 1, 1, "", "ExpectationMatrix"], [213, 3, 1, "", "Exponential"], [213, 3, 1, "", "FDistribution"], [213, 3, 1, "", "FiniteRV"], [213, 3, 1, "", "FisherZ"], [213, 3, 1, "", "Frechet"], [213, 3, 1, "", "Gamma"], [213, 3, 1, "", "GammaInverse"], [213, 1, 1, "", "GammaProcess"], [213, 3, 1, "", "GeneralizedMultivariateLogGamma"], [213, 3, 1, "", "GeneralizedMultivariateLogGammaOmega"], [213, 3, 1, "", "Geometric"], [213, 3, 1, "", "Gompertz"], [213, 3, 1, "", "Gumbel"], [213, 3, 1, "", "Hermite"], [213, 3, 1, "", "Hypergeometric"], [213, 3, 1, "", "JointRV"], [213, 3, 1, "", "Kumaraswamy"], [213, 3, 1, "", "Laplace"], [213, 3, 1, "", "Levy"], [213, 3, 1, "", "LogLogistic"], [213, 3, 1, "", "LogNormal"], [213, 3, 1, "", "Logarithmic"], [213, 3, 1, "", "Logistic"], [213, 3, 1, "", "Lomax"], [213, 3, 1, "", "MatrixGamma"], [213, 3, 1, "", "MatrixNormal"], [213, 3, 1, "", "Maxwell"], [213, 1, 1, "", "Moment"], [213, 3, 1, "", "Moyal"], [213, 3, 1, "", "Multinomial"], [213, 3, 1, "", "MultivariateBeta"], [213, 3, 1, "", "MultivariateEwens"], [213, 3, 1, "", "MultivariateLaplace"], [213, 3, 1, "", "MultivariateNormal"], [213, 3, 1, "", "MultivariateT"], [213, 3, 1, "", "Nakagami"], [213, 3, 1, "", "NegativeBinomial"], [213, 3, 1, "", "NegativeMultinomial"], [213, 3, 1, "", "Normal"], [213, 3, 1, "", "NormalGamma"], [213, 3, 1, "", "P"], [213, 3, 1, "", "Pareto"], [213, 3, 1, "", "Poisson"], [213, 1, 1, "", "PoissonProcess"], [213, 3, 1, "", "PowerFunction"], [213, 1, 1, "", "Probability"], [213, 3, 1, "", "QuadraticU"], [213, 3, 1, "", "Rademacher"], [213, 3, 1, "", "RaisedCosine"], [213, 3, 1, "", "Rayleigh"], [213, 3, 1, "", "Reciprocal"], [213, 3, 1, "", "ShiftedGompertz"], [213, 3, 1, "", "Skellam"], [213, 3, 1, "", "StudentT"], [213, 3, 1, "", "Trapezoidal"], [213, 3, 1, "", "Triangular"], [213, 3, 1, "", "Uniform"], [213, 3, 1, "", "UniformSum"], [213, 1, 1, "", "Variance"], [213, 1, 1, "", "VarianceMatrix"], [213, 3, 1, "", "VonMises"], [213, 3, 1, "", "Wald"], [213, 3, 1, "", "Weibull"], [213, 1, 1, "", "WienerProcess"], [213, 3, 1, "", "WignerSemicircle"], [213, 3, 1, "", "Wishart"], [213, 3, 1, "", "YuleSimon"], [213, 3, 1, "", "Zeta"], [213, 3, 1, "", "cmoment"], [213, 3, 1, "", "correlation"], [213, 3, 1, "", "coskewness"], [213, 3, 1, "", "covariance"], [213, 0, 0, "-", "crv"], [213, 0, 0, "-", "crv_types"], [213, 3, 1, "", "density"], [213, 3, 1, "", "entropy"], [213, 3, 1, "", "factorial_moment"], [213, 0, 0, "-", "frv"], [213, 0, 0, "-", "frv_types"], [213, 3, 1, "", "given"], [213, 3, 1, "", "kurtosis"], [213, 3, 1, "", "marginal_distribution"], [213, 3, 1, "", "median"], [213, 3, 1, "", "moment"], [213, 3, 1, "", "quantile"], [213, 0, 0, "-", "rv"], [213, 3, 1, "", "sample"], [213, 3, 1, "", "sample_iter"], [213, 3, 1, "", "skewness"], [213, 3, 1, "", "std"], [213, 3, 1, "", "variance"], [213, 3, 1, "", "where"]], "sympy.stats.BernoulliProcess": [[213, 2, 1, "", "expectation"], [213, 2, 1, "", "probability"]], "sympy.stats.DiscreteMarkovChain": [[213, 2, 1, "", "absorbing_probabilities"], [213, 2, 1, "", "canonical_form"], [213, 2, 1, "", "communication_classes"], [213, 2, 1, "", "decompose"], [213, 2, 1, "", "fixed_row_vector"], [213, 2, 1, "", "fundamental_matrix"], [213, 4, 1, "", "limiting_distribution"], [213, 2, 1, "", "sample"], [213, 2, 1, "", "stationary_distribution"], [213, 4, 1, "", "transition_probabilities"]], "sympy.stats.compound_rv": [[213, 1, 1, "", "CompoundDistribution"]], "sympy.stats.crv": [[213, 1, 1, "", "ContinuousDomain"], [213, 1, 1, "", "ContinuousPSpace"]], "sympy.stats.crv_types": [[213, 1, 1, "", "NormalPSpace"]], "sympy.stats.crv_types.sympy.stats": [[213, 3, 1, "", "Die"], [213, 3, 1, "", "Normal"]], "sympy.stats.frv": [[213, 1, 1, "", "FiniteDomain"], [213, 1, 1, "", "FinitePSpace"]], "sympy.stats.frv_types": [[213, 1, 1, "", "DiePSpace"]], "sympy.stats.rv": [[213, 1, 1, "", "ConditionalDomain"], [213, 1, 1, "", "PSpace"], [213, 1, 1, "", "ProductDomain"], [213, 1, 1, "", "ProductPSpace"], [213, 1, 1, "", "RandomDomain"], [213, 1, 1, "", "RandomSymbol"], [213, 1, 1, "", "SingleDomain"], [213, 1, 1, "", "SinglePSpace"], [213, 3, 1, "", "pspace"], [213, 3, 1, "", "random_symbols"], [213, 3, 1, "", "rs_swap"], [213, 3, 1, "", "sampling_E"], [213, 3, 1, "", "sampling_P"], [213, 3, 1, "", "sampling_density"]], "sympy.tensor": [[214, 0, 0, "-", "array"], [217, 0, 0, "-", "index_methods"], [218, 0, 0, "-", "indexed"], [219, 0, 0, "-", "tensor"], [220, 0, 0, "-", "toperators"]], "sympy.tensor.array": [[214, 1, 1, "", "ImmutableDenseNDimArray"], [214, 1, 1, "", "ImmutableSparseNDimArray"], [214, 1, 1, "", "MutableDenseNDimArray"], [214, 1, 1, "", "MutableSparseNDimArray"], [214, 3, 1, "", "derive_by_array"], [215, 0, 0, "-", "expressions"], [214, 3, 1, "", "permutedims"], [214, 3, 1, "", "tensorcontraction"], [214, 3, 1, "", "tensordiagonal"], [214, 3, 1, "", "tensorproduct"]], "sympy.tensor.index_methods": [[217, 3, 1, "", "get_contraction_structure"], [217, 3, 1, "", "get_indices"]], "sympy.tensor.indexed": [[218, 1, 1, "", "Idx"], [218, 1, 1, "", "Indexed"], [218, 1, 1, "", "IndexedBase"]], "sympy.tensor.indexed.Idx": [[218, 4, 1, "", "label"], [218, 4, 1, "", "lower"], [218, 4, 1, "", "upper"]], "sympy.tensor.indexed.Indexed": [[218, 4, 1, "", "base"], [218, 4, 1, "", "indices"], [218, 4, 1, "", "ranges"], [218, 4, 1, "", "rank"], [218, 4, 1, "", "shape"]], "sympy.tensor.indexed.IndexedBase": [[218, 4, 1, "", "label"], [218, 4, 1, "", "offset"], [218, 4, 1, "", "shape"], [218, 4, 1, "", "strides"]], "sympy.tensor.tensor": [[219, 1, 1, "", "TensAdd"], [219, 1, 1, "", "TensExpr"], [219, 1, 1, "", "TensMul"], [219, 1, 1, "", "TensorHead"], [219, 1, 1, "", "TensorIndex"], [219, 1, 1, "", "TensorIndexType"], [219, 1, 1, "", "TensorSymmetry"], [219, 1, 1, "", "TensorType"], [219, 1, 1, "", "_TensorManager"], [219, 3, 1, "", "canon_bp"], [219, 3, 1, "", "riemann_cyclic"], [219, 3, 1, "", "riemann_cyclic_replace"], [219, 3, 1, "", "tensor_heads"], [219, 3, 1, "", "tensorsymmetry"]], "sympy.tensor.tensor.TensAdd": [[219, 2, 1, "", "canon_bp"], [219, 2, 1, "", "contract_metric"]], "sympy.tensor.tensor.TensExpr": [[219, 2, 1, "", "get_matrix"], [219, 2, 1, "", "replace_with_arrays"]], "sympy.tensor.tensor.TensMul": [[219, 2, 1, "", "canon_bp"], [219, 2, 1, "", "contract_metric"], [219, 2, 1, "", "get_free_indices"], [219, 2, 1, "", "get_indices"], [219, 2, 1, "", "perm2tensor"], [219, 2, 1, "", "sorted_components"], [219, 2, 1, "", "split"]], "sympy.tensor.tensor.TensorHead": [[219, 2, 1, "", "commutes_with"]], "sympy.tensor.tensor.TensorSymmetry": [[219, 2, 1, "", "direct_product"], [219, 2, 1, "", "fully_symmetric"], [219, 2, 1, "", "no_symmetry"], [219, 2, 1, "", "riemann"]], "sympy.tensor.tensor._TensorManager": [[219, 2, 1, "", "clear"], [219, 2, 1, "", "comm_i2symbol"], [219, 2, 1, "", "comm_symbols2i"], [219, 2, 1, "", "get_comm"], [219, 2, 1, "", "set_comm"], [219, 2, 1, "", "set_comms"]], "sympy.tensor.toperators": [[220, 1, 1, "", "PartialDerivative"]], "sympy.testing": [[222, 0, 0, "-", "pytest"], [223, 0, 0, "-", "randtest"], [224, 0, 0, "-", "runtests"]], "sympy.testing.pytest": [[222, 3, 1, "", "SKIP"], [222, 3, 1, "", "nocache_fail"], [222, 3, 1, "", "raises"], [222, 3, 1, "", "warns"], [222, 3, 1, "", "warns_deprecated_sympy"]], "sympy.testing.runtests": [[224, 1, 1, "", "PyTestReporter"], [224, 1, 1, "", "Reporter"], [224, 1, 1, "", "SymPyDocTestFinder"], [224, 1, 1, "", "SymPyDocTestRunner"], [224, 1, 1, "", "SymPyOutputChecker"], [224, 1, 1, "", "SymPyTestResults"], [224, 3, 1, "", "convert_to_native_paths"], [224, 3, 1, "", "doctest"], [224, 3, 1, "", "get_sympy_dir"], [224, 3, 1, "", "raise_on_deprecated"], [224, 3, 1, "", "run_all_tests"], [224, 3, 1, "", "run_in_subprocess_with_hash_randomization"], [224, 3, 1, "", "split_list"], [224, 3, 1, "", "sympytestfile"], [224, 3, 1, "", "test"]], "sympy.testing.runtests.PyTestReporter": [[224, 2, 1, "", "write"]], "sympy.testing.runtests.SymPyDocTestRunner": [[224, 2, 1, "", "run"]], "sympy.testing.runtests.SymPyOutputChecker": [[224, 2, 1, "", "check_output"]], "sympy.testing.runtests.SymPyTestResults": [[224, 5, 1, "", "attempted"], [224, 5, 1, "", "failed"]], "sympy.utilities": [[225, 0, 0, "-", "autowrap"], [226, 0, 0, "-", "codegen"], [227, 0, 0, "-", "decorator"], [228, 0, 0, "-", "enumerative"], [229, 0, 0, "-", "exceptions"], [231, 0, 0, "-", "iterables"], [232, 0, 0, "-", "lambdify"], [233, 0, 0, "-", "memoization"], [234, 0, 0, "-", "misc"], [235, 0, 0, "-", "pkgdata"], [236, 0, 0, "-", "source"], [237, 0, 0, "-", "timeutils"]], "sympy.utilities.autowrap": [[225, 1, 1, "", "CodeWrapper"], [225, 1, 1, "", "CythonCodeWrapper"], [225, 1, 1, "", "DummyWrapper"], [225, 1, 1, "", "F2PyCodeWrapper"], [225, 1, 1, "", "UfuncifyCodeWrapper"], [225, 3, 1, "", "autowrap"], [225, 3, 1, "", "binary_function"], [225, 3, 1, "", "ufuncify"]], "sympy.utilities.autowrap.CythonCodeWrapper": [[225, 2, 1, "", "dump_pyx"]], "sympy.utilities.autowrap.UfuncifyCodeWrapper": [[225, 2, 1, "", "dump_c"]], "sympy.utilities.codegen": [[226, 1, 1, "", "Argument"], [226, 1, 1, "", "CCodeGen"], [226, 1, 1, "", "CodeGen"], [226, 1, 1, "", "DataType"], [226, 1, 1, "", "FCodeGen"], [226, 1, 1, "", "JuliaCodeGen"], [226, 1, 1, "", "OctaveCodeGen"], [226, 1, 1, "", "OutputArgument"], [226, 1, 1, "", "Result"], [226, 1, 1, "", "Routine"], [226, 1, 1, "", "RustCodeGen"], [226, 3, 1, "", "codegen"], [226, 3, 1, "", "get_default_datatype"], [226, 3, 1, "", "make_routine"]], "sympy.utilities.codegen.CCodeGen": [[226, 2, 1, "", "dump_c"], [226, 2, 1, "", "dump_h"], [226, 2, 1, "", "get_prototype"]], "sympy.utilities.codegen.CodeGen": [[226, 2, 1, "", "dump_code"], [226, 2, 1, "", "routine"], [226, 2, 1, "", "write"]], "sympy.utilities.codegen.FCodeGen": [[226, 2, 1, "", "dump_f95"], [226, 2, 1, "", "dump_h"], [226, 2, 1, "", "get_interface"]], "sympy.utilities.codegen.JuliaCodeGen": [[226, 2, 1, "", "dump_jl"], [226, 2, 1, "", "routine"]], "sympy.utilities.codegen.OctaveCodeGen": [[226, 2, 1, "", "dump_m"], [226, 2, 1, "", "routine"]], "sympy.utilities.codegen.Routine": [[226, 4, 1, "", "result_variables"], [226, 4, 1, "", "variables"]], "sympy.utilities.codegen.RustCodeGen": [[226, 2, 1, "", "dump_rs"], [226, 2, 1, "", "get_prototype"], [226, 2, 1, "", "routine"]], "sympy.utilities.decorator": [[227, 3, 1, "", "conserve_mpmath_dps"], [227, 3, 1, "", "deprecated"], [227, 3, 1, "", "doctest_depends_on"], [227, 3, 1, "", "memoize_property"], [227, 1, 1, "", "no_attrs_in_subclass"], [227, 3, 1, "", "public"], [227, 3, 1, "", "threaded"], [227, 3, 1, "", "threaded_factory"], [227, 3, 1, "", "xthreaded"]], "sympy.utilities.enumerative": [[228, 1, 1, "", "MultisetPartitionTraverser"], [228, 3, 1, "", "factoring_visitor"], [228, 3, 1, "", "list_visitor"], [228, 3, 1, "", "multiset_partitions_taocp"]], "sympy.utilities.enumerative.MultisetPartitionTraverser": [[228, 2, 1, "", "count_partitions"], [228, 2, 1, "", "enum_all"], [228, 2, 1, "", "enum_large"], [228, 2, 1, "", "enum_range"], [228, 2, 1, "", "enum_small"]], "sympy.utilities.exceptions": [[229, 7, 1, "", "SymPyDeprecationWarning"], [229, 3, 1, "", "ignore_warnings"], [229, 3, 1, "", "sympy_deprecation_warning"]], "sympy.utilities.iterables": [[231, 1, 1, "", "NotIterable"], [231, 3, 1, "", "binary_partitions"], [231, 3, 1, "", "bracelets"], [231, 3, 1, "", "capture"], [231, 3, 1, "", "common_prefix"], [231, 3, 1, "", "common_suffix"], [231, 3, 1, "", "connected_components"], [231, 3, 1, "", "dict_merge"], [231, 3, 1, "", "filter_symbols"], [231, 3, 1, "", "flatten"], [231, 3, 1, "", "generate_bell"], [231, 3, 1, "", "generate_derangements"], [231, 3, 1, "", "generate_involutions"], [231, 3, 1, "", "generate_oriented_forest"], [231, 3, 1, "", "group"], [231, 3, 1, "", "has_dups"], [231, 3, 1, "", "has_variety"], [231, 3, 1, "", "ibin"], [231, 3, 1, "", "iproduct"], [231, 3, 1, "", "is_palindromic"], [231, 3, 1, "", "is_sequence"], [231, 3, 1, "", "iterable"], [231, 3, 1, "", "kbins"], [231, 3, 1, "", "least_rotation"], [231, 3, 1, "", "minlex"], [231, 3, 1, "", "multiset"], [231, 3, 1, "", "multiset_combinations"], [231, 3, 1, "", "multiset_derangements"], [231, 3, 1, "", "multiset_partitions"], [231, 3, 1, "", "multiset_permutations"], [231, 3, 1, "", "necklaces"], [231, 3, 1, "", "numbered_symbols"], [231, 3, 1, "", "ordered_partitions"], [231, 3, 1, "", "partitions"], [231, 3, 1, "", "permute_signs"], [231, 3, 1, "", "postfixes"], [231, 3, 1, "", "prefixes"], [231, 3, 1, "", "random_derangement"], [231, 3, 1, "", "reshape"], [231, 3, 1, "", "rotate_left"], [231, 3, 1, "", "rotate_right"], [231, 3, 1, "", "rotations"], [231, 3, 1, "", "roundrobin"], [231, 3, 1, "", "runs"], [231, 3, 1, "", "sift"], [231, 3, 1, "", "signed_permutations"], [231, 3, 1, "", "strongly_connected_components"], [231, 3, 1, "", "subsets"], [231, 3, 1, "", "take"], [231, 3, 1, "", "topological_sort"], [231, 3, 1, "", "unflatten"], [231, 3, 1, "", "uniq"], [231, 3, 1, "", "variations"]], "sympy.utilities.lambdify": [[232, 3, 1, "", "implemented_function"], [232, 3, 1, "", "lambdastr"], [232, 3, 1, "", "lambdify"]], "sympy.utilities.memoization": [[233, 3, 1, "", "assoc_recurrence_memo"], [233, 3, 1, "", "recurrence_memo"]], "sympy.utilities.misc": [[234, 3, 1, "", "as_int"], [234, 3, 1, "", "debug"], [234, 3, 1, "", "debug_decorator"], [234, 3, 1, "", "filldedent"], [234, 3, 1, "", "find_executable"], [234, 3, 1, "", "func_name"], [234, 3, 1, "", "ordinal"], [234, 3, 1, "", "rawlines"], [234, 3, 1, "", "replace"], [234, 3, 1, "", "strlines"], [234, 3, 1, "", "translate"]], "sympy.utilities.pkgdata": [[235, 3, 1, "", "get_resource"]], "sympy.utilities.source": [[236, 3, 1, "", "get_class"], [236, 3, 1, "", "get_mod_func"], [236, 3, 1, "", "source"]], "sympy.utilities.timeutils": [[237, 3, 1, "", "timed"]], "sympy.vector.coordsysrect": [[238, 1, 1, "", "CoordSys3D"]], "sympy.vector.coordsysrect.CoordSys3D": [[238, 2, 1, "", "__init__"], [238, 2, 1, "", "create_new"], [238, 2, 1, "", "locate_new"], [238, 2, 1, "", "orient_new"], [238, 2, 1, "", "orient_new_axis"], [238, 2, 1, "", "orient_new_body"], [238, 2, 1, "", "orient_new_quaternion"], [238, 2, 1, "", "orient_new_space"], [238, 2, 1, "", "position_wrt"], [238, 2, 1, "", "rotation_matrix"], [238, 2, 1, "", "scalar_map"]], "sympy.vector": [[240, 3, 1, "", "curl"], [240, 3, 1, "", "divergence"], [240, 3, 1, "", "express"], [240, 3, 1, "", "gradient"], [240, 3, 1, "", "is_conservative"], [240, 3, 1, "", "is_solenoidal"], [240, 3, 1, "", "matrix_to_vector"], [240, 3, 1, "", "scalar_potential"], [240, 3, 1, "", "scalar_potential_difference"]], "sympy.vector.deloperator": [[238, 1, 1, "", "Del"]], "sympy.vector.deloperator.Del": [[238, 2, 1, "", "cross"], [238, 2, 1, "", "dot"], [238, 2, 1, "", "gradient"]], "sympy.vector.dyadic": [[238, 1, 1, "", "Dyadic"]], "sympy.vector.dyadic.Dyadic": [[238, 4, 1, "", "components"], [238, 2, 1, "", "cross"], [238, 2, 1, "", "dot"], [238, 2, 1, "", "to_matrix"]], "sympy.vector.implicitregion": [[238, 1, 1, "", "ImplicitRegion"]], "sympy.vector.implicitregion.ImplicitRegion": [[238, 2, 1, "", "multiplicity"], [238, 2, 1, "", "rational_parametrization"], [238, 2, 1, "", "regular_point"], [238, 2, 1, "", "singular_points"]], "sympy.vector.integrals": [[238, 1, 1, "", "ParametricIntegral"], [240, 3, 1, "", "vector_integrate"]], "sympy.vector.orienters": [[239, 1, 1, "", "AxisOrienter"], [239, 1, 1, "", "BodyOrienter"], [239, 1, 1, "", "Orienter"], [239, 1, 1, "", "QuaternionOrienter"], [239, 1, 1, "", "SpaceOrienter"]], "sympy.vector.orienters.AxisOrienter": [[239, 2, 1, "", "__init__"], [239, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.BodyOrienter": [[239, 2, 1, "", "__init__"]], "sympy.vector.orienters.Orienter": [[239, 2, 1, "", "rotation_matrix"]], "sympy.vector.orienters.QuaternionOrienter": [[239, 2, 1, "", "__init__"]], "sympy.vector.orienters.SpaceOrienter": [[239, 2, 1, "", "__init__"]], "sympy.vector.parametricregion": [[238, 1, 1, "", "ParametricRegion"]], "sympy.vector.vector": [[238, 1, 1, "", "Vector"]], "sympy.vector.vector.Vector": [[238, 4, 1, "", "components"], [238, 2, 1, "", "cross"], [238, 2, 1, "", "dot"], [238, 2, 1, "", "magnitude"], [238, 2, 1, "", "normalize"], [238, 2, 1, "", "outer"], [238, 2, 1, "", "projection"], [238, 2, 1, "", "separate"], [238, 2, 1, "", "to_matrix"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:property", "5": "py:attribute", "6": "py:data", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "data", "Python data"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"cite": 0, "sympi": [0, 1, 5, 6, 10, 11, 13, 14, 15, 20, 21, 31, 55, 72, 91, 126, 174, 183, 238, 240, 241, 244, 258, 260, 263], "build": [1, 3], "document": [1, 3, 4, 6, 7, 20], "requir": [1, 4], "depend": [1, 3, 123, 183, 242], "docker": 1, "debian": 1, "ubuntu": 1, "fedora": 1, "mac": 1, "window": [1, 179], "10": [1, 10, 93], "doc": [1, 184], "local": 1, "instal": [1, 21, 91, 267], "logo": 1, "view": 1, "auto": 1, "rebuild": 1, "live": 1, "server": 1, "pdf": 1, "debug": 2, "hard": 3, "option": [3, 186], "recommend": [3, 7], "interact": [3, 77, 179], "us": [3, 7, 10, 14, 31, 49, 52, 73, 74, 90, 93, 119, 123, 124, 177, 179, 190, 212, 242], "print": [3, 10, 31, 77, 102, 109, 168, 173, 193, 268], "pars": [3, 91], "logic": [3, 17, 79, 248, 251], "plot": [3, 10, 96, 139, 179], "lambdifi": [3, 10, 90, 232, 258], "code": [3, 4, 5, 7, 10, 31, 33, 102, 177, 193, 236, 248, 250], "gener": [3, 6, 7, 39, 41, 183, 188, 212, 243, 248, 250], "autowrap": [3, 31, 225], "printer": [3, 31, 193, 268], "test": [3, 5, 10, 46, 79, 192, 221, 223, 224, 265], "onli": [3, 212], "statist": 3, "symengin": 3, "backend": [3, 179], "experiment": [3, 91], "rubi": 3, "integr": [3, 10, 53, 57, 71, 73, 74, 75, 76, 102, 181, 188, 247, 259], "sage": 3, "develop": [3, 5, 49], "get": [3, 5, 11], "sourc": [3, 10, 11, 236], "run": [3, 5, 21, 224], "benchmark": 3, "deprec": [4, 10], "polici": 4, "what": [4, 123, 182, 183, 212, 263, 266], "i": [4, 11, 74, 90, 123, 182, 193, 212, 263], "try": 4, "avoid": 4, "backward": 4, "incompat": 4, "chang": 4, "first": [4, 10], "place": 4, "when": [4, 74], "doe": [4, 11, 212], "public": 4, "api": [4, 70, 74, 76, 98, 120, 175, 212, 225, 226, 245, 248], "Not": 4, "The": [4, 10, 16, 32, 39, 74, 123, 164, 175, 188, 200, 203, 243, 244, 263], "purpos": 4, "technic": 4, "possibl": [4, 265], "how": [4, 18, 74, 177, 212], "long": 4, "should": [4, 90], "last": 4, "checklist": 4, "ad": 4, "releas": 4, "note": [4, 49, 61, 123, 200, 202, 261, 270], "entri": [4, 85], "environ": 5, "setup": 5, "git": [5, 21], "virtual": 5, "docstr": [6, 92, 103, 104, 105, 106, 107, 108, 109, 110, 170, 171, 172, 173, 231, 238, 239, 240], "style": [6, 7], "guid": [6, 7, 18, 120, 175, 245], "guidelin": [6, 7], "format": [6, 7], "section": 6, "1": [6, 10, 20, 74, 93, 111, 123, 135, 209], "singl": [6, 11], "sentenc": 6, "summari": 6, "2": [6, 10, 74, 93, 111, 123, 209], "explan": [6, 12], "3": [6, 10, 76, 93, 111, 160, 209], "exampl": [6, 22, 49, 61, 73, 76, 89, 93, 99, 112, 123, 127, 131, 162, 164, 177, 192, 193, 200, 203, 213, 214, 215, 218, 243, 263, 269], "4": [6, 10, 93, 209], "paramet": [6, 203, 212], "5": [6, 10, 93, 209], "see": [6, 49, 243], "also": [6, 49], "6": [6, 10, 93, 209], "refer": [6, 16, 23, 30, 48, 49, 51, 61, 67, 74, 76, 80, 81, 82, 83, 85, 87, 89, 91, 125, 131, 134, 164, 175, 177, 178, 179, 180, 182, 184, 186, 188, 189, 200, 202, 203, 206, 212, 225, 226, 245, 248], "sampl": [6, 10], "class": [6, 13, 30, 31, 48, 51, 80, 81, 83, 85, 87, 89, 123, 169, 179, 182, 188, 193, 205, 206, 214, 238, 239], "ar": [6, 177, 183, 212], "mathemat": [6, 11, 126], "function": [6, 10, 11, 31, 39, 48, 49, 55, 56, 57, 67, 68, 71, 72, 74, 79, 85, 89, 91, 93, 102, 124, 146, 149, 170, 171, 174, 179, 181, 183, 184, 189, 192, 193, 203, 205, 206, 209, 210, 214, 240, 244, 268, 269], "best": [6, 7], "practic": [6, 7], "write": [6, 7], "import": [6, 10], "sphinx": 6, "cross": [6, 171], "referenc": 6, "type": [7, 31, 57, 170, 209, 212, 213], "narr": 7, "markdown": 7, "prefer": 7, "math": [7, 31], "latex": [7, 91, 268], "head": 7, "spell": 7, "punctuat": 7, "capit": 7, "tone": 7, "contribut": [8, 9, 190], "make": 9, "list": [10, 11], "activ": 10, "silenc": 10, "warn": [10, 229], "version": 10, "12": [], "11": [10, 20, 93], "new": [10, 242], "mathematica": [10, 193], "parser": [10, 111], "redund": 10, "static": 10, "method": [10, 14, 21, 106, 114, 117, 118, 119, 121, 122, 123, 193, 210, 212, 217, 242, 265], "carmichael": 10, "check": 170, "argument": [10, 11, 212], "hadamardproduct": [], "matadd": [], "matmul": [], "some": [10, 126, 212], "travers": [10, 49], "have": [10, 192], "been": 10, "move": [10, 203], "core": [10, 49, 82], "trace": 10, "compat": [10, 215], "submodul": [10, 61], "9": [10, 93], "expr_free_symbol": 10, "stat": [10, 213], "numsampl": 10, "n": [10, 49, 209, 214, 215], "poli": [10, 182, 183, 184, 191], "solver": [10, 191, 207, 208, 209, 211, 212, 270], "rawmatrix": 10, "non": 10, "expr": [10, 49], "object": [10, 13, 218], "matrix": [10, 27, 81, 82, 85, 86, 123, 209, 213, 265], "get_seg": 10, "attribut": [10, 32, 39], "mdft": 10, "physic": [10, 99, 102, 112, 121, 122, 123, 124, 125, 126, 127, 166, 168, 174, 175, 176, 177, 248, 254], "matric": [10, 14, 80, 81, 82, 83, 84, 85, 87, 99, 101, 215, 248, 252, 265], "privat": 10, "sparsematrix": [10, 87], "_smat": 10, "densematrix": 10, "_mat": 10, "laplace_transform": 10, "nocond": 10, "fals": 10, "8": [10, 93], "theanocod": 10, "assumpt": [10, 13, 16, 26, 49], "handler": [10, 16], "askhandl": 10, "relat": [10, 11, 16, 49, 57, 79, 174, 177, 201, 244], "7": [10, 93, 209], "call": 10, "stochasticprocess": 10, "distribut": [10, 186, 213], "randomindexedsymbol": 10, "discretemarkovchain": 10, "absorbing_probabilit": 10, "util": [10, 31, 46, 47, 66, 85, 132, 188, 211, 230, 237, 248, 256], "misc": [10, 26], "find_execut": 10, "mutabl": 10, "diffgeom": 10, "unicod": [10, 268], "pretti": [10, 193, 268], "stringpict": 10, "prettyform": 10, "pretty_symbologi": 10, "xstr": 10, "pass": 10, "set": [10, 13, 27, 61, 177, 201, 212, 268], "oper": [10, 11, 71, 85, 137, 146, 148, 149, 170, 174, 177, 203, 214, 220, 241, 243, 244, 258, 265], "longer": 10, "accept": 10, "arg": [10, 55, 264], "variou": [10, 192], "randtest": 10, "mix": 10, "polynomi": [10, 57, 71, 181, 183, 184, 185, 186, 188, 189, 190, 192, 211, 269], "express": [10, 11, 31, 61, 68, 71, 79, 82, 91, 104, 171, 183, 192, 215, 240, 242, 258, 264], "binari": 10, "print_cycl": 10, "flag": 10, "combinator": [10, 36], "permut": [10, 40, 41], "string": [10, 16, 258], "fallback": 10, "sympifi": [10, 49], "creat": [10, 11, 85], "an": [10, 61, 111, 164, 203, 212, 264], "indefinit": 10, "eq": [10, 49], "tensor": [10, 45, 57, 158, 216, 219, 220], "fun_ev": 10, "__call__": 10, "tensortyp": 10, "dummy_fmt": 10, "tensorindextyp": 10, "metric": 10, "get_kronecker_delta": 10, "get_epsilon": 10, "tensorsymmetri": 10, "tensorhead": 10, "unit": [10, 27, 163, 164, 165, 167], "quantiti": [10, 162, 164, 166, 242], "is_emptyset": 10, "productset": [10, 201], "iter": [10, 201, 231], "set_potential_energi": 10, "mechan": [10, 16, 94, 102, 112, 120, 121, 122, 123, 124, 125, 126, 127, 146, 213], "condit": [10, 74, 201], "conditionset": [10, 201], "max_degre": 10, "get_upper_degre": 10, "properti": [10, 16, 180], "multivariate_result": 10, "dixonresult": 10, "rh": 10, "default": 10, "0": 10, "tupl": [10, 11, 49, 189], "lambda": [10, 49], "evalu": [10, 11, 53, 71, 126, 264], "differentiate_finit": 10, "data": 10, "clear_cach": 10, "clear_subproduct": 10, "keyword": [10, 11], "is_diagonaliz": 10, "row": [10, 265], "col": 10, "jordan_block": 10, "dimens": [10, 61, 161, 164], "scale_factor": 10, "quanit": 10, "classof": 10, "a2idx": 10, "from": [10, 11, 192, 215], "dot": [10, 171, 268], "product": [10, 52, 147, 158, 214, 243], "column": [10, 265], "vector": [10, 39, 49, 120, 168, 169, 170, 174, 175, 176, 177, 186, 238, 240, 241, 242, 244, 245, 246, 247], "geometri": [10, 51, 61, 180], "line3d": 10, "equat": [10, 19, 121, 122, 123, 162, 181, 206, 209, 211, 212, 270], "need": [10, 164], "k": [10, 184], "glossari": [], "gotcha": [11, 16, 111, 261], "pitfal": 11, "introduct": [11, 14, 23, 30, 31, 32, 39, 51, 61, 79, 111, 126, 164, 174, 176, 179, 180, 181, 188, 192, 246, 263], "equal": [11, 49, 261], "sign": [11, 55, 261], "doubl": [11, 54], "variabl": [11, 179, 213, 242], "assign": 11, "between": [11, 16, 166, 183], "symbol": [11, 16, 17, 49, 68, 123, 127, 178, 183, 189, 192, 212, 261, 263], "python": [11, 31], "number": [11, 27, 35, 49, 52, 53, 74, 183, 188, 192, 248, 253], "v": [11, 17, 183], "float": [11, 49, 53], "ration": [11, 27, 49, 183, 184, 189, 192, 195, 201, 209, 269], "immut": [11, 83], "invers": [11, 55, 74], "trig": 11, "sqrt": [11, 55], "special": [11, 15, 31, 57, 189, 201, 269], "dictionari": 11, "help": 11, "within": 11, "solv": [19, 93, 181, 188, 211, 212, 270], "output": [102, 212], "empti": [], "Of": [], "valu": 17, "boolean": [17, 79], "classif": 13, "kind": [13, 49], "func": [13, 264], "finit": [14, 27, 29, 32, 180, 183, 186, 188, 192, 203, 213, 259], "differ": [14, 16, 29, 126, 183, 242, 259], "approxim": [14, 31], "deriv": [14, 49, 177, 214, 244, 259], "A": [14, 113, 116, 117, 118, 119, 123, 263, 270], "direct": [14, 244], "topic": [15, 102, 168, 248, 255], "old": [16, 183], "system": [16, 96, 115, 127, 161, 163, 164, 167, 209, 211, 241, 242, 244, 246], "appli": [16, 74, 203], "input": [16, 212], "predic": [16, 26, 27], "abov": 16, "definit": [16, 27, 67], "implic": 16, "interpret": 16, "other": [16, 21, 68, 174, 242], "is_": 16, "implement": [16, 74, 174, 193, 203, 225, 226, 241, 244], "limit": [16, 73, 111, 198, 200, 259], "combin": [16, 71], "fuzzi": 17, "three": [17, 61], "bool": 17, "custom": [179, 193], "easi": [], "case": 212, "fulli": [], "defin": [], "automat": 192, "eval": [], "remind": [], "kei": [126, 264], "point": [53, 64, 102, 168, 172, 176, 241], "numer": [53, 71, 76, 90, 102, 126], "evalf": [49, 90, 258], "rewrit": [31, 194, 269], "simplif": [53, 79, 202, 205, 269], "doit": [], "expand": [49, 192, 194, 269], "differenti": [51, 71, 102, 211, 212, 270], "as_real_imag": [], "miscellan": [55, 61, 234], "_eval_": [], "complet": 111, "versin": [], "divid": [], "fuse": [], "multipli": [], "add": 49, "fma": [], "addit": 71, "tip": [258, 259, 261, 264, 265], "algebra": [23, 27, 78, 85, 134, 177, 180, 183, 188, 192, 211, 270], "guidanc": [], "your": [], "Into": [], "That": [], "zero": [27, 49, 96, 186, 192, 265], "put": [], "form": [79, 86, 123, 182, 209, 215], "restrict": [], "domain": [181, 183, 184, 189, 192, 212], "solut": [146, 212, 243], "explicitli": [], "repres": [74, 154, 183, 188], "infinit": [27, 212], "result": 192, "substitut": [102, 168, 258], "solveset": 212, "cannot": [], "necessarili": [], "Be": [], "interrog": [], "programmat": [], "can": [], "speed": [102, 123], "up": 268, "all": [], "With": [], "No": [], "close": [], "which": [90, 193], "find": [188, 189], "root": [55, 189, 205], "without": [], "multipl": [71, 177, 188], "factor": [181, 186, 192, 209, 269], "exact": [], "real_root": 55, "nroot": [], "complex": [27, 55, 183, 201], "usag": [61, 111, 127, 183, 243], "tradeoff": [], "accuraci": 53, "etc": [], "analyt": 146, "you": [], "might": [], "includ": [], "ensur": 212, "consist": [], "ani": 212, "denomin": [], "do": 212, "simplifi": [31, 186, 204, 205, 269], "welcom": [], "": [49, 106, 114, 117, 118, 119, 121, 122, 123, 144, 155, 192, 202, 211, 212, 242, 247, 266], "tutori": [206, 257, 262], "anaconda": 21, "mpmath": 21, "question": 21, "abc": 22, "caveat": [22, 91], "quaternion": 23, "ask": 24, "assum": 25, "queri": 26, "content": [26, 36, 56, 69, 75, 185, 197, 207, 216], "perform": 26, "improv": [26, 111], "common": [27, 80, 102, 168, 192, 193, 194, 205], "tautolog": 27, "commut": [27, 140, 180], "calculu": [27, 29, 177, 259], "symmetr": 27, "invert": 27, "orthogon": [27, 57, 189, 244], "unitari": 27, "posit": 27, "upper": 27, "triangular": 27, "lower": 27, "diagon": [27, 214, 265], "full": 27, "rank": 27, "squar": [27, 181, 205], "integ": [27, 49, 55, 183, 201], "element": [27, 123, 183, 188], "real": [27, 183, 201], "singular": [27, 29, 57, 93], "normal": [27, 86, 182, 192], "theori": [27, 30, 248, 253], "even": 27, "odd": 27, "prime": [27, 188], "composit": [27, 71], "order": [27, 49, 189, 200, 203, 209], "neg": 27, "nonzero": 27, "nonposit": 27, "nonneg": 27, "irrat": 27, "extend": [27, 203], "hermitian": 27, "imaginari": 27, "antihermitian": 27, "transcendent": 27, "refin": 28, "weight": 29, "categori": 30, "base": [30, 51, 180, 181, 192, 199, 212], "diagram": 30, "draw": 30, "codegen": [31, 226], "tool": [31, 88, 205], "abstract": [31, 94, 97, 99, 120, 129, 146, 175, 184], "syntax": 31, "tree": [31, 183, 193, 264], "ast": [31, 111], "predefin": 31, "node": 31, "c": [31, 193], "cfunction": 31, "specif": 31, "cnode": 31, "cxxnode": 31, "fortran": [31, 193], "fnode": 31, "algorithm": [31, 32, 144, 155, 186, 189, 195, 200, 203], "pyutil": 31, "cutil": 31, "futil": 31, "present": [32, 39], "group": [32, 34, 37, 39, 40, 164], "overview": [32, 39, 74], "facil": 32, "construct": [32, 39, 215], "free": [32, 181], "word": [32, 39], "coset": 32, "enumer": [32, 54], "todd": 32, "coxet": 32, "cosett": 32, "compress": 32, "standard": 32, "subgroup": 32, "index": [32, 39, 215, 218], "low": 32, "reidemeist": 32, "schreier": 32, "bibliographi": [32, 39], "grai": 33, "constructor": [34, 189, 265], "nilpot": 35, "abelian": 35, "cyclic": 35, "name": 37, "partit": [38, 54, 206, 231], "polycycl": 39, "polycyclicgroup": 39, "collector": 39, "comput": [39, 74, 90, 146, 192, 263], "minim": [39, 188], "uncollect": 39, "subword": 39, "collect": [39, 194, 205, 269], "expon": [39, 192], "depth": [39, 61], "lead": 39, "polyhedron": 42, "prufer": 43, "sequenc": [43, 71, 186, 198, 199], "subset": [44, 52], "canonic": 45, "concret": 48, "hypergeometr": [48, 57, 68, 71, 195, 203, 205], "term": [48, 192, 194, 200], "cach": 49, "cacheit": 49, "basic": [49, 53, 85, 170, 181, 183, 189, 201, 241, 248, 249, 258, 265], "atom": 49, "singleton": [49, 199, 201], "unevaluatedexpr": 49, "atomicexpr": 49, "wild": 49, "dummi": 49, "var": 49, "algebraicnumb": 49, "numbersymbol": 49, "realnumb": 49, "igcd": 49, "ilcm": 49, "seterr": 49, "One": 49, "negativeon": 49, "half": 49, "nan": [49, 123], "infin": 49, "negativeinfin": 49, "complexinfin": 49, "exp1": 49, "imaginaryunit": 49, "pi": 49, "eulergamma": 49, "catalan": [49, 54], "goldenratio": 49, "tribonacciconst": 49, "mod_invers": 49, "power": [49, 190, 195, 201, 205, 263, 269], "pow": 49, "integer_nthroot": 49, "integer_log": 49, "mul": 49, "prod": 49, "mod": 49, "rel": 49, "ne": 49, "lt": 49, "le": 49, "gt": 49, "ge": 49, "greaterthan": 49, "lessthan": 49, "unequ": 49, "strictgreaterthan": 49, "strictlessthan": 49, "multidimension": 49, "wildfunct": 49, "diff": 49, "functionclass": 49, "sub": [49, 90], "poleerror": 49, "count_op": 49, "expand_mul": 49, "expand_log": [49, 269], "expand_func": [49, 269], "expand_trig": [49, 269], "expand_complex": 49, "expand_multinomi": 49, "expand_power_exp": [49, 269], "expand_power_bas": [49, 269], "nfloat": 49, "evalfmixin": 49, "precisionexhaust": 49, "contain": 49, "tuplekind": 49, "dict": 49, "exprtool": 49, "gcd_term": 49, "factor_term": 49, "numberkind": 49, "undefinedkind": 49, "booleankind": 49, "sort": 49, "default_sort_kei": 49, "random": [49, 213], "random_complex_numb": 49, "verify_numer": 49, "test_derivative_numer": 49, "_randrang": 49, "_randint": 49, "bottom_up": 49, "postorder_travers": 49, "preorder_travers": 49, "walk": [49, 264], "cryptographi": 50, "discret": [52, 213], "transform": [52, 74, 76, 91, 242], "fast": 52, "fourier": [52, 196], "theoret": 52, "walsh": 52, "hadamard": 52, "m\u00f6biu": 52, "convolut": 52, "cover": 52, "intersect": [52, 61, 201], "error": [53, 57], "handl": [53, 212], "sum": 53, "combinatori": [54, 205], "bell": 54, "bernoulli": [54, 209], "binomi": 54, "euler": 54, "factori": [54, 181], "subfactori": 54, "factorial2": 54, "fallingfactori": 54, "fibonacci": 54, "tribonacci": 54, "harmon": [54, 57, 135, 160], "luca": 54, "genocchi": 54, "multifactori": 54, "risingfactori": 54, "stirl": 54, "nc": 54, "np": 54, "nt": 54, "elementari": [55, 180, 199, 201], "re": 55, "im": 55, "ab": 55, "conjug": 55, "polar_lift": 55, "periodic_argu": 55, "principal_branch": 55, "trigonometr": [55, 57, 202, 205, 269], "sin": 55, "co": 55, "tan": 55, "cot": 55, "sec": 55, "csc": 55, "sinc": 55, "asin": 55, "aco": 55, "atan": 55, "acot": 55, "asec": 55, "acsc": 55, "atan2": 55, "hyperbol": 55, "hyperbolicfunct": 55, "sinh": 55, "cosh": 55, "tanh": 55, "coth": 55, "sech": 55, "csch": 55, "asinh": 55, "acosh": 55, "atanh": 55, "acoth": 55, "asech": 55, "acsch": 55, "ceil": 55, "floor": 55, "roundfunct": 55, "frac": 55, "exponenti": [55, 57, 209, 269], "exp": 55, "lambertw": 55, "log": 55, "exp_polar": 55, "piecewis": 55, "exprcondpair": 55, "identityfunct": 55, "min": 55, "max": 55, "cbrt": 55, "diracdelta": 57, "heavisid": 57, "gamma": [57, 99], "beta": 57, "fresnel": 57, "logarithm": [57, 269], "bessel": 57, "airi": 57, "b": 57, "spline": 57, "riemann": 57, "zeta": 57, "ellipt": 57, "mathieu": 57, "jacobi": 57, "gegenbau": 57, "chebyshev": 57, "legendr": 57, "hermit": 57, "laguerr": 57, "spheric": 57, "curv": 58, "ellips": 59, "entiti": [60, 61, 179], "avail": 61, "median": 61, "pappu": 61, "hexagon": 61, "theorem": [61, 74, 247], "futur": [61, 102, 111, 168], "work": [61, 192], "truth": [61, 79], "beyond": 61, "visual": [61, 126], "line": 62, "plane": [63, 74], "polygon": [65, 76], "about": [67, 212, 242, 270], "holonom": [67, 68, 69, 71, 72, 115], "convert": [68, 71, 183, 209, 258], "represent": [68, 72, 164, 177, 183], "meijer": [68, 71, 74, 203], "g": [68, 71, 74, 203], "intern": [70, 74, 76, 183, 186, 188, 206, 209], "seri": [71, 179, 190, 195, 196, 197, 200, 259], "expans": [71, 200, 203, 205, 259], "linear": [71, 85, 102, 107, 123, 124, 164, 192, 206, 209], "holonomicfunct": 72, "differentialoper": 72, "differentialoperatoralgebra": 72, "current": 73, "polar": [74, 131], "branch": 74, "argand": 74, "tabl": [74, 79, 203], "lookup": 74, "mellin": 74, "converg": 74, "laplac": 74, "thi": [74, 212], "valid": 74, "exist": 74, "formula": [74, 203], "todo": 76, "bug": 76, "over": [76, 192, 201], "polytop": 76, "For": 76, "2d": 76, "polyhedra": 76, "session": 77, "lie": [78, 209], "equival": [79, 126, 206], "manipul": [79, 85, 104, 185, 186, 189, 190, 212, 264], "infer": 79, "matrixcommon": 80, "matrixkind": 80, "dens": [81, 183, 184, 186], "immutablematrix": [81, 83], "block": 82, "matrixdetermin": 85, "matrixreduct": 85, "matrixsubspac": 85, "matrixeigen": 85, "matrixcalculu": 85, "matrixbas": 85, "except": [85, 91, 186, 229], "numpi": 85, "spars": [87, 88, 183, 184, 186], "immutablesparsematrix": 87, "ntheori": 89, "ecm": 89, "q": 89, "ufuncifi": 90, "aesara": [90, 193], "so": 90, "mathrm": [91, 268], "runtim": 91, "beam": [92, 93, 94], "bend": 93, "problem": [93, 188, 243], "continuum": 94, "truss": [], "control": [95, 96, 97, 98, 179], "pole": 96, "bode": 96, "impuls": 96, "respons": [96, 193], "step": [96, 212], "ramp": 96, "modul": [97, 129, 168, 175, 180, 181, 182, 183, 186, 188, 189, 206, 209, 210, 212, 225], "lti": 98, "high": 99, "energi": [99, 124], "hydrogen": 100, "wavefunct": 100, "potenti": [102, 123, 124, 168, 174, 244], "issu": [102, 111, 123, 168, 265], "advanc": [102, 168, 192, 264, 265], "featur": [102, 168, 260], "choic": 102, "coordin": [102, 114, 123, 179, 241, 242, 244, 246], "acceler": [102, 168, 176, 200], "interfac": [102, 168, 179, 213], "bodi": [103, 124, 247], "msub": 104, "find_dynamicsymbol": 104, "joint": [105, 213], "framework": [], "pinjoint": 105, "prismaticjoint": 105, "jointsmethod": [], "kane": [106, 114, 117, 118, 121, 123], "lagrang": [106, 114, 119, 122, 123], "kanemethod": 106, "lagrangesmethod": 106, "mass": [108, 124, 247], "inertia": [108, 124, 168], "particl": [108, 124, 150], "rigidbodi": 108, "inertia_of_point_mass": 108, "linear_momentum": 108, "angular_momentum": 108, "kinetic_energi": 108, "potential_energi": 108, "lagrangian": [108, 124], "mechanics_print": 109, "mprint": 109, "mpprint": 109, "mlatex": 109, "symbolicsystem": [110, 127], "autolev": [111, 126], "dynam": 111, "onlin": 111, "fix": 111, "switch": 111, "bicycl": 113, "four": [], "bar": [], "linkag": [], "nonminim": 114, "pendulum": 114, "multi": 115, "degre": 115, "freedom": 115, "roll": [116, 117, 118, 119], "disc": [116, 117, 118, 119], "constraint": 118, "forc": 118, "classic": [120, 186], "structur": [121, 122, 164, 206], "background": 123, "directli": [123, 242], "new_method": 123, "kwarg": 123, "a_and_b": 123, "true": 123, "slow": 123, "ha": 123, "zoo": 123, "oo": 123, "further": [123, 261], "rigid": 124, "dyadic": [124, 168, 169, 238, 241, 242], "momentum": 124, "angular": [124, 176], "momenta": 124, "kinet": 124, "user": [126, 206, 209, 210], "rough": 126, "link": 126, "gaussian": [128, 183, 184, 192], "optic": [128, 129], "medium": 130, "wave": 133, "pauli": 134, "quantum": [135, 146, 160], "oscil": [135, 160], "d": [135, 160], "anticommut": 136, "cartesian": 137, "state": [137, 146, 149, 157], "clebsch": 138, "gordan": 138, "coeffici": [138, 186], "circuit": 139, "constant": [141, 164], "dagger": 142, "gate": 143, "grover": 144, "hilbert": 145, "space": [145, 164, 203], "inner": 147, "helper": [149, 193], "box": 150, "qappli": 151, "qft": 152, "qubit": 153, "shor": 155, "spin": 156, "second": 159, "quantiz": 159, "dimension": 162, "analysi": 162, "philosophi": 164, "behind": 164, "literatur": [164, 187, 192], "prefix": 165, "convers": 166, "referencefram": [168, 169, 177], "dynamicsymbol": [168, 171], "essenti": [169, 171, 238, 240], "coordinatesym": 169, "field": [170, 174, 183, 186, 188, 192, 244, 246], "curl": [170, 174, 240, 244], "diverg": [170, 174, 240, 244, 247], "gradient": [170, 174, 240, 244], "scalar_potenti": [170, 240], "scalar_potential_differ": [170, 240], "is_conserv": [170, 240], "is_solenoid": [170, 240], "outer": 171, "time_deriv": 171, "kinemat": [172, 176], "kinematic_equ": 172, "init_vprint": 173, "vprint": 173, "vpprint": 173, "vlatex": 173, "scalar": [174, 244, 246], "conserv": [174, 244], "solenoid": [174, 244], "veloc": 176, "altern": 177, "basi": [177, 186, 188], "frame": 177, "wigner": 178, "credit": 178, "copyright": 178, "author": 178, "plotgrid": 179, "pyglet": 179, "mode": 179, "specifi": 179, "interv": [179, 201], "color": 179, "geometr": 179, "ascii": [179, 268], "art": 179, "agca": 180, "ring": [180, 183, 184], "ideal": 180, "homomorph": [180, 188], "syzygi": 180, "extens": [180, 192], "concept": 181, "divis": [181, 206], "euclidean": 181, "gcd": [181, 186, 192], "lcm": 181, "groebner": [181, 186], "introduc": [182, 183], "domainmatrix": 182, "ddm": 182, "sdm": 182, "dup": 183, "dmp": 183, "polyr": 183, "polynomialr": 183, "choos": 183, "unifi": 183, "gf": 184, "p": [184, 188], "zz": 184, "qq": 184, "mpq": 184, "zz_i": 184, "qq_i": 184, "rr": 184, "cc": 184, "x": 184, "ex": 184, "quotient": 184, "level": 186, "multivari": [186, 192], "univari": [186, 192, 206], "remaind": 186, "subresult": 186, "configur": 186, "modular": 186, "undocu": 186, "main": 188, "decomposit": [188, 189, 192], "adic": 188, "valuat": 188, "subfield": 188, "As": 188, "arithmet": 188, "extra": 189, "monomi": 189, "encod": 189, "formal": [189, 195], "partial": [189, 192, 211, 212], "fraction": [189, 192, 205, 269], "dispers": 189, "rs_seri": 190, "solve_lin_si": 191, "eqs_to_matrix": 191, "sympy_eqs_to_r": 191, "_solve_lin_si": 191, "_solve_lin_sys_compon": 191, "wester": 192, "articl": 192, "simpl": 192, "support": 192, "back": 192, "cyclotom": 192, "reduc": 192, "gr\u00f6bner": 192, "mistak": 193, "prettyprint": 193, "rcodeprint": 193, "mapl": 193, "javascript": 193, "julia": 193, "octav": 193, "matlab": 193, "rust": 193, "gtk": 193, "lambdaprint": 193, "latexprint": 193, "mathmlprint": 193, "pythoncodeprint": 193, "pythonprint": 193, "srepr": [193, 268], "strprinter": 193, "preview": 193, "codeprint": 193, "preced": 193, "dotprint": 193, "subexpress": [194, 205], "detect": 194, "compound": [199, 201, 213], "recurs": [199, 264], "gruntz": 200, "more": [200, 242, 263], "intuit": 200, "residu": 200, "finiteset": 201, "union": 201, "complement": 201, "symmetricdiffer": 201, "disjointunion": 201, "emptyset": 201, "universalset": 201, "natur": 201, "naturals0": 201, "imageset": 201, "rang": 201, "complexregion": 201, "powerset": 201, "setkind": 201, "hongguang": 202, "fu": 202, "rule": [202, 243], "notat": 203, "increment": 203, "decrement": 203, "indic": 203, "reduct": 203, "around": 203, "loos": 203, "end": 203, "confluenc": 203, "separatevar": 205, "nthroot": 205, "kroneckersimp": 205, "besselsimp": 205, "hypersimp": 205, "hypersimilar": 205, "nsimplifi": 205, "posifi": 205, "logcombin": [205, 269], "radsimp": 205, "rad_ration": 205, "collect_sqrt": 205, "collect_const": 205, "ratsimp": 205, "ratsimpmodprim": 205, "trigsimp": [205, 269], "powsimp": [205, 269], "powdenest": [205, 269], "combsimp": [205, 269], "denest": 205, "sqrtdenest": 205, "elimin": 205, "cse": 205, "opt_cs": 205, "tree_cs": 205, "hyperexpand": [205, 269], "epath": 205, "diophantin": [206, 211, 212], "classify_diop": 206, "diop_solv": 206, "diop_linear": 206, "base_solution_linear": 206, "diop_quadrat": 206, "diop_dn": 206, "cornacchia": 206, "diop_bf_dn": 206, "transformation_to_dn": 206, "transformation_to_norm": 206, "find_dn": 206, "diop_ternary_quadrat": 206, "square_factor": 206, "descent": 206, "diop_general_pythagorean": 206, "diop_general_sum_of_squar": 206, "diop_general_sum_of_even_pow": 206, "power_represent": 206, "sum_of_three_squar": 206, "sum_of_four_squar": 206, "sum_of_pow": 206, "sum_of_squar": 206, "merge_solut": 206, "pqa": 206, "parametrize_ternary_quadrat": 206, "diop_ternary_quadratic_norm": 206, "ldescent": 206, "gaussian_reduc": 206, "holzer": 206, "prime_as_sum_of_two_squar": 206, "sqf_normal": 206, "reconstruct": 206, "diophantinesolutionset": 206, "diophantineequationtyp": 206, "binaryquadrat": 206, "inhomogeneousternaryquadrat": 206, "homogeneousternaryquadraticnorm": 206, "homogeneousternaryquadrat": 206, "inhomogeneousgeneralquadrat": 206, "homogeneousgeneralquadrat": 206, "generalsumofsquar": 206, "generalpythagorean": 206, "cubicthu": 206, "generalsumofevenpow": 206, "inequ": [208, 211, 212], "od": [209, 211, 212], "dsolv": 209, "dsolve_system": 209, "classify_od": 209, "checkodesol": 209, "homogeneous_ord": 209, "infinitesim": 209, "checkinfsol": 209, "constantsimp": 209, "hint": [209, 210], "allhint": 209, "odesimp": 209, "constant_renumb": 209, "sol_simpl": 209, "1st_exact": 209, "1st_homogeneous_coeff_best": 209, "1st_homogeneous_coeff_subs_dep_div_indep": 209, "1st_homogeneous_coeff_subs_indep_div_dep": 209, "1st_linear": 209, "1st_rational_riccati": 209, "2nd_linear_airi": 209, "2nd_linear_bessel": 209, "liouvil": 209, "riccati_special_minus2": 209, "nth_linear_constant_coeff_homogen": 209, "nth_linear_constant_coeff_undetermined_coeffici": 209, "nth_linear_constant_coeff_variation_of_paramet": 209, "nth_linear_euler_eq_homogen": 209, "nth_linear_euler_eq_nonhomogeneous_variation_of_paramet": 209, "nth_linear_euler_eq_nonhomogeneous_undetermined_coeffici": 209, "nth_algebra": 209, "nth_order_reduc": 209, "separ": 209, "almost_linear": 209, "linear_coeffici": 209, "separable_reduc": 209, "lie_group": 209, "2nd_hypergeometr": 209, "1st_power_seri": 209, "2nd_power_series_ordinari": 209, "2nd_power_series_regular": 209, "heurist": 209, "abaco1_simpl": 209, "abaco1_product": 209, "bivari": 209, "chi": 209, "abaco2_similar": 209, "function_sum": 209, "abaco2_unique_unknown": 209, "abaco2_unique_gener": 209, "riccati": 209, "riccati_norm": 209, "riccati_inverse_norm": 209, "riccati_reduc": 209, "construct_c": 209, "construct_d": 209, "rational_laurent_seri": 209, "compute_m_ybar": 209, "solve_aux_eq": 209, "remove_redundant_sol": 209, "get_gen_sol_from_part_sol": 209, "solve_riccati": 209, "canon": 209, "linodesolv": 209, "inform": [209, 210], "jordan": 209, "nonlinear": 209, "pde": [210, 211, 212], "pde_separ": 210, "pde_separate_add": 210, "pde_separate_mul": 210, "pdsolv": 210, "classify_pd": 210, "checkpdesol": 210, "pde_1st_linear_constant_coeff_homogen": 210, "pde_1st_linear_constant_coeff": 210, "pde_1st_linear_variable_coeff": 210, "ordinari": [211, 212], "deutil": 211, "recurr": 211, "de": [211, 212], "wrong": 212, "why": [212, 263], "we": 212, "emploi": 212, "return": 212, "search": 212, "deal": 212, "where": 212, "known": 212, "plan": 212, "linear_eq_to_matrix": 212, "linsolv": 212, "nonlinsolv": 212, "transolv": 212, "continu": [213, 269], "stochast": 213, "process": 213, "dim": [214, 215], "arrai": [214, 215], "contract": 214, "explicit": 215, "pytest": 222, "randomis": 223, "detail": [225, 226, 241], "routin": 226, "decor": 227, "enum": 228, "variat": 231, "memoiz": 233, "pkgdata": 235, "inspect": 236, "time": 237, "coordsys3d": [238, 242], "del": [238, 243, 244], "parametricregion": 238, "implicitregion": 238, "parametricintegr": 238, "orient": [239, 242], "axisorient": 239, "bodyorient": 239, "spaceorient": 239, "quaternionorient": 239, "matrix_to_vector": 240, "vector_integr": 240, "locat": 242, "orient_new": 242, "AND": 242, "quadrilater": 243, "third": 243, "curvilinear": 244, "applic": 247, "calcul": 247, "perimet": 247, "surfac": 247, "area": 247, "volum": 247, "flux": 247, "verifi": 247, "stoke": 247, "introductori": [257, 262], "quick": [258, 259, 261, 264, 265], "two": 261, "final": 261, "read": 261, "interest": 263, "understand": 264, "through": 264, "invari": 264, "prevent": 264, "shape": 265, "access": 265, "delet": 265, "insert": 265, "determin": 265, "rref": 265, "nullspac": 265, "columnspac": 265, "eigenvalu": 265, "eigenvector": 265, "next": 266, "preliminari": 267, "exercis": 267, "str": 268, "mathml": 268, "cancel": 269, "apart": 269, "gammasimp": 269, "versu": [], "consid": [], "all_root": [], "given": [], "Its": [], "independ": [], "initi": [], "boundari": [], "bewar": [], "copi": [], "past": [], "extract": [], "pair": [], "arbitrari": [], "unevalu": [], "select": [], "If": [], "encount": [], "found": [], "increas": [], "precis": [], "scipi": [], "report": [], "must": [], "sever": [], "same": [], "titl": [], "Then": [], "mention": [], "dev": 20}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 56}})